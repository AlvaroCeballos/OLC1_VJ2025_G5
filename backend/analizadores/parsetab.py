
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightUMENOSleftANDleftORleftXORrightNOTleftIGUALACIONMENORMAYORMENOR_IGUALMAYOR_IGUALDIFERENCIACIONleftSUMARESTAleftMULTIPLICACIONDIVISIONnonassocPOTENCIAMODULOAND ARROBA BOOL BREAK CADENAS CARACTER CASE CHAR COMA COMENTARIO_MULTILINEA COMENTARIO_UNA_LINEA CONTINUE DECIMAL DECREMENTO DEFAULT DIFERENCIACION DIVISION DO DOS_PUNTOS ELSE ENTERO FALSE FLOAT FOR ID IDENTIFICADOR IF IGUAL IGUALACION INCREMENTO INT LLA LLC MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NOT OR PARA PARC POTENCIA PRINTLN PYC RESTA RETURN STR SUMA SWITCH TRUE UMENOS VAR WHILE XOR\n    ini : instrucciones\n    \n    instrucciones : instrucciones instruccion\n    instrucciones : \n    instrucciones : instruccion\n    \n    instruccion : instruccion_println\n                | declaracion_variable PYC\n                | asignacion_variable PYC\n                | estructura_control\n                | incremento PYC\n                | decremento PYC\n    \n    estructura_control : instruccion_while\n                       | instruccion_if\n                       | instruccion_switch\n                       | instruccion_dowhile\n                       | instruccion_for\n    \n    instruccion_while : WHILE PARA expresion PARC LLA instrucciones LLC\n    \n    instruccion_for : FOR PARA declaracion_variable PYC expresion PYC actualizacion PARC LLA instrucciones LLC\n    \n    actualizacion : incremento\n                   | decremento\n                   | expresion\n                   | asignacion_variable\n    \n    instruccion_switch : SWITCH PARA expresion PARC LLA lista_case default_opcional LLC\n    \n    instruccion_dowhile : DO LLA instrucciones LLC WHILE PARA expresion PARC PYC\n    \n    lista_case : lista_case case_unico\n                | case_unico\n\n    \n    case_unico : CASE expresion DOS_PUNTOS instrucciones\n    \n    default_opcional : DEFAULT DOS_PUNTOS instrucciones\n                     | \n     \n    instruccion_if : base_if\n                   | base_if ELSE LLA instrucciones LLC\n                   | base_if ELSE instruccion_if                 \n     \n    base_if : IF PARA expresion PARC LLA instrucciones LLC\n    \n    incremento : ID INCREMENTO\n    \n    decremento : ID DECREMENTO\n    instruccion_println : PRINTLN PARA expresion PARC PYC\n    literal : CARACTER\n    \n    declaracion_variable : tipo ID IGUAL expresion\n                        | tipo ID\n    \n    asignacion_variable : ID IGUAL expresion\n    \n    literal : TRUE\n            | FALSE\n    \n    expresion : aritmetica\n              | literal\n              | relacional\n\n    expresion : PARA expresion PARC\n    aritmetica : expresion SUMA expresion\n                | expresion RESTA expresion\n                | expresion MULTIPLICACION expresion\n                | expresion DIVISION expresion\n                | expresion POTENCIA expresion\n                | expresion MODULO expresion\n    \n    expresion : expresion OR expresion\n              | expresion AND expresion\n              | expresion XOR expresion\n    expresion : RESTA expresion %prec UMENOS\n    relacional : expresion IGUALACION expresion\n               | expresion DIFERENCIACION expresion\n               | expresion MENOR expresion\n               | expresion MAYOR expresion\n               | expresion MENOR_IGUAL expresion\n               | expresion MAYOR_IGUAL expresion\n    expresion : NOT expresion %prec NOT\n    literal : ENTERO\n    \n    literal : CADENAS\n    \n    literal : DECIMAL\n    \n    literal : ID\n    \n    tipo : INT\n        | FLOAT\n        | STR\n        | CHAR\n        | BOOL\n    instruccion : BREAK PYCinstruccion : CONTINUE PYCdeclaracion_variable : ID ID'
    
_lr_action_items = {'BREAK':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,47,67,68,70,95,101,117,118,122,123,129,130,142,143,144,145,148,149,150,151,152,153,],[10,10,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-72,-73,10,10,-31,10,10,-35,10,-30,10,10,10,-16,-32,-22,10,10,10,10,-23,10,10,-17,]),'CONTINUE':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,47,67,68,70,95,101,117,118,122,123,129,130,142,143,144,145,148,149,150,151,152,153,],[11,11,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-72,-73,11,11,-31,11,11,-35,11,-30,11,11,11,-16,-32,-22,11,11,11,11,-23,11,11,-17,]),'PRINTLN':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,47,67,68,70,95,101,117,118,122,123,129,130,142,143,144,145,148,149,150,151,152,153,],[12,12,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-72,-73,12,12,-31,12,12,-35,12,-30,12,12,12,-16,-32,-22,12,12,12,12,-23,12,12,-17,]),'ID':([0,2,3,4,7,13,14,15,16,17,18,19,20,21,22,23,24,26,31,32,33,34,35,36,37,38,41,44,46,47,48,49,50,55,56,64,67,68,70,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,95,98,101,117,118,122,123,126,127,128,129,130,142,143,144,145,148,149,150,151,152,153,],[14,14,-4,-5,-8,39,40,-11,-12,-13,-14,-15,-67,-68,-69,-70,-71,-29,-2,-6,-7,-9,-10,-72,-73,63,63,63,63,14,72,63,63,63,63,63,14,-31,14,40,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,14,63,-35,14,-30,14,14,63,63,141,14,-16,-32,-22,14,14,14,14,-23,14,14,-17,]),'INT':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,47,48,67,68,70,95,101,117,118,122,123,129,130,142,143,144,145,148,149,150,151,152,153,],[20,20,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-72,-73,20,20,20,-31,20,20,-35,20,-30,20,20,20,-16,-32,-22,20,20,20,20,-23,20,20,-17,]),'FLOAT':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,47,48,67,68,70,95,101,117,118,122,123,129,130,142,143,144,145,148,149,150,151,152,153,],[21,21,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-72,-73,21,21,21,-31,21,21,-35,21,-30,21,21,21,-16,-32,-22,21,21,21,21,-23,21,21,-17,]),'STR':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,47,48,67,68,70,95,101,117,118,122,123,129,130,142,143,144,145,148,149,150,151,152,153,],[22,22,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-72,-73,22,22,22,-31,22,22,-35,22,-30,22,22,22,-16,-32,-22,22,22,22,22,-23,22,22,-17,]),'CHAR':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,47,48,67,68,70,95,101,117,118,122,123,129,130,142,143,144,145,148,149,150,151,152,153,],[23,23,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-72,-73,23,23,23,-31,23,23,-35,23,-30,23,23,23,-16,-32,-22,23,23,23,23,-23,23,23,-17,]),'BOOL':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,47,48,67,68,70,95,101,117,118,122,123,129,130,142,143,144,145,148,149,150,151,152,153,],[24,24,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-72,-73,24,24,24,-31,24,24,-35,24,-30,24,24,24,-16,-32,-22,24,24,24,24,-23,24,24,-17,]),'WHILE':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,47,67,68,70,95,97,101,117,118,122,123,129,130,142,143,144,145,148,149,150,151,152,153,],[25,25,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-72,-73,25,25,-31,25,25,120,-35,25,-30,25,25,25,-16,-32,-22,25,25,25,25,-23,25,25,-17,]),'SWITCH':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,47,67,68,70,95,101,117,118,122,123,129,130,142,143,144,145,148,149,150,151,152,153,],[27,27,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-72,-73,27,27,-31,27,27,-35,27,-30,27,27,27,-16,-32,-22,27,27,27,27,-23,27,27,-17,]),'DO':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,47,67,68,70,95,101,117,118,122,123,129,130,142,143,144,145,148,149,150,151,152,153,],[28,28,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-72,-73,28,28,-31,28,28,-35,28,-30,28,28,28,-16,-32,-22,28,28,28,28,-23,28,28,-17,]),'FOR':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,47,67,68,70,95,101,117,118,122,123,129,130,142,143,144,145,148,149,150,151,152,153,],[29,29,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-72,-73,29,29,-31,29,29,-35,29,-30,29,29,29,-16,-32,-22,29,29,29,29,-23,29,29,-17,]),'IF':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,45,47,67,68,70,95,101,117,118,122,123,129,130,142,143,144,145,148,149,150,151,152,153,],[30,30,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-72,-73,30,30,30,-31,30,30,-35,30,-30,30,30,30,-16,-32,-22,30,30,30,30,-23,30,30,-17,]),'$end':([0,1,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,68,101,118,130,142,143,150,153,],[-3,0,-1,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-72,-73,-31,-35,-30,-16,-32,-22,-23,-17,]),'LLC':([3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,47,67,68,70,95,101,117,118,122,123,124,125,129,130,131,132,142,143,144,145,148,149,150,151,152,153,],[-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-72,-73,-3,-3,-31,97,118,-35,-3,-30,-3,130,-28,-25,142,-16,143,-24,-32,-22,-3,-3,-27,-26,-23,-3,153,-17,]),'DEFAULT':([3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,68,101,118,124,125,130,132,142,143,145,149,150,153,],[-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-72,-73,-31,-35,-30,133,-25,-16,-24,-32,-22,-3,-26,-23,-17,]),'CASE':([3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,68,101,118,119,124,125,130,132,142,143,145,149,150,153,],[-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-72,-73,-31,-35,-30,126,126,-25,-16,-24,-32,-22,-3,-26,-23,-17,]),'PYC':([5,6,8,9,10,11,39,40,42,43,52,53,54,57,58,59,60,61,62,63,65,71,75,91,92,93,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,121,146,],[32,33,34,35,36,37,-38,-74,-33,-34,-42,-43,-44,-36,-40,-41,-63,-64,-65,-66,-39,98,101,-55,-62,-37,-45,-52,-53,-54,-46,-47,-48,-49,-50,-51,-56,-57,-58,-59,-60,-61,128,150,]),'PARA':([12,25,27,29,30,38,41,44,46,49,50,55,56,64,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,120,126,127,128,],[38,44,46,48,49,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,127,50,50,50,]),'IGUAL':([14,39,141,],[41,64,41,]),'INCREMENTO':([14,141,],[42,42,]),'DECREMENTO':([14,141,],[43,43,]),'ELSE':([26,142,],[45,-32,]),'LLA':([28,45,94,96,99,147,],[47,67,117,119,122,151,]),'RESTA':([38,41,44,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,121,126,127,128,134,135,136,141,],[55,55,55,55,55,55,80,-42,-43,-44,55,55,-36,-40,-41,-63,-64,-65,-66,55,80,80,80,80,80,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,80,80,80,55,-45,80,80,80,-46,-47,-48,-49,-50,-51,80,80,80,80,80,80,80,55,55,55,80,80,80,-66,]),'NOT':([38,41,44,46,49,50,55,56,64,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,126,127,128,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'CARACTER':([38,41,44,46,49,50,55,56,64,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,126,127,128,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'TRUE':([38,41,44,46,49,50,55,56,64,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,126,127,128,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'FALSE':([38,41,44,46,49,50,55,56,64,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,126,127,128,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'ENTERO':([38,41,44,46,49,50,55,56,64,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,126,127,128,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'CADENAS':([38,41,44,46,49,50,55,56,64,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,126,127,128,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'DECIMAL':([38,41,44,46,49,50,55,56,64,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,126,127,128,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'PARC':([42,43,51,52,53,54,57,58,59,60,61,62,63,65,66,69,73,74,91,92,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,135,136,137,138,139,140,141,],[-33,-34,75,-42,-43,-44,-36,-40,-41,-63,-64,-65,-66,-39,94,96,99,100,-55,-62,-45,-52,-53,-54,-46,-47,-48,-49,-50,-51,-56,-57,-58,-59,-60,-61,146,-20,147,-18,-19,-21,-66,]),'OR':([51,52,53,54,57,58,59,60,61,62,63,65,66,69,73,74,91,92,93,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,121,134,135,136,141,],[76,-42,-43,-44,-36,-40,-41,-63,-64,-65,-66,76,76,76,76,76,76,-62,76,-45,-52,76,-54,-46,-47,-48,-49,-50,-51,-56,-57,-58,-59,-60,-61,76,76,76,76,-66,]),'AND':([51,52,53,54,57,58,59,60,61,62,63,65,66,69,73,74,91,92,93,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,121,134,135,136,141,],[77,-42,-43,-44,-36,-40,-41,-63,-64,-65,-66,77,77,77,77,77,77,-62,77,-45,-52,-53,-54,-46,-47,-48,-49,-50,-51,-56,-57,-58,-59,-60,-61,77,77,77,77,-66,]),'XOR':([51,52,53,54,57,58,59,60,61,62,63,65,66,69,73,74,91,92,93,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,121,134,135,136,141,],[78,-42,-43,-44,-36,-40,-41,-63,-64,-65,-66,78,78,78,78,78,78,-62,78,-45,78,78,-54,-46,-47,-48,-49,-50,-51,-56,-57,-58,-59,-60,-61,78,78,78,78,-66,]),'SUMA':([51,52,53,54,57,58,59,60,61,62,63,65,66,69,73,74,91,92,93,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,121,134,135,136,141,],[79,-42,-43,-44,-36,-40,-41,-63,-64,-65,-66,79,79,79,79,79,79,79,79,-45,79,79,79,-46,-47,-48,-49,-50,-51,79,79,79,79,79,79,79,79,79,79,-66,]),'MULTIPLICACION':([51,52,53,54,57,58,59,60,61,62,63,65,66,69,73,74,91,92,93,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,121,134,135,136,141,],[81,-42,-43,-44,-36,-40,-41,-63,-64,-65,-66,81,81,81,81,81,81,81,81,-45,81,81,81,81,81,-48,-49,-50,-51,81,81,81,81,81,81,81,81,81,81,-66,]),'DIVISION':([51,52,53,54,57,58,59,60,61,62,63,65,66,69,73,74,91,92,93,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,121,134,135,136,141,],[82,-42,-43,-44,-36,-40,-41,-63,-64,-65,-66,82,82,82,82,82,82,82,82,-45,82,82,82,82,82,-48,-49,-50,-51,82,82,82,82,82,82,82,82,82,82,-66,]),'POTENCIA':([51,52,53,54,57,58,59,60,61,62,63,65,66,69,73,74,91,92,93,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,121,134,135,136,141,],[83,-42,-43,-44,-36,-40,-41,-63,-64,-65,-66,83,83,83,83,83,83,83,83,-45,83,83,83,83,83,83,83,None,None,83,83,83,83,83,83,83,83,83,83,-66,]),'MODULO':([51,52,53,54,57,58,59,60,61,62,63,65,66,69,73,74,91,92,93,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,121,134,135,136,141,],[84,-42,-43,-44,-36,-40,-41,-63,-64,-65,-66,84,84,84,84,84,84,84,84,-45,84,84,84,84,84,84,84,None,None,84,84,84,84,84,84,84,84,84,84,-66,]),'IGUALACION':([51,52,53,54,57,58,59,60,61,62,63,65,66,69,73,74,91,92,93,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,121,134,135,136,141,],[85,-42,-43,-44,-36,-40,-41,-63,-64,-65,-66,85,85,85,85,85,85,85,85,-45,85,85,85,-46,-47,-48,-49,-50,-51,-56,-57,-58,-59,-60,-61,85,85,85,85,-66,]),'DIFERENCIACION':([51,52,53,54,57,58,59,60,61,62,63,65,66,69,73,74,91,92,93,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,121,134,135,136,141,],[86,-42,-43,-44,-36,-40,-41,-63,-64,-65,-66,86,86,86,86,86,86,86,86,-45,86,86,86,-46,-47,-48,-49,-50,-51,-56,-57,-58,-59,-60,-61,86,86,86,86,-66,]),'MENOR':([51,52,53,54,57,58,59,60,61,62,63,65,66,69,73,74,91,92,93,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,121,134,135,136,141,],[87,-42,-43,-44,-36,-40,-41,-63,-64,-65,-66,87,87,87,87,87,87,87,87,-45,87,87,87,-46,-47,-48,-49,-50,-51,-56,-57,-58,-59,-60,-61,87,87,87,87,-66,]),'MAYOR':([51,52,53,54,57,58,59,60,61,62,63,65,66,69,73,74,91,92,93,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,121,134,135,136,141,],[88,-42,-43,-44,-36,-40,-41,-63,-64,-65,-66,88,88,88,88,88,88,88,88,-45,88,88,88,-46,-47,-48,-49,-50,-51,-56,-57,-58,-59,-60,-61,88,88,88,88,-66,]),'MENOR_IGUAL':([51,52,53,54,57,58,59,60,61,62,63,65,66,69,73,74,91,92,93,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,121,134,135,136,141,],[89,-42,-43,-44,-36,-40,-41,-63,-64,-65,-66,89,89,89,89,89,89,89,89,-45,89,89,89,-46,-47,-48,-49,-50,-51,-56,-57,-58,-59,-60,-61,89,89,89,89,-66,]),'MAYOR_IGUAL':([51,52,53,54,57,58,59,60,61,62,63,65,66,69,73,74,91,92,93,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,121,134,135,136,141,],[90,-42,-43,-44,-36,-40,-41,-63,-64,-65,-66,90,90,90,90,90,90,90,90,-45,90,90,90,-46,-47,-48,-49,-50,-51,-56,-57,-58,-59,-60,-61,90,90,90,90,-66,]),'DOS_PUNTOS':([52,53,54,57,58,59,60,61,62,63,91,92,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,133,134,],[-42,-43,-44,-36,-40,-41,-63,-64,-65,-66,-55,-62,-45,-52,-53,-54,-46,-47,-48,-49,-50,-51,-56,-57,-58,-59,-60,-61,144,145,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ini':([0,],[1,]),'instrucciones':([0,47,67,117,122,144,145,151,],[2,70,95,123,129,148,149,152,]),'instruccion':([0,2,47,67,70,95,117,122,123,129,144,145,148,149,151,152,],[3,31,3,3,31,31,3,3,31,31,3,3,31,31,3,31,]),'instruccion_println':([0,2,47,67,70,95,117,122,123,129,144,145,148,149,151,152,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'declaracion_variable':([0,2,47,48,67,70,95,117,122,123,129,144,145,148,149,151,152,],[5,5,5,71,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'asignacion_variable':([0,2,47,67,70,95,117,122,123,128,129,144,145,148,149,151,152,],[6,6,6,6,6,6,6,6,6,140,6,6,6,6,6,6,6,]),'estructura_control':([0,2,47,67,70,95,117,122,123,129,144,145,148,149,151,152,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'incremento':([0,2,47,67,70,95,117,122,123,128,129,144,145,148,149,151,152,],[8,8,8,8,8,8,8,8,8,138,8,8,8,8,8,8,8,]),'decremento':([0,2,47,67,70,95,117,122,123,128,129,144,145,148,149,151,152,],[9,9,9,9,9,9,9,9,9,139,9,9,9,9,9,9,9,]),'tipo':([0,2,47,48,67,70,95,117,122,123,129,144,145,148,149,151,152,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'instruccion_while':([0,2,47,67,70,95,117,122,123,129,144,145,148,149,151,152,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'instruccion_if':([0,2,45,47,67,70,95,117,122,123,129,144,145,148,149,151,152,],[16,16,68,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'instruccion_switch':([0,2,47,67,70,95,117,122,123,129,144,145,148,149,151,152,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'instruccion_dowhile':([0,2,47,67,70,95,117,122,123,129,144,145,148,149,151,152,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'instruccion_for':([0,2,47,67,70,95,117,122,123,129,144,145,148,149,151,152,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'base_if':([0,2,45,47,67,70,95,117,122,123,129,144,145,148,149,151,152,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'expresion':([38,41,44,46,49,50,55,56,64,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,126,127,128,],[51,65,66,69,73,74,91,92,93,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,121,134,135,136,]),'aritmetica':([38,41,44,46,49,50,55,56,64,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,126,127,128,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'literal':([38,41,44,46,49,50,55,56,64,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,126,127,128,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'relacional':([38,41,44,46,49,50,55,56,64,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,126,127,128,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'lista_case':([119,],[124,]),'case_unico':([119,124,],[125,132,]),'default_opcional':([124,],[131,]),'actualizacion':([128,],[137,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ini","S'",1,None,None,None),
  ('ini -> instrucciones','ini',1,'p_inicio','parser.py',74),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','parser.py',81),
  ('instrucciones -> <empty>','instrucciones',0,'p_instrucciones_empty','parser.py',92),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','parser.py',97),
  ('instruccion -> instruccion_println','instruccion',1,'p_instruccion','parser.py',106),
  ('instruccion -> declaracion_variable PYC','instruccion',2,'p_instruccion','parser.py',107),
  ('instruccion -> asignacion_variable PYC','instruccion',2,'p_instruccion','parser.py',108),
  ('instruccion -> estructura_control','instruccion',1,'p_instruccion','parser.py',109),
  ('instruccion -> incremento PYC','instruccion',2,'p_instruccion','parser.py',110),
  ('instruccion -> decremento PYC','instruccion',2,'p_instruccion','parser.py',111),
  ('estructura_control -> instruccion_while','estructura_control',1,'p_estructura_control','parser.py',125),
  ('estructura_control -> instruccion_if','estructura_control',1,'p_estructura_control','parser.py',126),
  ('estructura_control -> instruccion_switch','estructura_control',1,'p_estructura_control','parser.py',127),
  ('estructura_control -> instruccion_dowhile','estructura_control',1,'p_estructura_control','parser.py',128),
  ('estructura_control -> instruccion_for','estructura_control',1,'p_estructura_control','parser.py',129),
  ('instruccion_while -> WHILE PARA expresion PARC LLA instrucciones LLC','instruccion_while',7,'p_instruccion_while','parser.py',136),
  ('instruccion_for -> FOR PARA declaracion_variable PYC expresion PYC actualizacion PARC LLA instrucciones LLC','instruccion_for',11,'p_instruccion_for','parser.py',148),
  ('actualizacion -> incremento','actualizacion',1,'p_actualizacion','parser.py',168),
  ('actualizacion -> decremento','actualizacion',1,'p_actualizacion','parser.py',169),
  ('actualizacion -> expresion','actualizacion',1,'p_actualizacion','parser.py',170),
  ('actualizacion -> asignacion_variable','actualizacion',1,'p_actualizacion','parser.py',171),
  ('instruccion_switch -> SWITCH PARA expresion PARC LLA lista_case default_opcional LLC','instruccion_switch',8,'p_instruccion_switch','parser.py',177),
  ('instruccion_dowhile -> DO LLA instrucciones LLC WHILE PARA expresion PARC PYC','instruccion_dowhile',9,'p_instruccion_dowhile','parser.py',191),
  ('lista_case -> lista_case case_unico','lista_case',2,'p_lista_case','parser.py',205),
  ('lista_case -> case_unico','lista_case',1,'p_lista_case','parser.py',206),
  ('case_unico -> CASE expresion DOS_PUNTOS instrucciones','case_unico',4,'p_case_unico','parser.py',216),
  ('default_opcional -> DEFAULT DOS_PUNTOS instrucciones','default_opcional',3,'p_default_opcional','parser.py',230),
  ('default_opcional -> <empty>','default_opcional',0,'p_default_opcional','parser.py',231),
  ('instruccion_if -> base_if','instruccion_if',1,'p_instruccion_if','parser.py',239),
  ('instruccion_if -> base_if ELSE LLA instrucciones LLC','instruccion_if',5,'p_instruccion_if','parser.py',240),
  ('instruccion_if -> base_if ELSE instruccion_if','instruccion_if',3,'p_instruccion_if','parser.py',241),
  ('base_if -> IF PARA expresion PARC LLA instrucciones LLC','base_if',7,'p_base_if','parser.py',267),
  ('incremento -> ID INCREMENTO','incremento',2,'p_incremento','parser.py',282),
  ('decremento -> ID DECREMENTO','decremento',2,'p_decremento','parser.py',303),
  ('instruccion_println -> PRINTLN PARA expresion PARC PYC','instruccion_println',5,'p_instruccion_println','parser.py',324),
  ('literal -> CARACTER','literal',1,'p_caracter','parser.py',330),
  ('declaracion_variable -> tipo ID IGUAL expresion','declaracion_variable',4,'p_declaracion_variable','parser.py',338),
  ('declaracion_variable -> tipo ID','declaracion_variable',2,'p_declaracion_variable','parser.py',339),
  ('asignacion_variable -> ID IGUAL expresion','asignacion_variable',3,'p_asignacion_variable','parser.py',352),
  ('literal -> TRUE','literal',1,'p_literal_booleano','parser.py',359),
  ('literal -> FALSE','literal',1,'p_literal_booleano','parser.py',360),
  ('expresion -> aritmetica','expresion',1,'p_expresion','parser.py',368),
  ('expresion -> literal','expresion',1,'p_expresion','parser.py',369),
  ('expresion -> relacional','expresion',1,'p_expresion','parser.py',370),
  ('expresion -> PARA expresion PARC','expresion',3,'p_expresion_parentesis','parser.py',376),
  ('aritmetica -> expresion SUMA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',381),
  ('aritmetica -> expresion RESTA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',382),
  ('aritmetica -> expresion MULTIPLICACION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',383),
  ('aritmetica -> expresion DIVISION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',384),
  ('aritmetica -> expresion POTENCIA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',385),
  ('aritmetica -> expresion MODULO expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',386),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica_binaria','parser.py',404),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica_binaria','parser.py',405),
  ('expresion -> expresion XOR expresion','expresion',3,'p_expresion_logica_binaria','parser.py',406),
  ('expresion -> RESTA expresion','expresion',2,'p_expresion_umenos','parser.py',411),
  ('relacional -> expresion IGUALACION expresion','relacional',3,'p_relacional','parser.py',423),
  ('relacional -> expresion DIFERENCIACION expresion','relacional',3,'p_relacional','parser.py',424),
  ('relacional -> expresion MENOR expresion','relacional',3,'p_relacional','parser.py',425),
  ('relacional -> expresion MAYOR expresion','relacional',3,'p_relacional','parser.py',426),
  ('relacional -> expresion MENOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',427),
  ('relacional -> expresion MAYOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',428),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_not','parser.py',446),
  ('literal -> ENTERO','literal',1,'p_entero','parser.py',452),
  ('literal -> CADENAS','literal',1,'p_cadena','parser.py',459),
  ('literal -> DECIMAL','literal',1,'p_decimal','parser.py',465),
  ('literal -> ID','literal',1,'p_id','parser.py',471),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',477),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',478),
  ('tipo -> STR','tipo',1,'p_tipo','parser.py',479),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',480),
  ('tipo -> BOOL','tipo',1,'p_tipo','parser.py',481),
  ('instruccion -> BREAK PYC','instruccion',2,'p_instruccion_break','parser.py',500),
  ('instruccion -> CONTINUE PYC','instruccion',2,'p_instruccion_continue','parser.py',504),
  ('declaracion_variable -> ID ID','declaracion_variable',2,'p_declaracion_variable_error','parser.py',509),
]
