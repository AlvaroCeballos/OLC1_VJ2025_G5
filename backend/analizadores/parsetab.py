
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightUMENOSleftANDleftORleftXORrightNOTleftIGUALACIONMENORMAYORMENOR_IGUALMAYOR_IGUALDIFERENCIACIONleftSUMARESTAleftMULTIPLICACIONDIVISIONnonassocPOTENCIAMODULOAND ARROBA BOOL BREAK CADENAS CARACTER CASE CHAR COMA COMENTARIO_MULTILINEA COMENTARIO_UNA_LINEA CONTINUE CORCHETE_ABRE CORCHETE_CIERRA COSENO DECIMAL DECREMENTO DEFAULT DIFERENCIACION DIVISION DO DOS_PUNTOS ELSE ENTERO FALSE FLOAT FOR ID IDENTIFICADOR IF IGUAL IGUALACION INCREMENTO INT INV LLA LLC MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NOT OR PARA PARC POTENCIA PRINTLN PYC RESTA RETURN SENO STR SUMA SWITCH TRUE UMENOS VAR VECTOR WHILE XOR\n    ini : instrucciones\n    \n    instrucciones : instrucciones instruccion\n    \n    instruccion : error PYC\n    \n    estructura_control : error\n    \n    instrucciones : instrucciones error\n                  | error\n    \n    expresion : error\n    instrucciones : \n    instrucciones : instruccion\n    \n    instruccion : instruccion_println\n                | declaracion_variable PYC\n                | asignacion_variable PYC\n                | estructura_control\n                | incremento PYC\n                | decremento PYC\n                | declaracion_vector PYC \n    \n    declaracion_vector : VECTOR CORCHETE_ABRE tipo CORCHETE_CIERRA ID PARA lista_dimensiones PARC\n                       | VECTOR CORCHETE_ABRE tipo CORCHETE_CIERRA ID PARA lista_dimensiones PARC IGUAL lista_valores_iniciales\n    \n    lista_dimensiones : lista_dimensiones COMA expresion\n                     | expresion\n    \n    lista_valores_iniciales : lista_valores_iniciales COMA CORCHETE_ABRE lista_expresiones CORCHETE_CIERRA\n                           | CORCHETE_ABRE lista_expresiones CORCHETE_CIERRA\n    \n    lista_expresiones : lista_expresiones COMA expresion\n                     | expresion\n    \n    asignacion_variable : ID lista_indices IGUAL expresion\n    \n    lista_indices : lista_indices CORCHETE_ABRE expresion CORCHETE_CIERRA\n                 | CORCHETE_ABRE expresion CORCHETE_CIERRA\n    \n    literal : ID lista_indices\n    \n    estructura_control : instruccion_while\n                       | instruccion_if\n                       | instruccion_switch\n                       | instruccion_dowhile\n                       | instruccion_for\n    \n    instruccion_while : WHILE PARA expresion PARC LLA instrucciones LLC\n    \n    instruccion_for : FOR PARA declaracion_variable PYC expresion PYC actualizacion PARC LLA instrucciones LLC\n    \n    actualizacion : incremento\n                   | decremento\n                   | expresion\n                   | asignacion_variable\n    \n    instruccion_switch : SWITCH PARA expresion PARC LLA lista_case default_opcional LLC\n    \n    instruccion_dowhile : DO LLA instrucciones LLC WHILE PARA expresion PARC PYC\n    \n    lista_case : lista_case case_unico\n                | case_unico\n\n    \n    case_unico : CASE expresion DOS_PUNTOS instrucciones\n    \n    default_opcional : DEFAULT DOS_PUNTOS instrucciones\n                     | \n     \n    instruccion_if : base_if\n                   | base_if ELSE LLA instrucciones LLC\n                   | base_if ELSE instruccion_if                 \n     \n    base_if : IF PARA expresion PARC LLA instrucciones LLC\n    \n    incremento : ID INCREMENTO\n    \n    decremento : ID DECREMENTO\n    instruccion_println : PRINTLN PARA expresion PARC PYC\n    literal : CARACTER\n    \n    declaracion_variable : tipo ID IGUAL expresion\n                        | tipo ID\n    \n    asignacion_variable : ID IGUAL expresion\n    \n    literal : TRUE\n            | FALSE\n    \n    expresion : aritmetica\n              | literal\n              | relacional\n\n    expresion : PARA expresion PARC \n    expresion : SENO PARA expresion PARC\n              | COSENO PARA expresion PARC\n              | INV PARA expresion PARC\n    \n    aritmetica : expresion SUMA expresion\n                | expresion RESTA expresion\n                | expresion MULTIPLICACION expresion\n                | expresion DIVISION expresion\n                | expresion POTENCIA expresion\n                | expresion MODULO expresion\n    \n    expresion : expresion OR expresion\n              | expresion AND expresion\n              | expresion XOR expresion\n    expresion : RESTA expresion %prec UMENOS\n    relacional : expresion IGUALACION expresion\n               | expresion DIFERENCIACION expresion\n               | expresion MENOR expresion\n               | expresion MAYOR expresion\n               | expresion MENOR_IGUAL expresion\n               | expresion MAYOR_IGUAL expresion\n    expresion : NOT expresion %prec NOT\n    literal : ENTERO\n    \n    literal : CADENAS\n    \n    literal : DECIMAL\n    \n    literal : ID\n    \n    tipo : INT\n        | FLOAT\n        | STR\n        | CHAR\n        | BOOL\n    instruccion : BREAK PYCinstruccion : CONTINUE PYCdeclaracion_variable : ID ID'
    
_lr_action_items = {'error':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,44,48,51,53,55,56,58,59,68,69,77,78,79,84,85,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,120,123,126,147,148,152,156,157,160,161,162,163,166,178,180,181,182,183,189,190,191,192,193,195,199,201,202,],[4,35,-9,-4,-10,-13,-29,-30,-31,-32,-33,-47,-2,-4,-3,-11,-12,-14,-15,-16,-93,-94,61,61,61,61,61,4,61,61,61,61,61,61,61,4,-49,35,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,35,61,-53,4,-48,4,61,35,61,61,61,35,-34,-50,61,-40,4,4,35,35,-41,4,61,35,-35,61,61,]),'BREAK':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,56,84,85,87,120,126,147,148,152,157,163,166,178,181,182,183,189,190,191,192,195,199,],[12,12,-9,-4,-10,-13,-29,-30,-31,-32,-33,-47,-2,-4,-3,-11,-12,-14,-15,-16,-93,-94,12,12,-49,12,12,-53,12,-48,12,12,12,-34,-50,-40,12,12,12,12,-41,12,12,-35,]),'CONTINUE':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,56,84,85,87,120,126,147,148,152,157,163,166,178,181,182,183,189,190,191,192,195,199,],[13,13,-9,-4,-10,-13,-29,-30,-31,-32,-33,-47,-2,-4,-3,-11,-12,-14,-15,-16,-93,-94,13,13,-49,13,13,-53,13,-48,13,13,13,-34,-50,-40,13,13,13,13,-41,13,13,-35,]),'PRINTLN':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,56,84,85,87,120,126,147,148,152,157,163,166,178,181,182,183,189,190,191,192,195,199,],[14,14,-9,-4,-10,-13,-29,-30,-31,-32,-33,-47,-2,-4,-3,-11,-12,-14,-15,-16,-93,-94,14,14,-49,14,14,-53,14,-48,14,14,14,-34,-50,-40,14,14,14,14,-41,14,14,-35,]),'ID':([0,2,3,4,5,8,15,16,17,18,19,20,21,23,24,25,26,27,29,34,35,36,37,38,39,40,41,42,43,44,48,51,53,55,56,57,58,59,68,69,77,78,79,84,85,87,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,118,120,123,126,147,148,152,156,157,160,161,162,163,166,178,180,181,182,183,189,190,191,192,193,195,199,201,202,],[16,16,-9,-4,-10,-13,45,46,-29,-30,-31,-32,-33,-88,-89,-90,-91,-92,-47,-2,-4,-3,-11,-12,-14,-15,-16,-93,-94,70,70,70,70,70,16,89,70,70,70,70,70,70,70,16,-49,16,46,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,146,16,70,-53,16,-48,16,70,16,70,70,177,16,-34,-50,70,-40,16,16,16,16,-41,16,70,16,-35,70,70,]),'VECTOR':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,56,84,85,87,120,126,147,148,152,157,163,166,178,181,182,183,189,190,191,192,195,199,],[22,22,-9,-4,-10,-13,-29,-30,-31,-32,-33,-47,-2,-4,-3,-11,-12,-14,-15,-16,-93,-94,22,22,-49,22,22,-53,22,-48,22,22,22,-34,-50,-40,22,22,22,22,-41,22,22,-35,]),'INT':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,52,56,57,84,85,87,120,126,147,148,152,157,163,166,178,181,182,183,189,190,191,192,195,199,],[23,23,-9,-4,-10,-13,-29,-30,-31,-32,-33,-47,-2,-4,-3,-11,-12,-14,-15,-16,-93,-94,23,23,23,23,-49,23,23,-53,23,-48,23,23,23,-34,-50,-40,23,23,23,23,-41,23,23,-35,]),'FLOAT':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,52,56,57,84,85,87,120,126,147,148,152,157,163,166,178,181,182,183,189,190,191,192,195,199,],[24,24,-9,-4,-10,-13,-29,-30,-31,-32,-33,-47,-2,-4,-3,-11,-12,-14,-15,-16,-93,-94,24,24,24,24,-49,24,24,-53,24,-48,24,24,24,-34,-50,-40,24,24,24,24,-41,24,24,-35,]),'STR':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,52,56,57,84,85,87,120,126,147,148,152,157,163,166,178,181,182,183,189,190,191,192,195,199,],[25,25,-9,-4,-10,-13,-29,-30,-31,-32,-33,-47,-2,-4,-3,-11,-12,-14,-15,-16,-93,-94,25,25,25,25,-49,25,25,-53,25,-48,25,25,25,-34,-50,-40,25,25,25,25,-41,25,25,-35,]),'CHAR':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,52,56,57,84,85,87,120,126,147,148,152,157,163,166,178,181,182,183,189,190,191,192,195,199,],[26,26,-9,-4,-10,-13,-29,-30,-31,-32,-33,-47,-2,-4,-3,-11,-12,-14,-15,-16,-93,-94,26,26,26,26,-49,26,26,-53,26,-48,26,26,26,-34,-50,-40,26,26,26,26,-41,26,26,-35,]),'BOOL':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,52,56,57,84,85,87,120,126,147,148,152,157,163,166,178,181,182,183,189,190,191,192,195,199,],[27,27,-9,-4,-10,-13,-29,-30,-31,-32,-33,-47,-2,-4,-3,-11,-12,-14,-15,-16,-93,-94,27,27,27,27,-49,27,27,-53,27,-48,27,27,27,-34,-50,-40,27,27,27,27,-41,27,27,-35,]),'WHILE':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,56,84,85,87,120,122,126,147,148,152,157,163,166,178,181,182,183,189,190,191,192,195,199,],[28,28,-9,-4,-10,-13,-29,-30,-31,-32,-33,-47,-2,-4,-3,-11,-12,-14,-15,-16,-93,-94,28,28,-49,28,28,150,-53,28,-48,28,28,28,-34,-50,-40,28,28,28,28,-41,28,28,-35,]),'SWITCH':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,56,84,85,87,120,126,147,148,152,157,163,166,178,181,182,183,189,190,191,192,195,199,],[30,30,-9,-4,-10,-13,-29,-30,-31,-32,-33,-47,-2,-4,-3,-11,-12,-14,-15,-16,-93,-94,30,30,-49,30,30,-53,30,-48,30,30,30,-34,-50,-40,30,30,30,30,-41,30,30,-35,]),'DO':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,56,84,85,87,120,126,147,148,152,157,163,166,178,181,182,183,189,190,191,192,195,199,],[31,31,-9,-4,-10,-13,-29,-30,-31,-32,-33,-47,-2,-4,-3,-11,-12,-14,-15,-16,-93,-94,31,31,-49,31,31,-53,31,-48,31,31,31,-34,-50,-40,31,31,31,31,-41,31,31,-35,]),'FOR':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,56,84,85,87,120,126,147,148,152,157,163,166,178,181,182,183,189,190,191,192,195,199,],[32,32,-9,-4,-10,-13,-29,-30,-31,-32,-33,-47,-2,-4,-3,-11,-12,-14,-15,-16,-93,-94,32,32,-49,32,32,-53,32,-48,32,32,32,-34,-50,-40,32,32,32,32,-41,32,32,-35,]),'IF':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,54,56,84,85,87,120,126,147,148,152,157,163,166,178,181,182,183,189,190,191,192,195,199,],[33,33,-9,-4,-10,-13,-29,-30,-31,-32,-33,-47,-2,-4,-3,-11,-12,-14,-15,-16,-93,-94,33,33,33,-49,33,33,-53,33,-48,33,33,33,-34,-50,-40,33,33,33,33,-41,33,33,-35,]),'$end':([0,1,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,85,126,148,166,178,181,191,199,],[-8,0,-1,-9,-4,-10,-13,-29,-30,-31,-32,-33,-47,-2,-4,-3,-11,-12,-14,-15,-16,-93,-94,-49,-53,-48,-34,-50,-40,-41,-35,]),'LLC':([3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,56,84,85,87,120,126,147,148,152,157,158,159,163,166,167,168,178,181,182,183,189,190,191,192,195,199,],[-9,-4,-10,-13,-29,-30,-31,-32,-33,-47,-2,-4,-3,-11,-12,-14,-15,-16,-93,-94,-8,-8,-49,122,148,-53,-8,-48,-8,166,-46,-43,178,-34,181,-42,-50,-40,-8,-8,-45,-44,-41,-8,199,-35,]),'DEFAULT':([3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,85,126,148,158,159,166,168,178,181,183,190,191,199,],[-9,-4,-10,-13,-29,-30,-31,-32,-33,-47,-2,-4,-3,-11,-12,-14,-15,-16,-93,-94,-49,-53,-48,169,-43,-34,-42,-50,-40,-8,-44,-41,-35,]),'CASE':([3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,85,126,148,149,158,159,166,168,178,181,183,190,191,199,],[-9,-4,-10,-13,-29,-30,-31,-32,-33,-47,-2,-4,-3,-11,-12,-14,-15,-16,-93,-94,-49,-53,-48,160,160,-43,-34,-42,-50,-40,-8,-44,-41,-35,]),'PYC':([4,6,7,9,10,11,12,13,35,45,46,49,50,61,62,63,64,70,71,72,73,74,75,76,80,88,92,111,112,113,114,115,117,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,145,151,153,154,155,179,184,194,200,205,],[36,37,38,39,40,41,42,43,36,-56,-95,-51,-52,-7,-60,-61,-62,-87,-54,-58,-59,-84,-85,-86,-57,123,126,-76,-83,-28,-55,-25,-27,-63,-73,-74,-75,-67,-68,-69,-70,-71,-72,-77,-78,-79,-80,-81,-82,-26,162,-64,-65,-66,-17,191,-18,-22,-21,]),'PARA':([14,28,30,32,33,44,48,51,53,55,58,59,65,66,67,68,69,77,78,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,123,146,150,156,160,161,162,180,193,201,202,],[44,53,55,57,58,59,59,59,59,59,59,59,108,109,110,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,156,161,59,59,59,59,59,59,59,59,]),'IGUAL':([16,45,47,117,145,177,179,186,],[48,77,78,-27,-26,48,187,78,]),'INCREMENTO':([16,177,],[49,49,]),'DECREMENTO':([16,177,],[50,50,]),'CORCHETE_ABRE':([16,22,47,70,113,117,145,177,186,187,198,],[51,52,79,51,79,-27,-26,51,79,193,202,]),'CORCHETE_CIERRA':([23,24,25,26,27,61,62,63,64,70,71,72,73,74,75,76,81,82,111,112,113,116,117,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,145,153,154,155,196,197,203,204,],[-88,-89,-90,-91,-92,-7,-60,-61,-62,-87,-54,-58,-59,-84,-85,-86,117,118,-76,-83,-28,145,-27,-63,-73,-74,-75,-67,-68,-69,-70,-71,-72,-77,-78,-79,-80,-81,-82,-26,-64,-65,-66,200,-24,-23,205,]),'ELSE':([29,178,],[54,-50,]),'LLA':([31,54,119,121,124,185,],[56,84,147,149,152,192,]),'SENO':([44,48,51,53,55,58,59,68,69,77,78,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,123,156,160,161,162,180,193,201,202,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'COSENO':([44,48,51,53,55,58,59,68,69,77,78,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,123,156,160,161,162,180,193,201,202,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'INV':([44,48,51,53,55,58,59,68,69,77,78,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,123,156,160,161,162,180,193,201,202,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'RESTA':([44,48,51,53,55,58,59,60,61,62,63,64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,86,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,123,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,151,153,154,155,156,160,161,162,165,170,171,172,177,180,186,188,193,197,201,202,203,],[68,68,68,68,68,68,68,97,-7,-60,-61,-62,68,68,-87,-54,-58,-59,-84,-85,-86,68,68,68,97,97,97,97,97,97,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,97,97,-28,97,97,97,-27,68,-63,97,97,97,-67,-68,-69,-70,-71,-72,97,97,97,97,97,97,97,97,97,-26,97,-64,-65,-66,68,68,68,68,97,97,97,97,-87,68,-28,97,68,97,68,68,97,]),'NOT':([44,48,51,53,55,58,59,68,69,77,78,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,123,156,160,161,162,180,193,201,202,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'CARACTER':([44,48,51,53,55,58,59,68,69,77,78,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,123,156,160,161,162,180,193,201,202,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'TRUE':([44,48,51,53,55,58,59,68,69,77,78,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,123,156,160,161,162,180,193,201,202,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'FALSE':([44,48,51,53,55,58,59,68,69,77,78,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,123,156,160,161,162,180,193,201,202,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'ENTERO':([44,48,51,53,55,58,59,68,69,77,78,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,123,156,160,161,162,180,193,201,202,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'CADENAS':([44,48,51,53,55,58,59,68,69,77,78,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,123,156,160,161,162,180,193,201,202,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'DECIMAL':([44,48,51,53,55,58,59,68,69,77,78,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,123,156,160,161,162,180,193,201,202,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'PARC':([49,50,60,61,62,63,64,70,71,72,73,74,75,76,80,83,86,90,91,111,112,113,115,117,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,153,154,155,164,165,171,172,173,174,175,176,177,186,188,],[-51,-52,92,-7,-60,-61,-62,-87,-54,-58,-59,-84,-85,-86,-57,119,121,124,125,-76,-83,-28,-25,-27,-63,-73,-74,-75,-67,-68,-69,-70,-71,-72,-77,-78,-79,-80,-81,-82,153,154,155,-26,-64,-65,-66,179,-20,184,-38,185,-36,-37,-39,-87,-28,-19,]),'OR':([60,61,62,63,64,70,71,72,73,74,75,76,80,81,83,86,90,91,111,112,113,114,115,116,117,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,151,153,154,155,165,170,171,172,177,186,188,197,203,],[93,-7,-60,-61,-62,-87,-54,-58,-59,-84,-85,-86,93,93,93,93,93,93,93,-83,-28,93,93,93,-27,-63,-73,93,-75,-67,-68,-69,-70,-71,-72,-77,-78,-79,-80,-81,-82,93,93,93,-26,93,-64,-65,-66,93,93,93,93,-87,-28,93,93,93,]),'AND':([60,61,62,63,64,70,71,72,73,74,75,76,80,81,83,86,90,91,111,112,113,114,115,116,117,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,151,153,154,155,165,170,171,172,177,186,188,197,203,],[94,-7,-60,-61,-62,-87,-54,-58,-59,-84,-85,-86,94,94,94,94,94,94,94,-83,-28,94,94,94,-27,-63,-73,-74,-75,-67,-68,-69,-70,-71,-72,-77,-78,-79,-80,-81,-82,94,94,94,-26,94,-64,-65,-66,94,94,94,94,-87,-28,94,94,94,]),'XOR':([60,61,62,63,64,70,71,72,73,74,75,76,80,81,83,86,90,91,111,112,113,114,115,116,117,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,151,153,154,155,165,170,171,172,177,186,188,197,203,],[95,-7,-60,-61,-62,-87,-54,-58,-59,-84,-85,-86,95,95,95,95,95,95,95,-83,-28,95,95,95,-27,-63,95,95,-75,-67,-68,-69,-70,-71,-72,-77,-78,-79,-80,-81,-82,95,95,95,-26,95,-64,-65,-66,95,95,95,95,-87,-28,95,95,95,]),'SUMA':([60,61,62,63,64,70,71,72,73,74,75,76,80,81,83,86,90,91,111,112,113,114,115,116,117,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,151,153,154,155,165,170,171,172,177,186,188,197,203,],[96,-7,-60,-61,-62,-87,-54,-58,-59,-84,-85,-86,96,96,96,96,96,96,96,96,-28,96,96,96,-27,-63,96,96,96,-67,-68,-69,-70,-71,-72,96,96,96,96,96,96,96,96,96,-26,96,-64,-65,-66,96,96,96,96,-87,-28,96,96,96,]),'MULTIPLICACION':([60,61,62,63,64,70,71,72,73,74,75,76,80,81,83,86,90,91,111,112,113,114,115,116,117,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,151,153,154,155,165,170,171,172,177,186,188,197,203,],[98,-7,-60,-61,-62,-87,-54,-58,-59,-84,-85,-86,98,98,98,98,98,98,98,98,-28,98,98,98,-27,-63,98,98,98,98,98,-69,-70,-71,-72,98,98,98,98,98,98,98,98,98,-26,98,-64,-65,-66,98,98,98,98,-87,-28,98,98,98,]),'DIVISION':([60,61,62,63,64,70,71,72,73,74,75,76,80,81,83,86,90,91,111,112,113,114,115,116,117,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,151,153,154,155,165,170,171,172,177,186,188,197,203,],[99,-7,-60,-61,-62,-87,-54,-58,-59,-84,-85,-86,99,99,99,99,99,99,99,99,-28,99,99,99,-27,-63,99,99,99,99,99,-69,-70,-71,-72,99,99,99,99,99,99,99,99,99,-26,99,-64,-65,-66,99,99,99,99,-87,-28,99,99,99,]),'POTENCIA':([60,61,62,63,64,70,71,72,73,74,75,76,80,81,83,86,90,91,111,112,113,114,115,116,117,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,151,153,154,155,165,170,171,172,177,186,188,197,203,],[100,-7,-60,-61,-62,-87,-54,-58,-59,-84,-85,-86,100,100,100,100,100,100,100,100,-28,100,100,100,-27,-63,100,100,100,100,100,100,100,None,None,100,100,100,100,100,100,100,100,100,-26,100,-64,-65,-66,100,100,100,100,-87,-28,100,100,100,]),'MODULO':([60,61,62,63,64,70,71,72,73,74,75,76,80,81,83,86,90,91,111,112,113,114,115,116,117,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,151,153,154,155,165,170,171,172,177,186,188,197,203,],[101,-7,-60,-61,-62,-87,-54,-58,-59,-84,-85,-86,101,101,101,101,101,101,101,101,-28,101,101,101,-27,-63,101,101,101,101,101,101,101,None,None,101,101,101,101,101,101,101,101,101,-26,101,-64,-65,-66,101,101,101,101,-87,-28,101,101,101,]),'IGUALACION':([60,61,62,63,64,70,71,72,73,74,75,76,80,81,83,86,90,91,111,112,113,114,115,116,117,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,151,153,154,155,165,170,171,172,177,186,188,197,203,],[102,-7,-60,-61,-62,-87,-54,-58,-59,-84,-85,-86,102,102,102,102,102,102,102,102,-28,102,102,102,-27,-63,102,102,102,-67,-68,-69,-70,-71,-72,-77,-78,-79,-80,-81,-82,102,102,102,-26,102,-64,-65,-66,102,102,102,102,-87,-28,102,102,102,]),'DIFERENCIACION':([60,61,62,63,64,70,71,72,73,74,75,76,80,81,83,86,90,91,111,112,113,114,115,116,117,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,151,153,154,155,165,170,171,172,177,186,188,197,203,],[103,-7,-60,-61,-62,-87,-54,-58,-59,-84,-85,-86,103,103,103,103,103,103,103,103,-28,103,103,103,-27,-63,103,103,103,-67,-68,-69,-70,-71,-72,-77,-78,-79,-80,-81,-82,103,103,103,-26,103,-64,-65,-66,103,103,103,103,-87,-28,103,103,103,]),'MENOR':([60,61,62,63,64,70,71,72,73,74,75,76,80,81,83,86,90,91,111,112,113,114,115,116,117,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,151,153,154,155,165,170,171,172,177,186,188,197,203,],[104,-7,-60,-61,-62,-87,-54,-58,-59,-84,-85,-86,104,104,104,104,104,104,104,104,-28,104,104,104,-27,-63,104,104,104,-67,-68,-69,-70,-71,-72,-77,-78,-79,-80,-81,-82,104,104,104,-26,104,-64,-65,-66,104,104,104,104,-87,-28,104,104,104,]),'MAYOR':([60,61,62,63,64,70,71,72,73,74,75,76,80,81,83,86,90,91,111,112,113,114,115,116,117,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,151,153,154,155,165,170,171,172,177,186,188,197,203,],[105,-7,-60,-61,-62,-87,-54,-58,-59,-84,-85,-86,105,105,105,105,105,105,105,105,-28,105,105,105,-27,-63,105,105,105,-67,-68,-69,-70,-71,-72,-77,-78,-79,-80,-81,-82,105,105,105,-26,105,-64,-65,-66,105,105,105,105,-87,-28,105,105,105,]),'MENOR_IGUAL':([60,61,62,63,64,70,71,72,73,74,75,76,80,81,83,86,90,91,111,112,113,114,115,116,117,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,151,153,154,155,165,170,171,172,177,186,188,197,203,],[106,-7,-60,-61,-62,-87,-54,-58,-59,-84,-85,-86,106,106,106,106,106,106,106,106,-28,106,106,106,-27,-63,106,106,106,-67,-68,-69,-70,-71,-72,-77,-78,-79,-80,-81,-82,106,106,106,-26,106,-64,-65,-66,106,106,106,106,-87,-28,106,106,106,]),'MAYOR_IGUAL':([60,61,62,63,64,70,71,72,73,74,75,76,80,81,83,86,90,91,111,112,113,114,115,116,117,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,151,153,154,155,165,170,171,172,177,186,188,197,203,],[107,-7,-60,-61,-62,-87,-54,-58,-59,-84,-85,-86,107,107,107,107,107,107,107,107,-28,107,107,107,-27,-63,107,107,107,-67,-68,-69,-70,-71,-72,-77,-78,-79,-80,-81,-82,107,107,107,-26,107,-64,-65,-66,107,107,107,107,-87,-28,107,107,107,]),'COMA':([61,62,63,64,70,71,72,73,74,75,76,111,112,113,117,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,145,153,154,155,164,165,188,194,196,197,200,203,204,205,],[-7,-60,-61,-62,-87,-54,-58,-59,-84,-85,-86,-76,-83,-28,-27,-63,-73,-74,-75,-67,-68,-69,-70,-71,-72,-77,-78,-79,-80,-81,-82,-26,-64,-65,-66,180,-20,-19,198,201,-24,-22,-23,201,-21,]),'DOS_PUNTOS':([61,62,63,64,70,71,72,73,74,75,76,111,112,113,117,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,145,153,154,155,169,170,],[-7,-60,-61,-62,-87,-54,-58,-59,-84,-85,-86,-76,-83,-28,-27,-63,-73,-74,-75,-67,-68,-69,-70,-71,-72,-77,-78,-79,-80,-81,-82,-26,-64,-65,-66,182,183,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ini':([0,],[1,]),'instrucciones':([0,56,84,147,152,182,183,192,],[2,87,120,157,163,189,190,195,]),'instruccion':([0,2,56,84,87,120,147,152,157,163,182,183,189,190,192,195,],[3,34,3,3,34,34,3,3,34,34,3,3,34,34,3,34,]),'instruccion_println':([0,2,56,84,87,120,147,152,157,163,182,183,189,190,192,195,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'declaracion_variable':([0,2,56,57,84,87,120,147,152,157,163,182,183,189,190,192,195,],[6,6,6,88,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'asignacion_variable':([0,2,56,84,87,120,147,152,157,162,163,182,183,189,190,192,195,],[7,7,7,7,7,7,7,7,7,176,7,7,7,7,7,7,7,]),'estructura_control':([0,2,56,84,87,120,147,152,157,163,182,183,189,190,192,195,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'incremento':([0,2,56,84,87,120,147,152,157,162,163,182,183,189,190,192,195,],[9,9,9,9,9,9,9,9,9,174,9,9,9,9,9,9,9,]),'decremento':([0,2,56,84,87,120,147,152,157,162,163,182,183,189,190,192,195,],[10,10,10,10,10,10,10,10,10,175,10,10,10,10,10,10,10,]),'declaracion_vector':([0,2,56,84,87,120,147,152,157,163,182,183,189,190,192,195,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'tipo':([0,2,52,56,57,84,87,120,147,152,157,163,182,183,189,190,192,195,],[15,15,82,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'instruccion_while':([0,2,56,84,87,120,147,152,157,163,182,183,189,190,192,195,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'instruccion_if':([0,2,54,56,84,87,120,147,152,157,163,182,183,189,190,192,195,],[18,18,85,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'instruccion_switch':([0,2,56,84,87,120,147,152,157,163,182,183,189,190,192,195,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'instruccion_dowhile':([0,2,56,84,87,120,147,152,157,163,182,183,189,190,192,195,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'instruccion_for':([0,2,56,84,87,120,147,152,157,163,182,183,189,190,192,195,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'base_if':([0,2,54,56,84,87,120,147,152,157,163,182,183,189,190,192,195,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'lista_indices':([16,70,177,],[47,113,186,]),'expresion':([44,48,51,53,55,58,59,68,69,77,78,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,123,156,160,161,162,180,193,201,202,],[60,80,81,83,86,90,91,111,112,114,115,116,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,151,165,170,171,172,188,197,203,197,]),'aritmetica':([44,48,51,53,55,58,59,68,69,77,78,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,123,156,160,161,162,180,193,201,202,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'literal':([44,48,51,53,55,58,59,68,69,77,78,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,123,156,160,161,162,180,193,201,202,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'relacional':([44,48,51,53,55,58,59,68,69,77,78,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,123,156,160,161,162,180,193,201,202,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'lista_case':([149,],[158,]),'case_unico':([149,158,],[159,168,]),'lista_dimensiones':([156,],[164,]),'default_opcional':([158,],[167,]),'actualizacion':([162,],[173,]),'lista_valores_iniciales':([187,],[194,]),'lista_expresiones':([193,202,],[196,204,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ini","S'",1,None,None,None),
  ('ini -> instrucciones','ini',1,'p_inicio','parser.py',84),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','parser.py',91),
  ('instruccion -> error PYC','instruccion',2,'p_instruccion_error_print','parser.py',104),
  ('estructura_control -> error','estructura_control',1,'p_instruccion_error_estructura','parser.py',111),
  ('instrucciones -> instrucciones error','instrucciones',2,'p_instrucciones_error','parser.py',118),
  ('instrucciones -> error','instrucciones',1,'p_instrucciones_error','parser.py',119),
  ('expresion -> error','expresion',1,'p_expresion_error','parser.py',129),
  ('instrucciones -> <empty>','instrucciones',0,'p_instrucciones_empty','parser.py',135),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','parser.py',140),
  ('instruccion -> instruccion_println','instruccion',1,'p_instruccion','parser.py',149),
  ('instruccion -> declaracion_variable PYC','instruccion',2,'p_instruccion','parser.py',150),
  ('instruccion -> asignacion_variable PYC','instruccion',2,'p_instruccion','parser.py',151),
  ('instruccion -> estructura_control','instruccion',1,'p_instruccion','parser.py',152),
  ('instruccion -> incremento PYC','instruccion',2,'p_instruccion','parser.py',153),
  ('instruccion -> decremento PYC','instruccion',2,'p_instruccion','parser.py',154),
  ('instruccion -> declaracion_vector PYC','instruccion',2,'p_instruccion','parser.py',155),
  ('declaracion_vector -> VECTOR CORCHETE_ABRE tipo CORCHETE_CIERRA ID PARA lista_dimensiones PARC','declaracion_vector',8,'p_declaracion_vector','parser.py',168),
  ('declaracion_vector -> VECTOR CORCHETE_ABRE tipo CORCHETE_CIERRA ID PARA lista_dimensiones PARC IGUAL lista_valores_iniciales','declaracion_vector',10,'p_declaracion_vector','parser.py',169),
  ('lista_dimensiones -> lista_dimensiones COMA expresion','lista_dimensiones',3,'p_lista_dimensiones','parser.py',196),
  ('lista_dimensiones -> expresion','lista_dimensiones',1,'p_lista_dimensiones','parser.py',197),
  ('lista_valores_iniciales -> lista_valores_iniciales COMA CORCHETE_ABRE lista_expresiones CORCHETE_CIERRA','lista_valores_iniciales',5,'p_lista_valores_iniciales','parser.py',206),
  ('lista_valores_iniciales -> CORCHETE_ABRE lista_expresiones CORCHETE_CIERRA','lista_valores_iniciales',3,'p_lista_valores_iniciales','parser.py',207),
  ('lista_expresiones -> lista_expresiones COMA expresion','lista_expresiones',3,'p_lista_expresiones','parser.py',216),
  ('lista_expresiones -> expresion','lista_expresiones',1,'p_lista_expresiones','parser.py',217),
  ('asignacion_variable -> ID lista_indices IGUAL expresion','asignacion_variable',4,'p_asignacion_vector','parser.py',226),
  ('lista_indices -> lista_indices CORCHETE_ABRE expresion CORCHETE_CIERRA','lista_indices',4,'p_lista_indices','parser.py',233),
  ('lista_indices -> CORCHETE_ABRE expresion CORCHETE_CIERRA','lista_indices',3,'p_lista_indices','parser.py',234),
  ('literal -> ID lista_indices','literal',2,'p_acceso_vector','parser.py',243),
  ('estructura_control -> instruccion_while','estructura_control',1,'p_estructura_control','parser.py',250),
  ('estructura_control -> instruccion_if','estructura_control',1,'p_estructura_control','parser.py',251),
  ('estructura_control -> instruccion_switch','estructura_control',1,'p_estructura_control','parser.py',252),
  ('estructura_control -> instruccion_dowhile','estructura_control',1,'p_estructura_control','parser.py',253),
  ('estructura_control -> instruccion_for','estructura_control',1,'p_estructura_control','parser.py',254),
  ('instruccion_while -> WHILE PARA expresion PARC LLA instrucciones LLC','instruccion_while',7,'p_instruccion_while','parser.py',261),
  ('instruccion_for -> FOR PARA declaracion_variable PYC expresion PYC actualizacion PARC LLA instrucciones LLC','instruccion_for',11,'p_instruccion_for','parser.py',273),
  ('actualizacion -> incremento','actualizacion',1,'p_actualizacion','parser.py',293),
  ('actualizacion -> decremento','actualizacion',1,'p_actualizacion','parser.py',294),
  ('actualizacion -> expresion','actualizacion',1,'p_actualizacion','parser.py',295),
  ('actualizacion -> asignacion_variable','actualizacion',1,'p_actualizacion','parser.py',296),
  ('instruccion_switch -> SWITCH PARA expresion PARC LLA lista_case default_opcional LLC','instruccion_switch',8,'p_instruccion_switch','parser.py',302),
  ('instruccion_dowhile -> DO LLA instrucciones LLC WHILE PARA expresion PARC PYC','instruccion_dowhile',9,'p_instruccion_dowhile','parser.py',316),
  ('lista_case -> lista_case case_unico','lista_case',2,'p_lista_case','parser.py',330),
  ('lista_case -> case_unico','lista_case',1,'p_lista_case','parser.py',331),
  ('case_unico -> CASE expresion DOS_PUNTOS instrucciones','case_unico',4,'p_case_unico','parser.py',341),
  ('default_opcional -> DEFAULT DOS_PUNTOS instrucciones','default_opcional',3,'p_default_opcional','parser.py',355),
  ('default_opcional -> <empty>','default_opcional',0,'p_default_opcional','parser.py',356),
  ('instruccion_if -> base_if','instruccion_if',1,'p_instruccion_if','parser.py',364),
  ('instruccion_if -> base_if ELSE LLA instrucciones LLC','instruccion_if',5,'p_instruccion_if','parser.py',365),
  ('instruccion_if -> base_if ELSE instruccion_if','instruccion_if',3,'p_instruccion_if','parser.py',366),
  ('base_if -> IF PARA expresion PARC LLA instrucciones LLC','base_if',7,'p_base_if','parser.py',392),
  ('incremento -> ID INCREMENTO','incremento',2,'p_incremento','parser.py',407),
  ('decremento -> ID DECREMENTO','decremento',2,'p_decremento','parser.py',428),
  ('instruccion_println -> PRINTLN PARA expresion PARC PYC','instruccion_println',5,'p_instruccion_println','parser.py',449),
  ('literal -> CARACTER','literal',1,'p_caracter','parser.py',455),
  ('declaracion_variable -> tipo ID IGUAL expresion','declaracion_variable',4,'p_declaracion_variable','parser.py',463),
  ('declaracion_variable -> tipo ID','declaracion_variable',2,'p_declaracion_variable','parser.py',464),
  ('asignacion_variable -> ID IGUAL expresion','asignacion_variable',3,'p_asignacion_variable','parser.py',477),
  ('literal -> TRUE','literal',1,'p_literal_booleano','parser.py',484),
  ('literal -> FALSE','literal',1,'p_literal_booleano','parser.py',485),
  ('expresion -> aritmetica','expresion',1,'p_expresion','parser.py',493),
  ('expresion -> literal','expresion',1,'p_expresion','parser.py',494),
  ('expresion -> relacional','expresion',1,'p_expresion','parser.py',495),
  ('expresion -> PARA expresion PARC','expresion',3,'p_expresion_parentesis','parser.py',501),
  ('expresion -> SENO PARA expresion PARC','expresion',4,'p_expresion_nativa','parser.py',506),
  ('expresion -> COSENO PARA expresion PARC','expresion',4,'p_expresion_nativa','parser.py',507),
  ('expresion -> INV PARA expresion PARC','expresion',4,'p_expresion_nativa','parser.py',508),
  ('aritmetica -> expresion SUMA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',534),
  ('aritmetica -> expresion RESTA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',535),
  ('aritmetica -> expresion MULTIPLICACION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',536),
  ('aritmetica -> expresion DIVISION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',537),
  ('aritmetica -> expresion POTENCIA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',538),
  ('aritmetica -> expresion MODULO expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',539),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica_binaria','parser.py',557),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica_binaria','parser.py',558),
  ('expresion -> expresion XOR expresion','expresion',3,'p_expresion_logica_binaria','parser.py',559),
  ('expresion -> RESTA expresion','expresion',2,'p_expresion_umenos','parser.py',564),
  ('relacional -> expresion IGUALACION expresion','relacional',3,'p_relacional','parser.py',576),
  ('relacional -> expresion DIFERENCIACION expresion','relacional',3,'p_relacional','parser.py',577),
  ('relacional -> expresion MENOR expresion','relacional',3,'p_relacional','parser.py',578),
  ('relacional -> expresion MAYOR expresion','relacional',3,'p_relacional','parser.py',579),
  ('relacional -> expresion MENOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',580),
  ('relacional -> expresion MAYOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',581),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_not','parser.py',599),
  ('literal -> ENTERO','literal',1,'p_entero','parser.py',605),
  ('literal -> CADENAS','literal',1,'p_cadena','parser.py',612),
  ('literal -> DECIMAL','literal',1,'p_decimal','parser.py',618),
  ('literal -> ID','literal',1,'p_id','parser.py',624),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',630),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',631),
  ('tipo -> STR','tipo',1,'p_tipo','parser.py',632),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',633),
  ('tipo -> BOOL','tipo',1,'p_tipo','parser.py',634),
  ('instruccion -> BREAK PYC','instruccion',2,'p_instruccion_break','parser.py',653),
  ('instruccion -> CONTINUE PYC','instruccion',2,'p_instruccion_continue','parser.py',657),
  ('declaracion_variable -> ID ID','declaracion_variable',2,'p_declaracion_variable_error','parser.py',662),
]
