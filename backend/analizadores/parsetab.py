
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

<<<<<<< Updated upstream
_lr_signature = 'leftORleftXORleftANDrightNOTleftIGUALACIONMENORMAYORMENOR_IGUALMAYOR_IGUALDIFERENCIACIONleftSUMARESTAleftMULTIPLICACIONDIVISIONnonassocPOTENCIAMODULOrightUMENOSAND ARROBA BOOLEAN BREAK CADENAS CARACTER CASE CHAR COMA COMENTARIO_MULTILINEA COMENTARIO_UNA_LINEA CONTINUE DECIMAL DECREMENTO DEFAULT DIFERENCIACION DIVISION DO DOS_PUNTOS DO_WHILE ELSE ENTERO FALSE FLOAT FOR ID IDENTIFICADOR IF IGUAL IGUALACION INCREMENTO INT LLA LLC MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NOT OR PARA PARC POTENCIA PRINT PRINTLN PYC RESTA RETURN STR SUMA SWITCH TRUE UMENOS VAR WHILE XOR\nini : instrucciones\n\ninstrucciones : instrucciones instruccion\n\ninstrucciones : instruccion\n\ninstruccion : instruccion_print PYC\n            | declaracion_variable PYC\n            | asignacion_variable PYC\n            | estructura_control\n            | incremento PYC\n            | decremento PYC\n\nestructura_control : instruccion_while\n                   | instruccion_if\n                   | instruccion_switch\n\ninstruccion_while : WHILE PARA expresion PARC LLA instrucciones LLC\n\ninstruccion_switch : SWITCH PARA expresion PARC LLA lista_case default_opcional LLC\n\nlista_case : lista_case case_unico\n            | case_unico\n\n\ncase_unico : CASE expresion DOS_PUNTOS instrucciones break_opcional\n\nbreak_opcional : BREAK PYC\n               | \n\ndefault_opcional : DEFAULT DOS_PUNTOS instrucciones PYC\n                  | \n\ninstruccion_if : base_if\n               | base_if ELSE LLA instrucciones LLC\n               | base_if ELSE instruccion_if                 \n\nbase_if : IF PARA expresion PARC LLA instrucciones LLC\n\nincremento : ID INCREMENTO\n\ndecremento : ID DECREMENTO\n\ninstruccion_print : tipo_print PARA expresion PARC\n\nliteral : CARACTER\n\ntipo_print : PRINT\n           | PRINTLN\n\ndeclaracion_variable : tipo ID IGUAL expresion\n                    | tipo ID\n\nasignacion_variable : ID IGUAL expresion\n\nliteral : TRUE\n        | FALSE\n\nexpresion : aritmetica\n          | literal\n          | relacional\n\nexpresion : PARA expresion PARC\naritmetica : expresion SUMA expresion\n            | expresion RESTA expresion\n            | expresion MULTIPLICACION expresion\n            | expresion DIVISION expresion\n            | expresion POTENCIA expresion\n            | expresion MODULO expresion\n\nexpresion : expresion OR expresion\n          | expresion AND expresion\n          | expresion XOR expresion\nexpresion : NOT expresion\nrelacional : expresion IGUALACION expresion\n           | expresion DIFERENCIACION expresion\n           | expresion MENOR expresion\n           | expresion MAYOR expresion\n           | expresion MENOR_IGUAL expresion\n           | expresion MAYOR_IGUAL expresion\n\nliteral : ENTERO\n\nliteral : CADENAS\n\nliteral : DECIMAL\n\nliteral : ID\n\ntipo : INT\n    | FLOAT\n    | STR\n    | CHAR\n    | BOOLEAN\n'
=======
_lr_signature = 'leftORleftXORleftANDrightNOTleftIGUALACIONMENORMAYORMENOR_IGUALMAYOR_IGUALDIFERENCIACIONleftSUMARESTAleftMULTIPLICACIONDIVISIONnonassocPOTENCIAMODULOrightUMENOSAND ARROBA BOOLEAN BREAK CADENAS CARACTER CASE CHAR COMA COMENTARIO_MULTILINEA COMENTARIO_UNA_LINEA CONTINUE DECIMAL DECREMENTO DEFAULT DIFERENCIACION DIVISION DO DO_WHILE ELSE ENTERO FALSE FLOAT FOR ID IDENTIFICADOR IF IGUAL IGUALACION INCREMENTO INT LLA LLC MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NOT OR PARA PARC POTENCIA PRINT PRINTLN PYC RESTA RETURN STR SUMA SWITCH TRUE UMENOS VAR WHILE XOR\n    ini : instrucciones\n    \n    instrucciones : instrucciones instruccion\n    \n    instrucciones : instruccion\n    \n    instruccion : instruccion_print PYC\n                | declaracion_variable PYC\n                | asignacion_variable PYC\n                | estructura_control\n                | incremento PYC\n                | decremento PYC\n    \n    estructura_control : instruccion_while\n                       | instruccion_if\n    \n    instruccion_while : WHILE PARA expresion PARC LLA instrucciones LLC\n     \n    instruccion_if : base_if\n                   | base_if ELSE LLA instrucciones LLC\n                   | base_if ELSE instruccion_if                 \n     \n    base_if : IF PARA expresion PARC LLA instrucciones LLC\n    \n    incremento : ID INCREMENTO\n    \n    decremento : ID DECREMENTO\n    \n    instruccion_print : tipo_print PARA expresion PARC\n    \n    literal : CARACTER\n    \n    tipo_print : PRINT\n               | PRINTLN\n    \n    declaracion_variable : tipo ID IGUAL expresion\n                        | tipo ID\n    \n    asignacion_variable : ID IGUAL expresion\n    \n    literal : TRUE\n            | FALSE\n    \n    expresion : aritmetica\n              | literal\n              | relacional\n\n    expresion : PARA expresion PARC\n    aritmetica : expresion SUMA expresion\n                | expresion RESTA expresion\n                | expresion MULTIPLICACION expresion\n                | expresion DIVISION expresion\n                | expresion POTENCIA expresion\n                | expresion MODULO expresion\n    \n    expresion : expresion OR expresion\n              | expresion AND expresion\n              | expresion XOR expresion\n    expresion : NOT expresion\n    relacional : expresion IGUALACION expresion\n               | expresion DIFERENCIACION expresion\n               | expresion MENOR expresion\n               | expresion MAYOR expresion\n               | expresion MENOR_IGUAL expresion\n               | expresion MAYOR_IGUAL expresion\n    \n    literal : ENTERO\n    \n    literal : CADENAS\n    \n    literal : DECIMAL\n    \n    literal : ID\n    \n    tipo : INT\n        | FLOAT\n        | STR\n        | CHAR\n        | BOOLEAN\n    '
>>>>>>> Stashed changes
    
_lr_action_items = {'ID':([0,2,3,7,11,13,14,15,18,19,20,21,22,24,27,28,29,30,31,32,33,35,38,40,41,42,47,55,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,101,102,104,105,108,109,110,115,116,117,118,119,120,],[12,12,-3,-7,34,-10,-11,-12,-61,-62,-63,-64,-65,-22,-2,-4,-5,-6,-8,-9,54,54,54,54,54,54,54,54,12,-24,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,12,12,-23,12,12,54,12,-13,-25,-14,12,12,12,12,]),'PRINT':([0,2,3,7,13,14,15,24,27,28,29,30,31,32,58,59,82,101,102,104,105,109,110,115,116,117,118,119,120,],[16,16,-3,-7,-10,-11,-12,-22,-2,-4,-5,-6,-8,-9,16,-24,16,16,-23,16,16,16,-13,-25,-14,16,16,16,16,]),'PRINTLN':([0,2,3,7,13,14,15,24,27,28,29,30,31,32,58,59,82,101,102,104,105,109,110,115,116,117,118,119,120,],[17,17,-3,-7,-10,-11,-12,-22,-2,-4,-5,-6,-8,-9,17,-24,17,17,-23,17,17,17,-13,-25,-14,17,17,17,17,]),'INT':([0,2,3,7,13,14,15,24,27,28,29,30,31,32,58,59,82,101,102,104,105,109,110,115,116,117,118,119,120,],[18,18,-3,-7,-10,-11,-12,-22,-2,-4,-5,-6,-8,-9,18,-24,18,18,-23,18,18,18,-13,-25,-14,18,18,18,18,]),'FLOAT':([0,2,3,7,13,14,15,24,27,28,29,30,31,32,58,59,82,101,102,104,105,109,110,115,116,117,118,119,120,],[19,19,-3,-7,-10,-11,-12,-22,-2,-4,-5,-6,-8,-9,19,-24,19,19,-23,19,19,19,-13,-25,-14,19,19,19,19,]),'STR':([0,2,3,7,13,14,15,24,27,28,29,30,31,32,58,59,82,101,102,104,105,109,110,115,116,117,118,119,120,],[20,20,-3,-7,-10,-11,-12,-22,-2,-4,-5,-6,-8,-9,20,-24,20,20,-23,20,20,20,-13,-25,-14,20,20,20,20,]),'CHAR':([0,2,3,7,13,14,15,24,27,28,29,30,31,32,58,59,82,101,102,104,105,109,110,115,116,117,118,119,120,],[21,21,-3,-7,-10,-11,-12,-22,-2,-4,-5,-6,-8,-9,21,-24,21,21,-23,21,21,21,-13,-25,-14,21,21,21,21,]),'BOOLEAN':([0,2,3,7,13,14,15,24,27,28,29,30,31,32,58,59,82,101,102,104,105,109,110,115,116,117,118,119,120,],[22,22,-3,-7,-10,-11,-12,-22,-2,-4,-5,-6,-8,-9,22,-24,22,22,-23,22,22,22,-13,-25,-14,22,22,22,22,]),'WHILE':([0,2,3,7,13,14,15,24,27,28,29,30,31,32,58,59,82,101,102,104,105,109,110,115,116,117,118,119,120,],[23,23,-3,-7,-10,-11,-12,-22,-2,-4,-5,-6,-8,-9,23,-24,23,23,-23,23,23,23,-13,-25,-14,23,23,23,23,]),'SWITCH':([0,2,3,7,13,14,15,24,27,28,29,30,31,32,58,59,82,101,102,104,105,109,110,115,116,117,118,119,120,],[25,25,-3,-7,-10,-11,-12,-22,-2,-4,-5,-6,-8,-9,25,-24,25,25,-23,25,25,25,-13,-25,-14,25,25,25,25,]),'IF':([0,2,3,7,13,14,15,24,27,28,29,30,31,32,39,58,59,82,101,102,104,105,109,110,115,116,117,118,119,120,],[26,26,-3,-7,-10,-11,-12,-22,-2,-4,-5,-6,-8,-9,26,26,-24,26,26,-23,26,26,26,-13,-25,-14,26,26,26,26,]),'$end':([1,2,3,7,13,14,15,24,27,28,29,30,31,32,59,102,110,115,116,],[0,-1,-3,-7,-10,-11,-12,-22,-2,-4,-5,-6,-8,-9,-24,-23,-13,-25,-14,]),'LLC':([3,7,13,14,15,24,27,28,29,30,31,32,59,82,102,105,106,107,109,110,111,112,115,116,120,121,122,124,],[-3,-7,-10,-11,-12,-22,-2,-4,-5,-6,-8,-9,-24,102,-23,110,-21,-16,115,-13,116,-15,-25,-14,-19,-20,-17,-18,]),'PYC':([3,4,5,6,7,8,9,13,14,15,24,27,28,29,30,31,32,34,36,37,44,45,46,48,49,50,51,52,53,54,56,59,63,79,80,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,110,115,116,119,123,],[-3,28,29,30,-7,31,32,-10,-11,-12,-22,-2,-4,-5,-6,-8,-9,-33,-26,-27,-37,-38,-39,-29,-35,-36,-57,-58,-59,-60,-34,-24,-28,-50,-32,-40,-47,-48,-49,-41,-42,-43,-44,-45,-46,-51,-52,-53,-54,-55,-56,-23,-13,-25,-14,121,124,]),'BREAK':([3,7,13,14,15,24,27,28,29,30,31,32,59,102,110,115,116,120,],[-3,-7,-10,-11,-12,-22,-2,-4,-5,-6,-8,-9,-24,-23,-13,-25,-14,123,]),'DEFAULT':([3,7,13,14,15,24,27,28,29,30,31,32,59,102,106,107,110,112,115,116,120,122,124,],[-3,-7,-10,-11,-12,-22,-2,-4,-5,-6,-8,-9,-24,-23,113,-16,-13,-15,-25,-14,-19,-17,-18,]),'CASE':([3,7,13,14,15,24,27,28,29,30,31,32,59,102,103,106,107,110,112,115,116,120,122,124,],[-3,-7,-10,-11,-12,-22,-2,-4,-5,-6,-8,-9,-24,-23,108,108,-16,-13,-15,-25,-14,-19,-17,-18,]),'PARA':([10,16,17,23,25,26,33,35,38,40,41,42,47,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,108,],[33,-30,-31,38,40,41,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'IGUAL':([12,34,],[35,55,]),'INCREMENTO':([12,],[36,]),'DECREMENTO':([12,],[37,]),'ELSE':([24,115,],[39,-25,]),'NOT':([33,35,38,40,41,42,47,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,108,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'CARACTER':([33,35,38,40,41,42,47,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,108,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'TRUE':([33,35,38,40,41,42,47,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,108,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'FALSE':([33,35,38,40,41,42,47,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,108,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'ENTERO':([33,35,38,40,41,42,47,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,108,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'CADENAS':([33,35,38,40,41,42,47,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,108,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'DECIMAL':([33,35,38,40,41,42,47,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,108,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'LLA':([39,81,83,84,],[58,101,103,104,]),'PARC':([43,44,45,46,48,49,50,51,52,53,54,57,60,61,62,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,],[63,-37,-38,-39,-29,-35,-36,-57,-58,-59,-60,81,83,84,85,-50,-40,-47,-48,-49,-41,-42,-43,-44,-45,-46,-51,-52,-53,-54,-55,-56,]),'OR':([43,44,45,46,48,49,50,51,52,53,54,56,57,60,61,62,79,80,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,114,],[64,-37,-38,-39,-29,-35,-36,-57,-58,-59,-60,64,64,64,64,64,-50,64,-40,-47,-48,-49,-41,-42,-43,-44,-45,-46,-51,-52,-53,-54,-55,-56,64,]),'AND':([43,44,45,46,48,49,50,51,52,53,54,56,57,60,61,62,79,80,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,114,],[65,-37,-38,-39,-29,-35,-36,-57,-58,-59,-60,65,65,65,65,65,-50,65,-40,65,-48,65,-41,-42,-43,-44,-45,-46,-51,-52,-53,-54,-55,-56,65,]),'XOR':([43,44,45,46,48,49,50,51,52,53,54,56,57,60,61,62,79,80,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,114,],[66,-37,-38,-39,-29,-35,-36,-57,-58,-59,-60,66,66,66,66,66,-50,66,-40,66,-48,-49,-41,-42,-43,-44,-45,-46,-51,-52,-53,-54,-55,-56,66,]),'SUMA':([43,44,45,46,48,49,50,51,52,53,54,56,57,60,61,62,79,80,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,114,],[67,-37,-38,-39,-29,-35,-36,-57,-58,-59,-60,67,67,67,67,67,67,67,-40,67,67,67,-41,-42,-43,-44,-45,-46,67,67,67,67,67,67,67,]),'RESTA':([43,44,45,46,48,49,50,51,52,53,54,56,57,60,61,62,79,80,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,114,],[68,-37,-38,-39,-29,-35,-36,-57,-58,-59,-60,68,68,68,68,68,68,68,-40,68,68,68,-41,-42,-43,-44,-45,-46,68,68,68,68,68,68,68,]),'MULTIPLICACION':([43,44,45,46,48,49,50,51,52,53,54,56,57,60,61,62,79,80,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,114,],[69,-37,-38,-39,-29,-35,-36,-57,-58,-59,-60,69,69,69,69,69,69,69,-40,69,69,69,69,69,-43,-44,-45,-46,69,69,69,69,69,69,69,]),'DIVISION':([43,44,45,46,48,49,50,51,52,53,54,56,57,60,61,62,79,80,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,114,],[70,-37,-38,-39,-29,-35,-36,-57,-58,-59,-60,70,70,70,70,70,70,70,-40,70,70,70,70,70,-43,-44,-45,-46,70,70,70,70,70,70,70,]),'POTENCIA':([43,44,45,46,48,49,50,51,52,53,54,56,57,60,61,62,79,80,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,114,],[71,-37,-38,-39,-29,-35,-36,-57,-58,-59,-60,71,71,71,71,71,71,71,-40,71,71,71,71,71,71,71,None,None,71,71,71,71,71,71,71,]),'MODULO':([43,44,45,46,48,49,50,51,52,53,54,56,57,60,61,62,79,80,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,114,],[72,-37,-38,-39,-29,-35,-36,-57,-58,-59,-60,72,72,72,72,72,72,72,-40,72,72,72,72,72,72,72,None,None,72,72,72,72,72,72,72,]),'IGUALACION':([43,44,45,46,48,49,50,51,52,53,54,56,57,60,61,62,79,80,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,114,],[73,-37,-38,-39,-29,-35,-36,-57,-58,-59,-60,73,73,73,73,73,73,73,-40,73,73,73,-41,-42,-43,-44,-45,-46,-51,-52,-53,-54,-55,-56,73,]),'DIFERENCIACION':([43,44,45,46,48,49,50,51,52,53,54,56,57,60,61,62,79,80,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,114,],[74,-37,-38,-39,-29,-35,-36,-57,-58,-59,-60,74,74,74,74,74,74,74,-40,74,74,74,-41,-42,-43,-44,-45,-46,-51,-52,-53,-54,-55,-56,74,]),'MENOR':([43,44,45,46,48,49,50,51,52,53,54,56,57,60,61,62,79,80,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,114,],[75,-37,-38,-39,-29,-35,-36,-57,-58,-59,-60,75,75,75,75,75,75,75,-40,75,75,75,-41,-42,-43,-44,-45,-46,-51,-52,-53,-54,-55,-56,75,]),'MAYOR':([43,44,45,46,48,49,50,51,52,53,54,56,57,60,61,62,79,80,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,114,],[76,-37,-38,-39,-29,-35,-36,-57,-58,-59,-60,76,76,76,76,76,76,76,-40,76,76,76,-41,-42,-43,-44,-45,-46,-51,-52,-53,-54,-55,-56,76,]),'MENOR_IGUAL':([43,44,45,46,48,49,50,51,52,53,54,56,57,60,61,62,79,80,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,114,],[77,-37,-38,-39,-29,-35,-36,-57,-58,-59,-60,77,77,77,77,77,77,77,-40,77,77,77,-41,-42,-43,-44,-45,-46,-51,-52,-53,-54,-55,-56,77,]),'MAYOR_IGUAL':([43,44,45,46,48,49,50,51,52,53,54,56,57,60,61,62,79,80,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,114,],[78,-37,-38,-39,-29,-35,-36,-57,-58,-59,-60,78,78,78,78,78,78,78,-40,78,78,78,-41,-42,-43,-44,-45,-46,-51,-52,-53,-54,-55,-56,78,]),'DOS_PUNTOS':([44,45,46,48,49,50,51,52,53,54,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,113,114,],[-37,-38,-39,-29,-35,-36,-57,-58,-59,-60,-50,-40,-47,-48,-49,-41,-42,-43,-44,-45,-46,-51,-52,-53,-54,-55,-56,117,118,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ini':([0,],[1,]),'instrucciones':([0,58,101,104,117,118,],[2,82,105,109,119,120,]),'instruccion':([0,2,58,82,101,104,105,109,117,118,119,120,],[3,27,3,27,3,3,27,27,3,3,27,27,]),'instruccion_print':([0,2,58,82,101,104,105,109,117,118,119,120,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'declaracion_variable':([0,2,58,82,101,104,105,109,117,118,119,120,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'asignacion_variable':([0,2,58,82,101,104,105,109,117,118,119,120,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'estructura_control':([0,2,58,82,101,104,105,109,117,118,119,120,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'incremento':([0,2,58,82,101,104,105,109,117,118,119,120,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'decremento':([0,2,58,82,101,104,105,109,117,118,119,120,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'tipo_print':([0,2,58,82,101,104,105,109,117,118,119,120,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'tipo':([0,2,58,82,101,104,105,109,117,118,119,120,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'instruccion_while':([0,2,58,82,101,104,105,109,117,118,119,120,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'instruccion_if':([0,2,39,58,82,101,104,105,109,117,118,119,120,],[14,14,59,14,14,14,14,14,14,14,14,14,14,]),'instruccion_switch':([0,2,58,82,101,104,105,109,117,118,119,120,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'base_if':([0,2,39,58,82,101,104,105,109,117,118,119,120,],[24,24,24,24,24,24,24,24,24,24,24,24,24,]),'expresion':([33,35,38,40,41,42,47,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,108,],[43,56,57,60,61,62,79,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,114,]),'aritmetica':([33,35,38,40,41,42,47,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,108,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'literal':([33,35,38,40,41,42,47,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,108,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'relacional':([33,35,38,40,41,42,47,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,108,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'lista_case':([103,],[106,]),'case_unico':([103,106,],[107,112,]),'default_opcional':([106,],[111,]),'break_opcional':([120,],[122,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ini","S'",1,None,None,None),
<<<<<<< Updated upstream
  ('ini -> instrucciones','ini',1,'p_inicio','parser.py',70),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','parser.py',77),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','parser.py',85),
  ('instruccion -> instruccion_print PYC','instruccion',2,'p_instruccion','parser.py',91),
  ('instruccion -> declaracion_variable PYC','instruccion',2,'p_instruccion','parser.py',92),
  ('instruccion -> asignacion_variable PYC','instruccion',2,'p_instruccion','parser.py',93),
  ('instruccion -> estructura_control','instruccion',1,'p_instruccion','parser.py',94),
  ('instruccion -> incremento PYC','instruccion',2,'p_instruccion','parser.py',95),
  ('instruccion -> decremento PYC','instruccion',2,'p_instruccion','parser.py',96),
  ('estructura_control -> instruccion_while','estructura_control',1,'p_estructura_control','parser.py',107),
  ('estructura_control -> instruccion_if','estructura_control',1,'p_estructura_control','parser.py',108),
  ('estructura_control -> instruccion_switch','estructura_control',1,'p_estructura_control','parser.py',109),
  ('instruccion_while -> WHILE PARA expresion PARC LLA instrucciones LLC','instruccion_while',7,'p_instruccion_while','parser.py',116),
  ('instruccion_switch -> SWITCH PARA expresion PARC LLA lista_case default_opcional LLC','instruccion_switch',8,'p_instruccion_switch','parser.py',129),
  ('lista_case -> lista_case case_unico','lista_case',2,'p_lista_case','parser.py',144),
  ('lista_case -> case_unico','lista_case',1,'p_lista_case','parser.py',145),
  ('case_unico -> CASE expresion DOS_PUNTOS instrucciones break_opcional','case_unico',5,'p_case_unico','parser.py',155),
  ('break_opcional -> BREAK PYC','break_opcional',2,'p_break_opcional','parser.py',170),
  ('break_opcional -> <empty>','break_opcional',0,'p_break_opcional','parser.py',171),
  ('default_opcional -> DEFAULT DOS_PUNTOS instrucciones PYC','default_opcional',4,'p_default_opcional','parser.py',181),
  ('default_opcional -> <empty>','default_opcional',0,'p_default_opcional','parser.py',182),
  ('instruccion_if -> base_if','instruccion_if',1,'p_instruccion_if','parser.py',190),
  ('instruccion_if -> base_if ELSE LLA instrucciones LLC','instruccion_if',5,'p_instruccion_if','parser.py',191),
  ('instruccion_if -> base_if ELSE instruccion_if','instruccion_if',3,'p_instruccion_if','parser.py',192),
  ('base_if -> IF PARA expresion PARC LLA instrucciones LLC','base_if',7,'p_base_if','parser.py',218),
  ('incremento -> ID INCREMENTO','incremento',2,'p_incremento','parser.py',233),
  ('decremento -> ID DECREMENTO','decremento',2,'p_decremento','parser.py',254),
  ('instruccion_print -> tipo_print PARA expresion PARC','instruccion_print',4,'p_instruccion_print','parser.py',276),
  ('literal -> CARACTER','literal',1,'p_caracter','parser.py',283),
  ('tipo_print -> PRINT','tipo_print',1,'p_tipo_print','parser.py',289),
  ('tipo_print -> PRINTLN','tipo_print',1,'p_tipo_print','parser.py',290),
  ('declaracion_variable -> tipo ID IGUAL expresion','declaracion_variable',4,'p_declaracion_variable','parser.py',296),
  ('declaracion_variable -> tipo ID','declaracion_variable',2,'p_declaracion_variable','parser.py',297),
  ('asignacion_variable -> ID IGUAL expresion','asignacion_variable',3,'p_asignacion_variable','parser.py',310),
  ('literal -> TRUE','literal',1,'p_literal_booleano','parser.py',317),
  ('literal -> FALSE','literal',1,'p_literal_booleano','parser.py',318),
  ('expresion -> aritmetica','expresion',1,'p_expresion','parser.py',326),
  ('expresion -> literal','expresion',1,'p_expresion','parser.py',327),
  ('expresion -> relacional','expresion',1,'p_expresion','parser.py',328),
  ('expresion -> PARA expresion PARC','expresion',3,'p_expresion_parentesis','parser.py',334),
  ('aritmetica -> expresion SUMA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',339),
  ('aritmetica -> expresion RESTA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',340),
  ('aritmetica -> expresion MULTIPLICACION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',341),
  ('aritmetica -> expresion DIVISION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',342),
  ('aritmetica -> expresion POTENCIA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',343),
  ('aritmetica -> expresion MODULO expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',344),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica_binaria','parser.py',362),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica_binaria','parser.py',363),
  ('expresion -> expresion XOR expresion','expresion',3,'p_expresion_logica_binaria','parser.py',364),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_logica_unaria','parser.py',369),
  ('relacional -> expresion IGUALACION expresion','relacional',3,'p_relacional','parser.py',374),
  ('relacional -> expresion DIFERENCIACION expresion','relacional',3,'p_relacional','parser.py',375),
  ('relacional -> expresion MENOR expresion','relacional',3,'p_relacional','parser.py',376),
  ('relacional -> expresion MAYOR expresion','relacional',3,'p_relacional','parser.py',377),
  ('relacional -> expresion MENOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',378),
  ('relacional -> expresion MAYOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',379),
  ('literal -> ENTERO','literal',1,'p_entero','parser.py',397),
  ('literal -> CADENAS','literal',1,'p_cadena','parser.py',404),
  ('literal -> DECIMAL','literal',1,'p_decimal','parser.py',410),
  ('literal -> ID','literal',1,'p_id','parser.py',416),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',422),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',423),
  ('tipo -> STR','tipo',1,'p_tipo','parser.py',424),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',425),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','parser.py',426),
=======
  ('ini -> instrucciones','ini',1,'p_inicio','parser.py',67),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','parser.py',74),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','parser.py',82),
  ('instruccion -> instruccion_print PYC','instruccion',2,'p_instruccion','parser.py',88),
  ('instruccion -> declaracion_variable PYC','instruccion',2,'p_instruccion','parser.py',89),
  ('instruccion -> asignacion_variable PYC','instruccion',2,'p_instruccion','parser.py',90),
  ('instruccion -> estructura_control','instruccion',1,'p_instruccion','parser.py',91),
  ('instruccion -> incremento PYC','instruccion',2,'p_instruccion','parser.py',92),
  ('instruccion -> decremento PYC','instruccion',2,'p_instruccion','parser.py',93),
  ('estructura_control -> instruccion_while','estructura_control',1,'p_estructura_control','parser.py',104),
  ('estructura_control -> instruccion_if','estructura_control',1,'p_estructura_control','parser.py',105),
  ('instruccion_while -> WHILE PARA expresion PARC LLA instrucciones LLC','instruccion_while',7,'p_instruccion_while','parser.py',112),
  ('instruccion_if -> base_if','instruccion_if',1,'p_instruccion_if','parser.py',125),
  ('instruccion_if -> base_if ELSE LLA instrucciones LLC','instruccion_if',5,'p_instruccion_if','parser.py',126),
  ('instruccion_if -> base_if ELSE instruccion_if','instruccion_if',3,'p_instruccion_if','parser.py',127),
  ('base_if -> IF PARA expresion PARC LLA instrucciones LLC','base_if',7,'p_base_if','parser.py',153),
  ('incremento -> ID INCREMENTO','incremento',2,'p_incremento','parser.py',168),
  ('decremento -> ID DECREMENTO','decremento',2,'p_decremento','parser.py',189),
  ('instruccion_print -> tipo_print PARA expresion PARC','instruccion_print',4,'p_instruccion_print','parser.py',211),
  ('literal -> CARACTER','literal',1,'p_caracter','parser.py',218),
  ('tipo_print -> PRINT','tipo_print',1,'p_tipo_print','parser.py',224),
  ('tipo_print -> PRINTLN','tipo_print',1,'p_tipo_print','parser.py',225),
  ('declaracion_variable -> tipo ID IGUAL expresion','declaracion_variable',4,'p_declaracion_variable','parser.py',231),
  ('declaracion_variable -> tipo ID','declaracion_variable',2,'p_declaracion_variable','parser.py',232),
  ('asignacion_variable -> ID IGUAL expresion','asignacion_variable',3,'p_asignacion_variable','parser.py',245),
  ('literal -> TRUE','literal',1,'p_literal_booleano','parser.py',252),
  ('literal -> FALSE','literal',1,'p_literal_booleano','parser.py',253),
  ('expresion -> aritmetica','expresion',1,'p_expresion','parser.py',261),
  ('expresion -> literal','expresion',1,'p_expresion','parser.py',262),
  ('expresion -> relacional','expresion',1,'p_expresion','parser.py',263),
  ('expresion -> PARA expresion PARC','expresion',3,'p_expresion_parentesis','parser.py',269),
  ('aritmetica -> expresion SUMA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',274),
  ('aritmetica -> expresion RESTA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',275),
  ('aritmetica -> expresion MULTIPLICACION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',276),
  ('aritmetica -> expresion DIVISION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',277),
  ('aritmetica -> expresion POTENCIA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',278),
  ('aritmetica -> expresion MODULO expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',279),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica_binaria','parser.py',297),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica_binaria','parser.py',298),
  ('expresion -> expresion XOR expresion','expresion',3,'p_expresion_logica_binaria','parser.py',299),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_logica_unaria','parser.py',304),
  ('relacional -> expresion IGUALACION expresion','relacional',3,'p_relacional','parser.py',309),
  ('relacional -> expresion DIFERENCIACION expresion','relacional',3,'p_relacional','parser.py',310),
  ('relacional -> expresion MENOR expresion','relacional',3,'p_relacional','parser.py',311),
  ('relacional -> expresion MAYOR expresion','relacional',3,'p_relacional','parser.py',312),
  ('relacional -> expresion MENOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',313),
  ('relacional -> expresion MAYOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',314),
  ('literal -> ENTERO','literal',1,'p_entero','parser.py',332),
  ('literal -> CADENAS','literal',1,'p_cadena','parser.py',339),
  ('literal -> DECIMAL','literal',1,'p_decimal','parser.py',345),
  ('literal -> ID','literal',1,'p_id','parser.py',351),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',357),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',358),
  ('tipo -> STR','tipo',1,'p_tipo','parser.py',359),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',360),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','parser.py',361),
>>>>>>> Stashed changes
]
