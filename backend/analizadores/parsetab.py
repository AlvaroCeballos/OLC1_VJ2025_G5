
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftXORleftANDrightNOTleftIGUALACIONMENORMAYORMENOR_IGUALMAYOR_IGUALDIFERENCIACIONleftSUMARESTAleftMULTIPLICACIONDIVISIONnonassocPOTENCIAMODULOrightUMENOSAND ARROBA BOOLEAN BREAK CADENAS CARACTER CASE CHAR COMA COMENTARIO_MULTILINEA COMENTARIO_UNA_LINEA CONTINUE DECIMAL DECREMENTO DEFAULT DIFERENCIACION DIVISION DO DOS_PUNTOS ELSE ENTERO FALSE FLOAT FOR ID IDENTIFICADOR IF IGUAL IGUALACION INCREMENTO INT LLA LLC MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NOT OR PARA PARC POTENCIA PRINT PRINTLN PYC RESTA RETURN STR SUMA SWITCH TRUE UMENOS VAR WHILE XOR\n    ini : instrucciones\n    \n    instrucciones : instrucciones instruccion\n    \n    instrucciones : instruccion\n    \n    instruccion : instruccion_print PYC\n                | declaracion_variable PYC\n                | asignacion_variable PYC\n                | estructura_control\n                | incremento PYC\n                | decremento PYC\n    \n    estructura_control : instruccion_while\n                       | instruccion_if\n                       | instruccion_switch\n                       | instruccion_dowhile\n    \n    instruccion_while : WHILE PARA expresion PARC LLA instrucciones LLC\n    \n    instruccion_switch : SWITCH PARA expresion PARC LLA lista_case default_opcional LLC\n    \n    instruccion_dowhile : DO LLA instrucciones LLC WHILE PARA expresion PARC PYC\n    \n    instrucciones : \n    \n    lista_case : lista_case case_unico\n                | case_unico\n\n    \n    case_unico : CASE expresion DOS_PUNTOS instrucciones break_opcional\n    \n    break_opcional : BREAK PYC\n                   | \n    \n    default_opcional : DEFAULT DOS_PUNTOS instrucciones PYC\n                      | \n     \n    instruccion_if : base_if\n                   | base_if ELSE LLA instrucciones LLC\n                   | base_if ELSE instruccion_if                 \n     \n    base_if : IF PARA expresion PARC LLA instrucciones LLC\n    \n    incremento : ID INCREMENTO\n    \n    decremento : ID DECREMENTO\n    \n    instruccion_print : tipo_print PARA expresion PARC\n    \n    literal : CARACTER\n    \n    tipo_print : PRINT\n               | PRINTLN\n    \n    declaracion_variable : tipo ID IGUAL expresion\n                        | tipo ID\n    \n    asignacion_variable : ID IGUAL expresion\n    \n    literal : TRUE\n            | FALSE\n    \n    expresion : aritmetica\n              | literal\n              | relacional\n\n    expresion : PARA expresion PARC\n    aritmetica : expresion SUMA expresion\n                | expresion RESTA expresion\n                | expresion MULTIPLICACION expresion\n                | expresion DIVISION expresion\n                | expresion POTENCIA expresion\n                | expresion MODULO expresion\n    \n    expresion : expresion OR expresion\n              | expresion AND expresion\n              | expresion XOR expresion\n    expresion : NOT expresion\n    relacional : expresion IGUALACION expresion\n               | expresion DIFERENCIACION expresion\n               | expresion MENOR expresion\n               | expresion MAYOR expresion\n               | expresion MENOR_IGUAL expresion\n               | expresion MAYOR_IGUAL expresion\n    \n    literal : ENTERO\n    \n    literal : CADENAS\n    \n    literal : DECIMAL\n    \n    literal : ID\n    \n    tipo : INT\n        | FLOAT\n        | STR\n        | CHAR\n        | BOOLEAN\n    '
    
_lr_action_items = {'ID':([0,2,3,7,11,13,14,15,16,19,20,21,22,23,25,29,30,31,32,33,34,35,37,40,42,43,44,45,50,58,61,62,64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,86,106,107,110,111,114,115,116,117,123,124,125,126,128,129,130,],[12,12,-3,-7,36,-10,-11,-12,-13,-64,-65,-66,-67,-68,-25,-2,-4,-5,-6,-8,-9,57,57,57,57,12,57,57,57,57,12,-27,12,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,12,12,-26,12,12,57,57,12,-14,-28,-15,12,12,12,12,-16,]),'PRINT':([0,2,3,7,13,14,15,16,25,29,30,31,32,33,34,43,61,62,64,86,106,107,110,111,116,117,123,124,125,126,128,129,130,],[17,17,-3,-7,-10,-11,-12,-13,-25,-2,-4,-5,-6,-8,-9,17,17,-27,17,17,17,-26,17,17,17,-14,-28,-15,17,17,17,17,-16,]),'PRINTLN':([0,2,3,7,13,14,15,16,25,29,30,31,32,33,34,43,61,62,64,86,106,107,110,111,116,117,123,124,125,126,128,129,130,],[18,18,-3,-7,-10,-11,-12,-13,-25,-2,-4,-5,-6,-8,-9,18,18,-27,18,18,18,-26,18,18,18,-14,-28,-15,18,18,18,18,-16,]),'INT':([0,2,3,7,13,14,15,16,25,29,30,31,32,33,34,43,61,62,64,86,106,107,110,111,116,117,123,124,125,126,128,129,130,],[19,19,-3,-7,-10,-11,-12,-13,-25,-2,-4,-5,-6,-8,-9,19,19,-27,19,19,19,-26,19,19,19,-14,-28,-15,19,19,19,19,-16,]),'FLOAT':([0,2,3,7,13,14,15,16,25,29,30,31,32,33,34,43,61,62,64,86,106,107,110,111,116,117,123,124,125,126,128,129,130,],[20,20,-3,-7,-10,-11,-12,-13,-25,-2,-4,-5,-6,-8,-9,20,20,-27,20,20,20,-26,20,20,20,-14,-28,-15,20,20,20,20,-16,]),'STR':([0,2,3,7,13,14,15,16,25,29,30,31,32,33,34,43,61,62,64,86,106,107,110,111,116,117,123,124,125,126,128,129,130,],[21,21,-3,-7,-10,-11,-12,-13,-25,-2,-4,-5,-6,-8,-9,21,21,-27,21,21,21,-26,21,21,21,-14,-28,-15,21,21,21,21,-16,]),'CHAR':([0,2,3,7,13,14,15,16,25,29,30,31,32,33,34,43,61,62,64,86,106,107,110,111,116,117,123,124,125,126,128,129,130,],[22,22,-3,-7,-10,-11,-12,-13,-25,-2,-4,-5,-6,-8,-9,22,22,-27,22,22,22,-26,22,22,22,-14,-28,-15,22,22,22,22,-16,]),'BOOLEAN':([0,2,3,7,13,14,15,16,25,29,30,31,32,33,34,43,61,62,64,86,106,107,110,111,116,117,123,124,125,126,128,129,130,],[23,23,-3,-7,-10,-11,-12,-13,-25,-2,-4,-5,-6,-8,-9,23,23,-27,23,23,23,-26,23,23,23,-14,-28,-15,23,23,23,23,-16,]),'WHILE':([0,2,3,7,13,14,15,16,25,29,30,31,32,33,34,43,61,62,64,86,88,106,107,110,111,116,117,123,124,125,126,128,129,130,],[24,24,-3,-7,-10,-11,-12,-13,-25,-2,-4,-5,-6,-8,-9,24,24,-27,24,24,109,24,-26,24,24,24,-14,-28,-15,24,24,24,24,-16,]),'SWITCH':([0,2,3,7,13,14,15,16,25,29,30,31,32,33,34,43,61,62,64,86,106,107,110,111,116,117,123,124,125,126,128,129,130,],[26,26,-3,-7,-10,-11,-12,-13,-25,-2,-4,-5,-6,-8,-9,26,26,-27,26,26,26,-26,26,26,26,-14,-28,-15,26,26,26,26,-16,]),'DO':([0,2,3,7,13,14,15,16,25,29,30,31,32,33,34,43,61,62,64,86,106,107,110,111,116,117,123,124,125,126,128,129,130,],[27,27,-3,-7,-10,-11,-12,-13,-25,-2,-4,-5,-6,-8,-9,27,27,-27,27,27,27,-26,27,27,27,-14,-28,-15,27,27,27,27,-16,]),'IF':([0,2,3,7,13,14,15,16,25,29,30,31,32,33,34,41,43,61,62,64,86,106,107,110,111,116,117,123,124,125,126,128,129,130,],[28,28,-3,-7,-10,-11,-12,-13,-25,-2,-4,-5,-6,-8,-9,28,28,28,-27,28,28,28,-26,28,28,28,-14,-28,-15,28,28,28,28,-16,]),'$end':([0,1,2,3,7,13,14,15,16,25,29,30,31,32,33,34,62,107,117,123,124,130,],[-17,0,-1,-3,-7,-10,-11,-12,-13,-25,-2,-4,-5,-6,-8,-9,-27,-26,-14,-28,-15,-16,]),'LLC':([3,7,13,14,15,16,25,29,30,31,32,33,34,43,61,62,64,86,106,107,110,111,112,113,116,117,118,119,123,124,126,129,130,131,132,134,],[-3,-7,-10,-11,-12,-13,-25,-2,-4,-5,-6,-8,-9,-17,-17,-27,88,107,-17,-26,-17,117,-24,-19,123,-14,124,-18,-28,-15,-17,-22,-16,-23,-20,-21,]),'PYC':([3,4,5,6,7,8,9,13,14,15,16,25,29,30,31,32,33,34,36,38,39,47,48,49,51,52,53,54,55,56,57,59,62,67,83,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,117,123,124,125,127,128,130,133,],[-3,30,31,32,-7,33,34,-10,-11,-12,-13,-25,-2,-4,-5,-6,-8,-9,-36,-29,-30,-40,-41,-42,-32,-38,-39,-60,-61,-62,-63,-37,-27,-31,-53,-35,-43,-50,-51,-52,-44,-45,-46,-47,-48,-49,-54,-55,-56,-57,-58,-59,-26,-14,-28,-15,-17,130,131,-16,134,]),'BREAK':([3,7,13,14,15,16,25,29,30,31,32,33,34,62,107,117,123,124,126,129,130,],[-3,-7,-10,-11,-12,-13,-25,-2,-4,-5,-6,-8,-9,-27,-26,-14,-28,-15,-17,133,-16,]),'DEFAULT':([3,7,13,14,15,16,25,29,30,31,32,33,34,62,107,112,113,117,119,123,124,126,129,130,132,134,],[-3,-7,-10,-11,-12,-13,-25,-2,-4,-5,-6,-8,-9,-27,-26,120,-19,-14,-18,-28,-15,-17,-22,-16,-20,-21,]),'CASE':([3,7,13,14,15,16,25,29,30,31,32,33,34,62,107,108,112,113,117,119,123,124,126,129,130,132,134,],[-3,-7,-10,-11,-12,-13,-25,-2,-4,-5,-6,-8,-9,-27,-26,114,114,-19,-14,-18,-28,-15,-17,-22,-16,-20,-21,]),'PARA':([10,17,18,24,26,28,35,37,40,42,44,45,50,58,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,109,114,115,],[35,-33,-34,40,42,44,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,115,45,45,]),'IGUAL':([12,36,],[37,58,]),'INCREMENTO':([12,],[38,]),'DECREMENTO':([12,],[39,]),'ELSE':([25,123,],[41,-28,]),'LLA':([27,41,85,87,89,],[43,61,106,108,110,]),'NOT':([35,37,40,42,44,45,50,58,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,114,115,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'CARACTER':([35,37,40,42,44,45,50,58,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,114,115,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'TRUE':([35,37,40,42,44,45,50,58,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,114,115,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'FALSE':([35,37,40,42,44,45,50,58,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,114,115,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'ENTERO':([35,37,40,42,44,45,50,58,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,114,115,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'CADENAS':([35,37,40,42,44,45,50,58,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,114,115,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'DECIMAL':([35,37,40,42,44,45,50,58,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,114,115,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'PARC':([46,47,48,49,51,52,53,54,55,56,57,60,63,65,66,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,122,],[67,-40,-41,-42,-32,-38,-39,-60,-61,-62,-63,85,87,89,90,-53,-43,-50,-51,-52,-44,-45,-46,-47,-48,-49,-54,-55,-56,-57,-58,-59,127,]),'OR':([46,47,48,49,51,52,53,54,55,56,57,59,60,63,65,66,83,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,121,122,],[68,-40,-41,-42,-32,-38,-39,-60,-61,-62,-63,68,68,68,68,68,-53,68,-43,-50,-51,-52,-44,-45,-46,-47,-48,-49,-54,-55,-56,-57,-58,-59,68,68,]),'AND':([46,47,48,49,51,52,53,54,55,56,57,59,60,63,65,66,83,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,121,122,],[69,-40,-41,-42,-32,-38,-39,-60,-61,-62,-63,69,69,69,69,69,-53,69,-43,69,-51,69,-44,-45,-46,-47,-48,-49,-54,-55,-56,-57,-58,-59,69,69,]),'XOR':([46,47,48,49,51,52,53,54,55,56,57,59,60,63,65,66,83,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,121,122,],[70,-40,-41,-42,-32,-38,-39,-60,-61,-62,-63,70,70,70,70,70,-53,70,-43,70,-51,-52,-44,-45,-46,-47,-48,-49,-54,-55,-56,-57,-58,-59,70,70,]),'SUMA':([46,47,48,49,51,52,53,54,55,56,57,59,60,63,65,66,83,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,121,122,],[71,-40,-41,-42,-32,-38,-39,-60,-61,-62,-63,71,71,71,71,71,71,71,-43,71,71,71,-44,-45,-46,-47,-48,-49,71,71,71,71,71,71,71,71,]),'RESTA':([46,47,48,49,51,52,53,54,55,56,57,59,60,63,65,66,83,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,121,122,],[72,-40,-41,-42,-32,-38,-39,-60,-61,-62,-63,72,72,72,72,72,72,72,-43,72,72,72,-44,-45,-46,-47,-48,-49,72,72,72,72,72,72,72,72,]),'MULTIPLICACION':([46,47,48,49,51,52,53,54,55,56,57,59,60,63,65,66,83,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,121,122,],[73,-40,-41,-42,-32,-38,-39,-60,-61,-62,-63,73,73,73,73,73,73,73,-43,73,73,73,73,73,-46,-47,-48,-49,73,73,73,73,73,73,73,73,]),'DIVISION':([46,47,48,49,51,52,53,54,55,56,57,59,60,63,65,66,83,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,121,122,],[74,-40,-41,-42,-32,-38,-39,-60,-61,-62,-63,74,74,74,74,74,74,74,-43,74,74,74,74,74,-46,-47,-48,-49,74,74,74,74,74,74,74,74,]),'POTENCIA':([46,47,48,49,51,52,53,54,55,56,57,59,60,63,65,66,83,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,121,122,],[75,-40,-41,-42,-32,-38,-39,-60,-61,-62,-63,75,75,75,75,75,75,75,-43,75,75,75,75,75,75,75,None,None,75,75,75,75,75,75,75,75,]),'MODULO':([46,47,48,49,51,52,53,54,55,56,57,59,60,63,65,66,83,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,121,122,],[76,-40,-41,-42,-32,-38,-39,-60,-61,-62,-63,76,76,76,76,76,76,76,-43,76,76,76,76,76,76,76,None,None,76,76,76,76,76,76,76,76,]),'IGUALACION':([46,47,48,49,51,52,53,54,55,56,57,59,60,63,65,66,83,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,121,122,],[77,-40,-41,-42,-32,-38,-39,-60,-61,-62,-63,77,77,77,77,77,77,77,-43,77,77,77,-44,-45,-46,-47,-48,-49,-54,-55,-56,-57,-58,-59,77,77,]),'DIFERENCIACION':([46,47,48,49,51,52,53,54,55,56,57,59,60,63,65,66,83,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,121,122,],[78,-40,-41,-42,-32,-38,-39,-60,-61,-62,-63,78,78,78,78,78,78,78,-43,78,78,78,-44,-45,-46,-47,-48,-49,-54,-55,-56,-57,-58,-59,78,78,]),'MENOR':([46,47,48,49,51,52,53,54,55,56,57,59,60,63,65,66,83,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,121,122,],[79,-40,-41,-42,-32,-38,-39,-60,-61,-62,-63,79,79,79,79,79,79,79,-43,79,79,79,-44,-45,-46,-47,-48,-49,-54,-55,-56,-57,-58,-59,79,79,]),'MAYOR':([46,47,48,49,51,52,53,54,55,56,57,59,60,63,65,66,83,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,121,122,],[80,-40,-41,-42,-32,-38,-39,-60,-61,-62,-63,80,80,80,80,80,80,80,-43,80,80,80,-44,-45,-46,-47,-48,-49,-54,-55,-56,-57,-58,-59,80,80,]),'MENOR_IGUAL':([46,47,48,49,51,52,53,54,55,56,57,59,60,63,65,66,83,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,121,122,],[81,-40,-41,-42,-32,-38,-39,-60,-61,-62,-63,81,81,81,81,81,81,81,-43,81,81,81,-44,-45,-46,-47,-48,-49,-54,-55,-56,-57,-58,-59,81,81,]),'MAYOR_IGUAL':([46,47,48,49,51,52,53,54,55,56,57,59,60,63,65,66,83,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,121,122,],[82,-40,-41,-42,-32,-38,-39,-60,-61,-62,-63,82,82,82,82,82,82,82,-43,82,82,82,-44,-45,-46,-47,-48,-49,-54,-55,-56,-57,-58,-59,82,82,]),'DOS_PUNTOS':([47,48,49,51,52,53,54,55,56,57,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,120,121,],[-40,-41,-42,-32,-38,-39,-60,-61,-62,-63,-53,-43,-50,-51,-52,-44,-45,-46,-47,-48,-49,-54,-55,-56,-57,-58,-59,125,126,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ini':([0,],[1,]),'instrucciones':([0,43,61,106,110,125,126,],[2,64,86,111,116,128,129,]),'instruccion':([0,2,43,61,64,86,106,110,111,116,125,126,128,129,],[3,29,3,3,29,29,3,3,29,29,3,3,29,29,]),'instruccion_print':([0,2,43,61,64,86,106,110,111,116,125,126,128,129,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'declaracion_variable':([0,2,43,61,64,86,106,110,111,116,125,126,128,129,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'asignacion_variable':([0,2,43,61,64,86,106,110,111,116,125,126,128,129,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'estructura_control':([0,2,43,61,64,86,106,110,111,116,125,126,128,129,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'incremento':([0,2,43,61,64,86,106,110,111,116,125,126,128,129,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'decremento':([0,2,43,61,64,86,106,110,111,116,125,126,128,129,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'tipo_print':([0,2,43,61,64,86,106,110,111,116,125,126,128,129,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'tipo':([0,2,43,61,64,86,106,110,111,116,125,126,128,129,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'instruccion_while':([0,2,43,61,64,86,106,110,111,116,125,126,128,129,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'instruccion_if':([0,2,41,43,61,64,86,106,110,111,116,125,126,128,129,],[14,14,62,14,14,14,14,14,14,14,14,14,14,14,14,]),'instruccion_switch':([0,2,43,61,64,86,106,110,111,116,125,126,128,129,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'instruccion_dowhile':([0,2,43,61,64,86,106,110,111,116,125,126,128,129,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'base_if':([0,2,41,43,61,64,86,106,110,111,116,125,126,128,129,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'expresion':([35,37,40,42,44,45,50,58,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,114,115,],[46,59,60,63,65,66,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,121,122,]),'aritmetica':([35,37,40,42,44,45,50,58,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,114,115,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'literal':([35,37,40,42,44,45,50,58,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,114,115,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'relacional':([35,37,40,42,44,45,50,58,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,114,115,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'lista_case':([108,],[112,]),'case_unico':([108,112,],[113,119,]),'default_opcional':([112,],[118,]),'break_opcional':([129,],[132,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ini","S'",1,None,None,None),
  ('ini -> instrucciones','ini',1,'p_inicio','parser.py',71),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','parser.py',78),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','parser.py',86),
  ('instruccion -> instruccion_print PYC','instruccion',2,'p_instruccion','parser.py',92),
  ('instruccion -> declaracion_variable PYC','instruccion',2,'p_instruccion','parser.py',93),
  ('instruccion -> asignacion_variable PYC','instruccion',2,'p_instruccion','parser.py',94),
  ('instruccion -> estructura_control','instruccion',1,'p_instruccion','parser.py',95),
  ('instruccion -> incremento PYC','instruccion',2,'p_instruccion','parser.py',96),
  ('instruccion -> decremento PYC','instruccion',2,'p_instruccion','parser.py',97),
  ('estructura_control -> instruccion_while','estructura_control',1,'p_estructura_control','parser.py',108),
  ('estructura_control -> instruccion_if','estructura_control',1,'p_estructura_control','parser.py',109),
  ('estructura_control -> instruccion_switch','estructura_control',1,'p_estructura_control','parser.py',110),
  ('estructura_control -> instruccion_dowhile','estructura_control',1,'p_estructura_control','parser.py',111),
  ('instruccion_while -> WHILE PARA expresion PARC LLA instrucciones LLC','instruccion_while',7,'p_instruccion_while','parser.py',118),
  ('instruccion_switch -> SWITCH PARA expresion PARC LLA lista_case default_opcional LLC','instruccion_switch',8,'p_instruccion_switch','parser.py',131),
  ('instruccion_dowhile -> DO LLA instrucciones LLC WHILE PARA expresion PARC PYC','instruccion_dowhile',9,'p_instruccion_dowhile','parser.py',144),
  ('instrucciones -> <empty>','instrucciones',0,'p_instrucciones_empty','parser.py',156),
  ('lista_case -> lista_case case_unico','lista_case',2,'p_lista_case','parser.py',163),
  ('lista_case -> case_unico','lista_case',1,'p_lista_case','parser.py',164),
  ('case_unico -> CASE expresion DOS_PUNTOS instrucciones break_opcional','case_unico',5,'p_case_unico','parser.py',174),
  ('break_opcional -> BREAK PYC','break_opcional',2,'p_break_opcional','parser.py',189),
  ('break_opcional -> <empty>','break_opcional',0,'p_break_opcional','parser.py',190),
  ('default_opcional -> DEFAULT DOS_PUNTOS instrucciones PYC','default_opcional',4,'p_default_opcional','parser.py',200),
  ('default_opcional -> <empty>','default_opcional',0,'p_default_opcional','parser.py',201),
  ('instruccion_if -> base_if','instruccion_if',1,'p_instruccion_if','parser.py',209),
  ('instruccion_if -> base_if ELSE LLA instrucciones LLC','instruccion_if',5,'p_instruccion_if','parser.py',210),
  ('instruccion_if -> base_if ELSE instruccion_if','instruccion_if',3,'p_instruccion_if','parser.py',211),
  ('base_if -> IF PARA expresion PARC LLA instrucciones LLC','base_if',7,'p_base_if','parser.py',237),
  ('incremento -> ID INCREMENTO','incremento',2,'p_incremento','parser.py',252),
  ('decremento -> ID DECREMENTO','decremento',2,'p_decremento','parser.py',273),
  ('instruccion_print -> tipo_print PARA expresion PARC','instruccion_print',4,'p_instruccion_print','parser.py',295),
  ('literal -> CARACTER','literal',1,'p_caracter','parser.py',302),
  ('tipo_print -> PRINT','tipo_print',1,'p_tipo_print','parser.py',308),
  ('tipo_print -> PRINTLN','tipo_print',1,'p_tipo_print','parser.py',309),
  ('declaracion_variable -> tipo ID IGUAL expresion','declaracion_variable',4,'p_declaracion_variable','parser.py',315),
  ('declaracion_variable -> tipo ID','declaracion_variable',2,'p_declaracion_variable','parser.py',316),
  ('asignacion_variable -> ID IGUAL expresion','asignacion_variable',3,'p_asignacion_variable','parser.py',329),
  ('literal -> TRUE','literal',1,'p_literal_booleano','parser.py',336),
  ('literal -> FALSE','literal',1,'p_literal_booleano','parser.py',337),
  ('expresion -> aritmetica','expresion',1,'p_expresion','parser.py',345),
  ('expresion -> literal','expresion',1,'p_expresion','parser.py',346),
  ('expresion -> relacional','expresion',1,'p_expresion','parser.py',347),
  ('expresion -> PARA expresion PARC','expresion',3,'p_expresion_parentesis','parser.py',353),
  ('aritmetica -> expresion SUMA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',358),
  ('aritmetica -> expresion RESTA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',359),
  ('aritmetica -> expresion MULTIPLICACION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',360),
  ('aritmetica -> expresion DIVISION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',361),
  ('aritmetica -> expresion POTENCIA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',362),
  ('aritmetica -> expresion MODULO expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',363),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica_binaria','parser.py',381),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica_binaria','parser.py',382),
  ('expresion -> expresion XOR expresion','expresion',3,'p_expresion_logica_binaria','parser.py',383),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_logica_unaria','parser.py',388),
  ('relacional -> expresion IGUALACION expresion','relacional',3,'p_relacional','parser.py',393),
  ('relacional -> expresion DIFERENCIACION expresion','relacional',3,'p_relacional','parser.py',394),
  ('relacional -> expresion MENOR expresion','relacional',3,'p_relacional','parser.py',395),
  ('relacional -> expresion MAYOR expresion','relacional',3,'p_relacional','parser.py',396),
  ('relacional -> expresion MENOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',397),
  ('relacional -> expresion MAYOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',398),
  ('literal -> ENTERO','literal',1,'p_entero','parser.py',416),
  ('literal -> CADENAS','literal',1,'p_cadena','parser.py',423),
  ('literal -> DECIMAL','literal',1,'p_decimal','parser.py',429),
  ('literal -> ID','literal',1,'p_id','parser.py',435),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',441),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',442),
  ('tipo -> STR','tipo',1,'p_tipo','parser.py',443),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',444),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','parser.py',445),
]
