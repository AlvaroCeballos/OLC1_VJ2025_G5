
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightUMENOSleftORleftXORleftANDrightNOTleftIGUALACIONMENORMAYORMENOR_IGUALMAYOR_IGUALDIFERENCIACIONleftSUMARESTAleftMULTIPLICACIONDIVISIONnonassocPOTENCIAMODULOAND ARROBA BOOL BREAK CADENAS CARACTER CASE CHAR COMA COMENTARIO_MULTILINEA COMENTARIO_UNA_LINEA CONTINUE DECIMAL DECREMENTO DEFAULT DIFERENCIACION DIVISION DO DOS_PUNTOS ELSE ENTERO FALSE FLOAT FOR ID IDENTIFICADOR IF IGUAL IGUALACION INCREMENTO INT LLA LLC MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NOT OR PARA PARC POTENCIA PRINTLN PYC RESTA RETURN STR SUMA SWITCH TRUE UMENOS VAR WHILE XOR\nini : instrucciones\n\ninstrucciones : instrucciones instruccion\ninstrucciones : \ninstrucciones : instruccion\n\ninstruccion : instruccion_println\n            | declaracion_variable PYC\n            | asignacion_variable PYC\n            | estructura_control\n            | incremento PYC\n            | decremento PYC\n\nestructura_control : instruccion_while\n                   | instruccion_if\n                   | instruccion_switch\n                   | instruccion_dowhile\n                   | instruccion_for\n\ninstruccion_while : WHILE PARA expresion PARC LLA instrucciones LLC\n\ninstruccion_for : FOR PARA declaracion_variable PYC expresion PYC actualizacion PARC LLA instrucciones LLC\n\nactualizacion : incremento\n| decremento\n| expresion\n| asignacion_variable\n\ninstruccion_switch : SWITCH PARA expresion PARC LLA lista_case default_opcional LLC\n\ninstruccion_dowhile : DO LLA instrucciones LLC WHILE PARA expresion PARC PYC\n\nlista_case : lista_case case_unico\n            | case_unico\n\n\ncase_unico : CASE expresion DOS_PUNTOS instrucciones\n\ndefault_opcional : DEFAULT DOS_PUNTOS instrucciones\n                 | \n\ninstruccion_if : base_if\n               | base_if ELSE LLA instrucciones LLC\n               | base_if ELSE instruccion_if                 \n\nbase_if : IF PARA expresion PARC LLA instrucciones LLC\n\nincremento : ID INCREMENTO\n\ndecremento : ID DECREMENTO\ninstruccion_println : PRINTLN PARA expresion PARC PYC\nliteral : CARACTER\n\ndeclaracion_variable : tipo ID IGUAL expresion\n                    | tipo ID\n\nasignacion_variable : ID IGUAL expresion\n\nliteral : TRUE\n        | FALSE\n\nexpresion : aritmetica\n          | literal\n          | relacional\n\nexpresion : PARA expresion PARC\naritmetica : expresion SUMA expresion\n            | expresion RESTA expresion\n            | expresion MULTIPLICACION expresion\n            | expresion DIVISION expresion\n            | expresion POTENCIA expresion\n            | expresion MODULO expresion\n\nexpresion : expresion OR expresion\n          | expresion AND expresion\n          | expresion XOR expresion\nexpresion : RESTA expresion %prec UMENOS\nrelacional : expresion IGUALACION expresion\n           | expresion DIFERENCIACION expresion\n           | expresion MENOR expresion\n           | expresion MAYOR expresion\n           | expresion MENOR_IGUAL expresion\n           | expresion MAYOR_IGUAL expresion\n\nliteral : ENTERO\n\nliteral : CADENAS\n\nliteral : DECIMAL\n\nliteral : ID\n\ntipo : INT\n    | FLOAT\n    | STR\n    | CHAR\n    | BOOL\ninstruccion : BREAK PYCinstruccion : CONTINUE PYC'
    
_lr_action_items = {'BREAK':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,46,65,66,68,91,97,113,114,118,119,125,126,138,139,140,141,144,145,146,147,148,149,],[10,10,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-71,-72,10,10,-31,10,10,-35,10,-30,10,10,10,-16,-32,-22,10,10,10,10,-23,10,10,-17,]),'CONTINUE':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,46,65,66,68,91,97,113,114,118,119,125,126,138,139,140,141,144,145,146,147,148,149,],[11,11,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-71,-72,11,11,-31,11,11,-35,11,-30,11,11,11,-16,-32,-22,11,11,11,11,-23,11,11,-17,]),'PRINTLN':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,46,65,66,68,91,97,113,114,118,119,125,126,138,139,140,141,144,145,146,147,148,149,],[12,12,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-71,-72,12,12,-31,12,12,-35,12,-30,12,12,12,-16,-32,-22,12,12,12,12,-23,12,12,-17,]),'ID':([0,2,3,4,7,13,15,16,17,18,19,20,21,22,23,24,26,31,32,33,34,35,36,37,38,40,43,45,46,48,49,54,62,65,66,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,91,94,97,113,114,118,119,122,123,124,125,126,138,139,140,141,144,145,146,147,148,149,],[14,14,-4,-5,-8,39,-11,-12,-13,-14,-15,-66,-67,-68,-69,-70,-29,-2,-6,-7,-9,-10,-71,-72,61,61,61,61,14,61,61,61,61,14,-31,14,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,14,61,-35,14,-30,14,14,61,61,137,14,-16,-32,-22,14,14,14,14,-23,14,14,-17,]),'INT':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,46,47,65,66,68,91,97,113,114,118,119,125,126,138,139,140,141,144,145,146,147,148,149,],[20,20,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-71,-72,20,20,20,-31,20,20,-35,20,-30,20,20,20,-16,-32,-22,20,20,20,20,-23,20,20,-17,]),'FLOAT':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,46,47,65,66,68,91,97,113,114,118,119,125,126,138,139,140,141,144,145,146,147,148,149,],[21,21,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-71,-72,21,21,21,-31,21,21,-35,21,-30,21,21,21,-16,-32,-22,21,21,21,21,-23,21,21,-17,]),'STR':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,46,47,65,66,68,91,97,113,114,118,119,125,126,138,139,140,141,144,145,146,147,148,149,],[22,22,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-71,-72,22,22,22,-31,22,22,-35,22,-30,22,22,22,-16,-32,-22,22,22,22,22,-23,22,22,-17,]),'CHAR':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,46,47,65,66,68,91,97,113,114,118,119,125,126,138,139,140,141,144,145,146,147,148,149,],[23,23,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-71,-72,23,23,23,-31,23,23,-35,23,-30,23,23,23,-16,-32,-22,23,23,23,23,-23,23,23,-17,]),'BOOL':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,46,47,65,66,68,91,97,113,114,118,119,125,126,138,139,140,141,144,145,146,147,148,149,],[24,24,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-71,-72,24,24,24,-31,24,24,-35,24,-30,24,24,24,-16,-32,-22,24,24,24,24,-23,24,24,-17,]),'WHILE':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,46,65,66,68,91,93,97,113,114,118,119,125,126,138,139,140,141,144,145,146,147,148,149,],[25,25,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-71,-72,25,25,-31,25,25,116,-35,25,-30,25,25,25,-16,-32,-22,25,25,25,25,-23,25,25,-17,]),'SWITCH':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,46,65,66,68,91,97,113,114,118,119,125,126,138,139,140,141,144,145,146,147,148,149,],[27,27,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-71,-72,27,27,-31,27,27,-35,27,-30,27,27,27,-16,-32,-22,27,27,27,27,-23,27,27,-17,]),'DO':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,46,65,66,68,91,97,113,114,118,119,125,126,138,139,140,141,144,145,146,147,148,149,],[28,28,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-71,-72,28,28,-31,28,28,-35,28,-30,28,28,28,-16,-32,-22,28,28,28,28,-23,28,28,-17,]),'FOR':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,46,65,66,68,91,97,113,114,118,119,125,126,138,139,140,141,144,145,146,147,148,149,],[29,29,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-71,-72,29,29,-31,29,29,-35,29,-30,29,29,29,-16,-32,-22,29,29,29,29,-23,29,29,-17,]),'IF':([0,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,44,46,65,66,68,91,97,113,114,118,119,125,126,138,139,140,141,144,145,146,147,148,149,],[30,30,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-71,-72,30,30,30,-31,30,30,-35,30,-30,30,30,30,-16,-32,-22,30,30,30,30,-23,30,30,-17,]),'$end':([0,1,2,3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,66,97,114,126,138,139,146,149,],[-3,0,-1,-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-71,-72,-31,-35,-30,-16,-32,-22,-23,-17,]),'LLC':([3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,46,65,66,68,91,97,113,114,118,119,120,121,125,126,127,128,138,139,140,141,144,145,146,147,148,149,],[-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-71,-72,-3,-3,-31,93,114,-35,-3,-30,-3,126,-28,-25,138,-16,139,-24,-32,-22,-3,-3,-27,-26,-23,-3,149,-17,]),'DEFAULT':([3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,66,97,114,120,121,126,128,138,139,141,145,146,149,],[-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-71,-72,-31,-35,-30,129,-25,-16,-24,-32,-22,-3,-26,-23,-17,]),'CASE':([3,4,7,15,16,17,18,19,26,31,32,33,34,35,36,37,66,97,114,115,120,121,126,128,138,139,141,145,146,149,],[-4,-5,-8,-11,-12,-13,-14,-15,-29,-2,-6,-7,-9,-10,-71,-72,-31,-35,-30,122,122,-25,-16,-24,-32,-22,-3,-26,-23,-17,]),'PYC':([5,6,8,9,10,11,39,41,42,51,52,53,55,56,57,58,59,60,61,63,69,72,88,89,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,117,142,],[32,33,34,35,36,37,-38,-33,-34,-42,-43,-44,-36,-40,-41,-62,-63,-64,-65,-39,94,97,-55,-37,-45,-52,-53,-54,-46,-47,-48,-49,-50,-51,-56,-57,-58,-59,-60,-61,124,146,]),'PARA':([12,25,27,29,30,38,40,43,45,48,49,54,62,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,116,122,123,124,],[38,43,45,47,48,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,123,49,49,49,]),'IGUAL':([14,39,137,],[40,62,40,]),'INCREMENTO':([14,137,],[41,41,]),'DECREMENTO':([14,137,],[42,42,]),'ELSE':([26,138,],[44,-32,]),'LLA':([28,44,90,92,95,143,],[46,65,113,115,118,147,]),'RESTA':([38,40,43,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,94,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,117,122,123,124,130,131,132,137,],[54,54,54,54,54,54,77,-42,-43,-44,54,-36,-40,-41,-62,-63,-64,-65,54,77,77,77,77,77,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,77,77,54,-45,77,77,77,-46,-47,-48,-49,-50,-51,77,77,77,77,77,77,77,54,54,54,77,77,77,-65,]),'CARACTER':([38,40,43,45,48,49,54,62,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,122,123,124,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'TRUE':([38,40,43,45,48,49,54,62,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,122,123,124,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'FALSE':([38,40,43,45,48,49,54,62,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,122,123,124,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'ENTERO':([38,40,43,45,48,49,54,62,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,122,123,124,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'CADENAS':([38,40,43,45,48,49,54,62,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,122,123,124,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'DECIMAL':([38,40,43,45,48,49,54,62,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,122,123,124,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'PARC':([41,42,50,51,52,53,55,56,57,58,59,60,61,63,64,67,70,71,88,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,131,132,133,134,135,136,137,],[-33,-34,72,-42,-43,-44,-36,-40,-41,-62,-63,-64,-65,-39,90,92,95,96,-55,-45,-52,-53,-54,-46,-47,-48,-49,-50,-51,-56,-57,-58,-59,-60,-61,142,-20,143,-18,-19,-21,-65,]),'OR':([50,51,52,53,55,56,57,58,59,60,61,63,64,67,70,71,88,89,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,117,130,131,132,137,],[73,-42,-43,-44,-36,-40,-41,-62,-63,-64,-65,73,73,73,73,73,73,73,-45,-52,-53,-54,-46,-47,-48,-49,-50,-51,-56,-57,-58,-59,-60,-61,73,73,73,73,-65,]),'AND':([50,51,52,53,55,56,57,58,59,60,61,63,64,67,70,71,88,89,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,117,130,131,132,137,],[74,-42,-43,-44,-36,-40,-41,-62,-63,-64,-65,74,74,74,74,74,74,74,-45,74,-53,74,-46,-47,-48,-49,-50,-51,-56,-57,-58,-59,-60,-61,74,74,74,74,-65,]),'XOR':([50,51,52,53,55,56,57,58,59,60,61,63,64,67,70,71,88,89,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,117,130,131,132,137,],[75,-42,-43,-44,-36,-40,-41,-62,-63,-64,-65,75,75,75,75,75,75,75,-45,75,-53,-54,-46,-47,-48,-49,-50,-51,-56,-57,-58,-59,-60,-61,75,75,75,75,-65,]),'SUMA':([50,51,52,53,55,56,57,58,59,60,61,63,64,67,70,71,88,89,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,117,130,131,132,137,],[76,-42,-43,-44,-36,-40,-41,-62,-63,-64,-65,76,76,76,76,76,76,76,-45,76,76,76,-46,-47,-48,-49,-50,-51,76,76,76,76,76,76,76,76,76,76,-65,]),'MULTIPLICACION':([50,51,52,53,55,56,57,58,59,60,61,63,64,67,70,71,88,89,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,117,130,131,132,137,],[78,-42,-43,-44,-36,-40,-41,-62,-63,-64,-65,78,78,78,78,78,78,78,-45,78,78,78,78,78,-48,-49,-50,-51,78,78,78,78,78,78,78,78,78,78,-65,]),'DIVISION':([50,51,52,53,55,56,57,58,59,60,61,63,64,67,70,71,88,89,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,117,130,131,132,137,],[79,-42,-43,-44,-36,-40,-41,-62,-63,-64,-65,79,79,79,79,79,79,79,-45,79,79,79,79,79,-48,-49,-50,-51,79,79,79,79,79,79,79,79,79,79,-65,]),'POTENCIA':([50,51,52,53,55,56,57,58,59,60,61,63,64,67,70,71,88,89,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,117,130,131,132,137,],[80,-42,-43,-44,-36,-40,-41,-62,-63,-64,-65,80,80,80,80,80,80,80,-45,80,80,80,80,80,80,80,None,None,80,80,80,80,80,80,80,80,80,80,-65,]),'MODULO':([50,51,52,53,55,56,57,58,59,60,61,63,64,67,70,71,88,89,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,117,130,131,132,137,],[81,-42,-43,-44,-36,-40,-41,-62,-63,-64,-65,81,81,81,81,81,81,81,-45,81,81,81,81,81,81,81,None,None,81,81,81,81,81,81,81,81,81,81,-65,]),'IGUALACION':([50,51,52,53,55,56,57,58,59,60,61,63,64,67,70,71,88,89,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,117,130,131,132,137,],[82,-42,-43,-44,-36,-40,-41,-62,-63,-64,-65,82,82,82,82,82,82,82,-45,82,82,82,-46,-47,-48,-49,-50,-51,-56,-57,-58,-59,-60,-61,82,82,82,82,-65,]),'DIFERENCIACION':([50,51,52,53,55,56,57,58,59,60,61,63,64,67,70,71,88,89,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,117,130,131,132,137,],[83,-42,-43,-44,-36,-40,-41,-62,-63,-64,-65,83,83,83,83,83,83,83,-45,83,83,83,-46,-47,-48,-49,-50,-51,-56,-57,-58,-59,-60,-61,83,83,83,83,-65,]),'MENOR':([50,51,52,53,55,56,57,58,59,60,61,63,64,67,70,71,88,89,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,117,130,131,132,137,],[84,-42,-43,-44,-36,-40,-41,-62,-63,-64,-65,84,84,84,84,84,84,84,-45,84,84,84,-46,-47,-48,-49,-50,-51,-56,-57,-58,-59,-60,-61,84,84,84,84,-65,]),'MAYOR':([50,51,52,53,55,56,57,58,59,60,61,63,64,67,70,71,88,89,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,117,130,131,132,137,],[85,-42,-43,-44,-36,-40,-41,-62,-63,-64,-65,85,85,85,85,85,85,85,-45,85,85,85,-46,-47,-48,-49,-50,-51,-56,-57,-58,-59,-60,-61,85,85,85,85,-65,]),'MENOR_IGUAL':([50,51,52,53,55,56,57,58,59,60,61,63,64,67,70,71,88,89,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,117,130,131,132,137,],[86,-42,-43,-44,-36,-40,-41,-62,-63,-64,-65,86,86,86,86,86,86,86,-45,86,86,86,-46,-47,-48,-49,-50,-51,-56,-57,-58,-59,-60,-61,86,86,86,86,-65,]),'MAYOR_IGUAL':([50,51,52,53,55,56,57,58,59,60,61,63,64,67,70,71,88,89,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,117,130,131,132,137,],[87,-42,-43,-44,-36,-40,-41,-62,-63,-64,-65,87,87,87,87,87,87,87,-45,87,87,87,-46,-47,-48,-49,-50,-51,-56,-57,-58,-59,-60,-61,87,87,87,87,-65,]),'DOS_PUNTOS':([51,52,53,55,56,57,58,59,60,61,88,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,129,130,],[-42,-43,-44,-36,-40,-41,-62,-63,-64,-65,-55,-45,-52,-53,-54,-46,-47,-48,-49,-50,-51,-56,-57,-58,-59,-60,-61,140,141,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ini':([0,],[1,]),'instrucciones':([0,46,65,113,118,140,141,147,],[2,68,91,119,125,144,145,148,]),'instruccion':([0,2,46,65,68,91,113,118,119,125,140,141,144,145,147,148,],[3,31,3,3,31,31,3,3,31,31,3,3,31,31,3,31,]),'instruccion_println':([0,2,46,65,68,91,113,118,119,125,140,141,144,145,147,148,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'declaracion_variable':([0,2,46,47,65,68,91,113,118,119,125,140,141,144,145,147,148,],[5,5,5,69,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'asignacion_variable':([0,2,46,65,68,91,113,118,119,124,125,140,141,144,145,147,148,],[6,6,6,6,6,6,6,6,6,136,6,6,6,6,6,6,6,]),'estructura_control':([0,2,46,65,68,91,113,118,119,125,140,141,144,145,147,148,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'incremento':([0,2,46,65,68,91,113,118,119,124,125,140,141,144,145,147,148,],[8,8,8,8,8,8,8,8,8,134,8,8,8,8,8,8,8,]),'decremento':([0,2,46,65,68,91,113,118,119,124,125,140,141,144,145,147,148,],[9,9,9,9,9,9,9,9,9,135,9,9,9,9,9,9,9,]),'tipo':([0,2,46,47,65,68,91,113,118,119,125,140,141,144,145,147,148,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'instruccion_while':([0,2,46,65,68,91,113,118,119,125,140,141,144,145,147,148,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'instruccion_if':([0,2,44,46,65,68,91,113,118,119,125,140,141,144,145,147,148,],[16,16,66,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'instruccion_switch':([0,2,46,65,68,91,113,118,119,125,140,141,144,145,147,148,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'instruccion_dowhile':([0,2,46,65,68,91,113,118,119,125,140,141,144,145,147,148,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'instruccion_for':([0,2,46,65,68,91,113,118,119,125,140,141,144,145,147,148,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'base_if':([0,2,44,46,65,68,91,113,118,119,125,140,141,144,145,147,148,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'expresion':([38,40,43,45,48,49,54,62,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,122,123,124,],[50,63,64,67,70,71,88,89,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,117,130,131,132,]),'aritmetica':([38,40,43,45,48,49,54,62,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,122,123,124,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'literal':([38,40,43,45,48,49,54,62,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,122,123,124,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'relacional':([38,40,43,45,48,49,54,62,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,122,123,124,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'lista_case':([115,],[120,]),'case_unico':([115,120,],[121,128,]),'default_opcional':([120,],[127,]),'actualizacion':([124,],[133,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ini","S'",1,None,None,None),
  ('ini -> instrucciones','ini',1,'p_inicio','parser.py',74),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','parser.py',81),
  ('instrucciones -> <empty>','instrucciones',0,'p_instrucciones_empty','parser.py',92),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','parser.py',97),
  ('instruccion -> instruccion_println','instruccion',1,'p_instruccion','parser.py',106),
  ('instruccion -> declaracion_variable PYC','instruccion',2,'p_instruccion','parser.py',107),
  ('instruccion -> asignacion_variable PYC','instruccion',2,'p_instruccion','parser.py',108),
  ('instruccion -> estructura_control','instruccion',1,'p_instruccion','parser.py',109),
  ('instruccion -> incremento PYC','instruccion',2,'p_instruccion','parser.py',110),
  ('instruccion -> decremento PYC','instruccion',2,'p_instruccion','parser.py',111),
  ('estructura_control -> instruccion_while','estructura_control',1,'p_estructura_control','parser.py',122),
  ('estructura_control -> instruccion_if','estructura_control',1,'p_estructura_control','parser.py',123),
  ('estructura_control -> instruccion_switch','estructura_control',1,'p_estructura_control','parser.py',124),
  ('estructura_control -> instruccion_dowhile','estructura_control',1,'p_estructura_control','parser.py',125),
  ('estructura_control -> instruccion_for','estructura_control',1,'p_estructura_control','parser.py',126),
  ('instruccion_while -> WHILE PARA expresion PARC LLA instrucciones LLC','instruccion_while',7,'p_instruccion_while','parser.py',133),
  ('instruccion_for -> FOR PARA declaracion_variable PYC expresion PYC actualizacion PARC LLA instrucciones LLC','instruccion_for',11,'p_instruccion_for','parser.py',145),
  ('actualizacion -> incremento','actualizacion',1,'p_actualizacion','parser.py',165),
  ('actualizacion -> decremento','actualizacion',1,'p_actualizacion','parser.py',166),
  ('actualizacion -> expresion','actualizacion',1,'p_actualizacion','parser.py',167),
  ('actualizacion -> asignacion_variable','actualizacion',1,'p_actualizacion','parser.py',168),
  ('instruccion_switch -> SWITCH PARA expresion PARC LLA lista_case default_opcional LLC','instruccion_switch',8,'p_instruccion_switch','parser.py',174),
  ('instruccion_dowhile -> DO LLA instrucciones LLC WHILE PARA expresion PARC PYC','instruccion_dowhile',9,'p_instruccion_dowhile','parser.py',188),
  ('lista_case -> lista_case case_unico','lista_case',2,'p_lista_case','parser.py',202),
  ('lista_case -> case_unico','lista_case',1,'p_lista_case','parser.py',203),
  ('case_unico -> CASE expresion DOS_PUNTOS instrucciones','case_unico',4,'p_case_unico','parser.py',213),
  ('default_opcional -> DEFAULT DOS_PUNTOS instrucciones','default_opcional',3,'p_default_opcional','parser.py',227),
  ('default_opcional -> <empty>','default_opcional',0,'p_default_opcional','parser.py',228),
  ('instruccion_if -> base_if','instruccion_if',1,'p_instruccion_if','parser.py',236),
  ('instruccion_if -> base_if ELSE LLA instrucciones LLC','instruccion_if',5,'p_instruccion_if','parser.py',237),
  ('instruccion_if -> base_if ELSE instruccion_if','instruccion_if',3,'p_instruccion_if','parser.py',238),
  ('base_if -> IF PARA expresion PARC LLA instrucciones LLC','base_if',7,'p_base_if','parser.py',264),
  ('incremento -> ID INCREMENTO','incremento',2,'p_incremento','parser.py',279),
  ('decremento -> ID DECREMENTO','decremento',2,'p_decremento','parser.py',300),
  ('instruccion_println -> PRINTLN PARA expresion PARC PYC','instruccion_println',5,'p_instruccion_println','parser.py',321),
  ('literal -> CARACTER','literal',1,'p_caracter','parser.py',327),
  ('declaracion_variable -> tipo ID IGUAL expresion','declaracion_variable',4,'p_declaracion_variable','parser.py',335),
  ('declaracion_variable -> tipo ID','declaracion_variable',2,'p_declaracion_variable','parser.py',336),
  ('asignacion_variable -> ID IGUAL expresion','asignacion_variable',3,'p_asignacion_variable','parser.py',349),
  ('literal -> TRUE','literal',1,'p_literal_booleano','parser.py',356),
  ('literal -> FALSE','literal',1,'p_literal_booleano','parser.py',357),
  ('expresion -> aritmetica','expresion',1,'p_expresion','parser.py',365),
  ('expresion -> literal','expresion',1,'p_expresion','parser.py',366),
  ('expresion -> relacional','expresion',1,'p_expresion','parser.py',367),
  ('expresion -> PARA expresion PARC','expresion',3,'p_expresion_parentesis','parser.py',373),
  ('aritmetica -> expresion SUMA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',378),
  ('aritmetica -> expresion RESTA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',379),
  ('aritmetica -> expresion MULTIPLICACION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',380),
  ('aritmetica -> expresion DIVISION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',381),
  ('aritmetica -> expresion POTENCIA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',382),
  ('aritmetica -> expresion MODULO expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',383),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica_binaria','parser.py',401),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica_binaria','parser.py',402),
  ('expresion -> expresion XOR expresion','expresion',3,'p_expresion_logica_binaria','parser.py',403),
  ('expresion -> RESTA expresion','expresion',2,'p_expresion_umenos','parser.py',408),
  ('relacional -> expresion IGUALACION expresion','relacional',3,'p_relacional','parser.py',420),
  ('relacional -> expresion DIFERENCIACION expresion','relacional',3,'p_relacional','parser.py',421),
  ('relacional -> expresion MENOR expresion','relacional',3,'p_relacional','parser.py',422),
  ('relacional -> expresion MAYOR expresion','relacional',3,'p_relacional','parser.py',423),
  ('relacional -> expresion MENOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',424),
  ('relacional -> expresion MAYOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',425),
  ('literal -> ENTERO','literal',1,'p_entero','parser.py',443),
  ('literal -> CADENAS','literal',1,'p_cadena','parser.py',450),
  ('literal -> DECIMAL','literal',1,'p_decimal','parser.py',456),
  ('literal -> ID','literal',1,'p_id','parser.py',462),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',468),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',469),
  ('tipo -> STR','tipo',1,'p_tipo','parser.py',470),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',471),
  ('tipo -> BOOL','tipo',1,'p_tipo','parser.py',472),
  ('instruccion -> BREAK PYC','instruccion',2,'p_instruccion_break','parser.py',491),
  ('instruccion -> CONTINUE PYC','instruccion',2,'p_instruccion_continue','parser.py',495),
]
