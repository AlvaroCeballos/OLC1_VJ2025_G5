
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftXORleftANDrightNOTleftIGUALACIONMENORMAYORMENOR_IGUALMAYOR_IGUALDIFERENCIACIONleftSUMARESTAleftMULTIPLICACIONDIVISIONnonassocPOTENCIAMODULOrightUMENOSAND ARROBA BOOLEAN BREAK CADENAS CARACTER CASE CHAR COMA COMENTARIO_MULTILINEA COMENTARIO_UNA_LINEA CONTINUE DECIMAL DECREMENTO DEFAULT DIFERENCIACION DIVISION DO DOS_PUNTOS ELSE ENTERO FALSE FLOAT FOR ID IDENTIFICADOR IF IGUAL IGUALACION INCREMENTO INT LLA LLC MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NOT OR PARA PARC POTENCIA PRINT PRINTLN PYC RESTA RETURN STR SUMA SWITCH TRUE UMENOS VAR WHILE XOR\n    ini : instrucciones\n    \n    instrucciones : instrucciones instruccion\n    \n    instrucciones : instruccion\n    \n    instruccion : instruccion_print PYC\n                | declaracion_variable PYC\n                | asignacion_variable PYC\n                | estructura_control\n                | incremento PYC\n                | decremento PYC\n    \n    estructura_control : instruccion_while\n                       | instruccion_if\n                       | instruccion_switch\n                       | instruccion_dowhile\n                       | instruccion_for\n    \n    instruccion_while : WHILE PARA expresion PARC LLA instrucciones LLC\n    \n    instruccion_for : FOR PARA declaracion_variable PYC expresion PYC actualizacion PARC LLA instrucciones LLC\n    \n    actualizacion : incremento\n                   | decremento\n                   | expresion\n                   | asignacion_variable\n    \n    instruccion_switch : SWITCH PARA expresion PARC LLA lista_case default_opcional LLC\n    \n    instruccion_dowhile : DO LLA instrucciones LLC WHILE PARA expresion PARC PYC\n    \n    instrucciones : \n    \n    lista_case : lista_case case_unico\n                | case_unico\n\n    \n    case_unico : CASE expresion DOS_PUNTOS instrucciones break_opcional\n    \n    break_opcional : BREAK PYC\n                   | \n    \n    default_opcional : DEFAULT DOS_PUNTOS instrucciones PYC\n                      | \n     \n    instruccion_if : base_if\n                   | base_if ELSE LLA instrucciones LLC\n                   | base_if ELSE instruccion_if                 \n     \n    base_if : IF PARA expresion PARC LLA instrucciones LLC\n    \n    incremento : ID INCREMENTO\n    \n    decremento : ID DECREMENTO\n    \n    instruccion_print : tipo_print PARA expresion PARC\n    \n    literal : CARACTER\n    \n    tipo_print : PRINT\n               | PRINTLN\n    \n    declaracion_variable : tipo ID IGUAL expresion\n                        | tipo ID\n    \n    asignacion_variable : ID IGUAL expresion\n    \n    literal : TRUE\n            | FALSE\n    \n    expresion : aritmetica\n              | literal\n              | relacional\n\n    expresion : PARA expresion PARC\n    aritmetica : expresion SUMA expresion\n                | expresion RESTA expresion\n                | expresion MULTIPLICACION expresion\n                | expresion DIVISION expresion\n                | expresion POTENCIA expresion\n                | expresion MODULO expresion\n    \n    expresion : expresion OR expresion\n              | expresion AND expresion\n              | expresion XOR expresion\n    expresion : NOT expresion\n    relacional : expresion IGUALACION expresion\n               | expresion DIFERENCIACION expresion\n               | expresion MENOR expresion\n               | expresion MAYOR expresion\n               | expresion MENOR_IGUAL expresion\n               | expresion MAYOR_IGUAL expresion\n    \n    literal : ENTERO\n    \n    literal : CADENAS\n    \n    literal : DECIMAL\n    \n    literal : ID\n    \n    tipo : INT\n        | FLOAT\n        | STR\n        | CHAR\n        | BOOLEAN\n    '
    
_lr_action_items = {'ID':([0,2,3,7,11,13,14,15,16,17,20,21,22,23,24,26,31,32,33,34,35,36,37,39,42,44,45,47,48,53,61,64,65,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,93,111,112,116,117,120,121,122,123,124,136,137,138,139,142,143,144,145,149,151,],[12,12,-3,-7,38,-10,-11,-12,-13,-14,-70,-71,-72,-73,-74,-31,-2,-4,-5,-6,-8,-9,60,60,60,60,12,60,60,60,60,12,-33,12,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,12,60,12,-32,12,12,60,60,135,12,-15,-34,-21,12,12,12,12,-22,12,12,-16,]),'PRINT':([0,2,3,7,13,14,15,16,17,26,31,32,33,34,35,36,45,64,65,67,90,111,112,116,117,123,124,136,137,138,139,142,143,144,145,149,151,],[18,18,-3,-7,-10,-11,-12,-13,-14,-31,-2,-4,-5,-6,-8,-9,18,18,-33,18,18,18,-32,18,18,18,-15,-34,-21,18,18,18,18,-22,18,18,-16,]),'PRINTLN':([0,2,3,7,13,14,15,16,17,26,31,32,33,34,35,36,45,64,65,67,90,111,112,116,117,123,124,136,137,138,139,142,143,144,145,149,151,],[19,19,-3,-7,-10,-11,-12,-13,-14,-31,-2,-4,-5,-6,-8,-9,19,19,-33,19,19,19,-32,19,19,19,-15,-34,-21,19,19,19,19,-22,19,19,-16,]),'INT':([0,2,3,7,13,14,15,16,17,26,31,32,33,34,35,36,45,46,64,65,67,90,111,112,116,117,123,124,136,137,138,139,142,143,144,145,149,151,],[20,20,-3,-7,-10,-11,-12,-13,-14,-31,-2,-4,-5,-6,-8,-9,20,20,20,-33,20,20,20,-32,20,20,20,-15,-34,-21,20,20,20,20,-22,20,20,-16,]),'FLOAT':([0,2,3,7,13,14,15,16,17,26,31,32,33,34,35,36,45,46,64,65,67,90,111,112,116,117,123,124,136,137,138,139,142,143,144,145,149,151,],[21,21,-3,-7,-10,-11,-12,-13,-14,-31,-2,-4,-5,-6,-8,-9,21,21,21,-33,21,21,21,-32,21,21,21,-15,-34,-21,21,21,21,21,-22,21,21,-16,]),'STR':([0,2,3,7,13,14,15,16,17,26,31,32,33,34,35,36,45,46,64,65,67,90,111,112,116,117,123,124,136,137,138,139,142,143,144,145,149,151,],[22,22,-3,-7,-10,-11,-12,-13,-14,-31,-2,-4,-5,-6,-8,-9,22,22,22,-33,22,22,22,-32,22,22,22,-15,-34,-21,22,22,22,22,-22,22,22,-16,]),'CHAR':([0,2,3,7,13,14,15,16,17,26,31,32,33,34,35,36,45,46,64,65,67,90,111,112,116,117,123,124,136,137,138,139,142,143,144,145,149,151,],[23,23,-3,-7,-10,-11,-12,-13,-14,-31,-2,-4,-5,-6,-8,-9,23,23,23,-33,23,23,23,-32,23,23,23,-15,-34,-21,23,23,23,23,-22,23,23,-16,]),'BOOLEAN':([0,2,3,7,13,14,15,16,17,26,31,32,33,34,35,36,45,46,64,65,67,90,111,112,116,117,123,124,136,137,138,139,142,143,144,145,149,151,],[24,24,-3,-7,-10,-11,-12,-13,-14,-31,-2,-4,-5,-6,-8,-9,24,24,24,-33,24,24,24,-32,24,24,24,-15,-34,-21,24,24,24,24,-22,24,24,-16,]),'WHILE':([0,2,3,7,13,14,15,16,17,26,31,32,33,34,35,36,45,64,65,67,90,92,111,112,116,117,123,124,136,137,138,139,142,143,144,145,149,151,],[25,25,-3,-7,-10,-11,-12,-13,-14,-31,-2,-4,-5,-6,-8,-9,25,25,-33,25,25,114,25,-32,25,25,25,-15,-34,-21,25,25,25,25,-22,25,25,-16,]),'SWITCH':([0,2,3,7,13,14,15,16,17,26,31,32,33,34,35,36,45,64,65,67,90,111,112,116,117,123,124,136,137,138,139,142,143,144,145,149,151,],[27,27,-3,-7,-10,-11,-12,-13,-14,-31,-2,-4,-5,-6,-8,-9,27,27,-33,27,27,27,-32,27,27,27,-15,-34,-21,27,27,27,27,-22,27,27,-16,]),'DO':([0,2,3,7,13,14,15,16,17,26,31,32,33,34,35,36,45,64,65,67,90,111,112,116,117,123,124,136,137,138,139,142,143,144,145,149,151,],[28,28,-3,-7,-10,-11,-12,-13,-14,-31,-2,-4,-5,-6,-8,-9,28,28,-33,28,28,28,-32,28,28,28,-15,-34,-21,28,28,28,28,-22,28,28,-16,]),'FOR':([0,2,3,7,13,14,15,16,17,26,31,32,33,34,35,36,45,64,65,67,90,111,112,116,117,123,124,136,137,138,139,142,143,144,145,149,151,],[29,29,-3,-7,-10,-11,-12,-13,-14,-31,-2,-4,-5,-6,-8,-9,29,29,-33,29,29,29,-32,29,29,29,-15,-34,-21,29,29,29,29,-22,29,29,-16,]),'IF':([0,2,3,7,13,14,15,16,17,26,31,32,33,34,35,36,43,45,64,65,67,90,111,112,116,117,123,124,136,137,138,139,142,143,144,145,149,151,],[30,30,-3,-7,-10,-11,-12,-13,-14,-31,-2,-4,-5,-6,-8,-9,30,30,30,-33,30,30,30,-32,30,30,30,-15,-34,-21,30,30,30,30,-22,30,30,-16,]),'$end':([0,1,2,3,7,13,14,15,16,17,26,31,32,33,34,35,36,65,112,124,136,137,144,151,],[-23,0,-1,-3,-7,-10,-11,-12,-13,-14,-31,-2,-4,-5,-6,-8,-9,-33,-32,-15,-34,-21,-22,-16,]),'LLC':([3,7,13,14,15,16,17,26,31,32,33,34,35,36,45,64,65,67,90,111,112,116,117,118,119,123,124,125,126,136,137,139,143,144,145,146,147,149,150,151,],[-3,-7,-10,-11,-12,-13,-14,-31,-2,-4,-5,-6,-8,-9,-23,-23,-33,92,112,-23,-32,-23,124,-30,-25,136,-15,137,-24,-34,-21,-23,-28,-22,-23,-29,-26,151,-27,-16,]),'PYC':([3,4,5,6,7,8,9,13,14,15,16,17,26,31,32,33,34,35,36,38,40,41,50,51,52,54,55,56,57,58,59,60,62,65,68,71,87,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,115,124,136,137,138,140,142,144,148,151,],[-3,32,33,34,-7,35,36,-10,-11,-12,-13,-14,-31,-2,-4,-5,-6,-8,-9,-42,-35,-36,-46,-47,-48,-38,-44,-45,-66,-67,-68,-69,-43,-33,93,-37,-59,-41,-49,-56,-57,-58,-50,-51,-52,-53,-54,-55,-60,-61,-62,-63,-64,-65,-32,122,-15,-34,-21,-23,144,146,-22,150,-16,]),'BREAK':([3,7,13,14,15,16,17,26,31,32,33,34,35,36,65,112,124,136,137,139,143,144,151,],[-3,-7,-10,-11,-12,-13,-14,-31,-2,-4,-5,-6,-8,-9,-33,-32,-15,-34,-21,-23,148,-22,-16,]),'DEFAULT':([3,7,13,14,15,16,17,26,31,32,33,34,35,36,65,112,118,119,124,126,136,137,139,143,144,147,150,151,],[-3,-7,-10,-11,-12,-13,-14,-31,-2,-4,-5,-6,-8,-9,-33,-32,127,-25,-15,-24,-34,-21,-23,-28,-22,-26,-27,-16,]),'CASE':([3,7,13,14,15,16,17,26,31,32,33,34,35,36,65,112,113,118,119,124,126,136,137,139,143,144,147,150,151,],[-3,-7,-10,-11,-12,-13,-14,-31,-2,-4,-5,-6,-8,-9,-33,-32,120,120,-25,-15,-24,-34,-21,-23,-28,-22,-26,-27,-16,]),'PARA':([10,18,19,25,27,29,30,37,39,42,44,47,48,53,61,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,93,114,120,121,122,],[37,-39,-40,42,44,46,47,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,121,48,48,48,]),'IGUAL':([12,38,135,],[39,61,39,]),'INCREMENTO':([12,135,],[40,40,]),'DECREMENTO':([12,135,],[41,41,]),'ELSE':([26,136,],[43,-34,]),'LLA':([28,43,89,91,94,141,],[45,64,111,113,116,145,]),'NOT':([37,39,42,44,47,48,53,61,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,93,120,121,122,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'CARACTER':([37,39,42,44,47,48,53,61,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,93,120,121,122,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'TRUE':([37,39,42,44,47,48,53,61,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,93,120,121,122,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'FALSE':([37,39,42,44,47,48,53,61,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,93,120,121,122,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'ENTERO':([37,39,42,44,47,48,53,61,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,93,120,121,122,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'CADENAS':([37,39,42,44,47,48,53,61,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,93,120,121,122,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'DECIMAL':([37,39,42,44,47,48,53,61,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,93,120,121,122,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'PARC':([40,41,49,50,51,52,54,55,56,57,58,59,60,62,63,66,69,70,87,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,129,130,131,132,133,134,135,],[-35,-36,71,-46,-47,-48,-38,-44,-45,-66,-67,-68,-69,-43,89,91,94,95,-59,-49,-56,-57,-58,-50,-51,-52,-53,-54,-55,-60,-61,-62,-63,-64,-65,140,-19,141,-17,-18,-20,-69,]),'OR':([49,50,51,52,54,55,56,57,58,59,60,62,63,66,69,70,87,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,128,129,130,135,],[72,-46,-47,-48,-38,-44,-45,-66,-67,-68,-69,72,72,72,72,72,-59,72,-49,-56,-57,-58,-50,-51,-52,-53,-54,-55,-60,-61,-62,-63,-64,-65,72,72,72,72,-69,]),'AND':([49,50,51,52,54,55,56,57,58,59,60,62,63,66,69,70,87,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,128,129,130,135,],[73,-46,-47,-48,-38,-44,-45,-66,-67,-68,-69,73,73,73,73,73,-59,73,-49,73,-57,73,-50,-51,-52,-53,-54,-55,-60,-61,-62,-63,-64,-65,73,73,73,73,-69,]),'XOR':([49,50,51,52,54,55,56,57,58,59,60,62,63,66,69,70,87,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,128,129,130,135,],[74,-46,-47,-48,-38,-44,-45,-66,-67,-68,-69,74,74,74,74,74,-59,74,-49,74,-57,-58,-50,-51,-52,-53,-54,-55,-60,-61,-62,-63,-64,-65,74,74,74,74,-69,]),'SUMA':([49,50,51,52,54,55,56,57,58,59,60,62,63,66,69,70,87,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,128,129,130,135,],[75,-46,-47,-48,-38,-44,-45,-66,-67,-68,-69,75,75,75,75,75,75,75,-49,75,75,75,-50,-51,-52,-53,-54,-55,75,75,75,75,75,75,75,75,75,75,-69,]),'RESTA':([49,50,51,52,54,55,56,57,58,59,60,62,63,66,69,70,87,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,128,129,130,135,],[76,-46,-47,-48,-38,-44,-45,-66,-67,-68,-69,76,76,76,76,76,76,76,-49,76,76,76,-50,-51,-52,-53,-54,-55,76,76,76,76,76,76,76,76,76,76,-69,]),'MULTIPLICACION':([49,50,51,52,54,55,56,57,58,59,60,62,63,66,69,70,87,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,128,129,130,135,],[77,-46,-47,-48,-38,-44,-45,-66,-67,-68,-69,77,77,77,77,77,77,77,-49,77,77,77,77,77,-52,-53,-54,-55,77,77,77,77,77,77,77,77,77,77,-69,]),'DIVISION':([49,50,51,52,54,55,56,57,58,59,60,62,63,66,69,70,87,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,128,129,130,135,],[78,-46,-47,-48,-38,-44,-45,-66,-67,-68,-69,78,78,78,78,78,78,78,-49,78,78,78,78,78,-52,-53,-54,-55,78,78,78,78,78,78,78,78,78,78,-69,]),'POTENCIA':([49,50,51,52,54,55,56,57,58,59,60,62,63,66,69,70,87,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,128,129,130,135,],[79,-46,-47,-48,-38,-44,-45,-66,-67,-68,-69,79,79,79,79,79,79,79,-49,79,79,79,79,79,79,79,None,None,79,79,79,79,79,79,79,79,79,79,-69,]),'MODULO':([49,50,51,52,54,55,56,57,58,59,60,62,63,66,69,70,87,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,128,129,130,135,],[80,-46,-47,-48,-38,-44,-45,-66,-67,-68,-69,80,80,80,80,80,80,80,-49,80,80,80,80,80,80,80,None,None,80,80,80,80,80,80,80,80,80,80,-69,]),'IGUALACION':([49,50,51,52,54,55,56,57,58,59,60,62,63,66,69,70,87,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,128,129,130,135,],[81,-46,-47,-48,-38,-44,-45,-66,-67,-68,-69,81,81,81,81,81,81,81,-49,81,81,81,-50,-51,-52,-53,-54,-55,-60,-61,-62,-63,-64,-65,81,81,81,81,-69,]),'DIFERENCIACION':([49,50,51,52,54,55,56,57,58,59,60,62,63,66,69,70,87,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,128,129,130,135,],[82,-46,-47,-48,-38,-44,-45,-66,-67,-68,-69,82,82,82,82,82,82,82,-49,82,82,82,-50,-51,-52,-53,-54,-55,-60,-61,-62,-63,-64,-65,82,82,82,82,-69,]),'MENOR':([49,50,51,52,54,55,56,57,58,59,60,62,63,66,69,70,87,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,128,129,130,135,],[83,-46,-47,-48,-38,-44,-45,-66,-67,-68,-69,83,83,83,83,83,83,83,-49,83,83,83,-50,-51,-52,-53,-54,-55,-60,-61,-62,-63,-64,-65,83,83,83,83,-69,]),'MAYOR':([49,50,51,52,54,55,56,57,58,59,60,62,63,66,69,70,87,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,128,129,130,135,],[84,-46,-47,-48,-38,-44,-45,-66,-67,-68,-69,84,84,84,84,84,84,84,-49,84,84,84,-50,-51,-52,-53,-54,-55,-60,-61,-62,-63,-64,-65,84,84,84,84,-69,]),'MENOR_IGUAL':([49,50,51,52,54,55,56,57,58,59,60,62,63,66,69,70,87,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,128,129,130,135,],[85,-46,-47,-48,-38,-44,-45,-66,-67,-68,-69,85,85,85,85,85,85,85,-49,85,85,85,-50,-51,-52,-53,-54,-55,-60,-61,-62,-63,-64,-65,85,85,85,85,-69,]),'MAYOR_IGUAL':([49,50,51,52,54,55,56,57,58,59,60,62,63,66,69,70,87,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,128,129,130,135,],[86,-46,-47,-48,-38,-44,-45,-66,-67,-68,-69,86,86,86,86,86,86,86,-49,86,86,86,-50,-51,-52,-53,-54,-55,-60,-61,-62,-63,-64,-65,86,86,86,86,-69,]),'DOS_PUNTOS':([50,51,52,54,55,56,57,58,59,60,87,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,127,128,],[-46,-47,-48,-38,-44,-45,-66,-67,-68,-69,-59,-49,-56,-57,-58,-50,-51,-52,-53,-54,-55,-60,-61,-62,-63,-64,-65,138,139,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ini':([0,],[1,]),'instrucciones':([0,45,64,111,116,138,139,145,],[2,67,90,117,123,142,143,149,]),'instruccion':([0,2,45,64,67,90,111,116,117,123,138,139,142,143,145,149,],[3,31,3,3,31,31,3,3,31,31,3,3,31,31,3,31,]),'instruccion_print':([0,2,45,64,67,90,111,116,117,123,138,139,142,143,145,149,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'declaracion_variable':([0,2,45,46,64,67,90,111,116,117,123,138,139,142,143,145,149,],[5,5,5,68,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'asignacion_variable':([0,2,45,64,67,90,111,116,117,122,123,138,139,142,143,145,149,],[6,6,6,6,6,6,6,6,6,134,6,6,6,6,6,6,6,]),'estructura_control':([0,2,45,64,67,90,111,116,117,123,138,139,142,143,145,149,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'incremento':([0,2,45,64,67,90,111,116,117,122,123,138,139,142,143,145,149,],[8,8,8,8,8,8,8,8,8,132,8,8,8,8,8,8,8,]),'decremento':([0,2,45,64,67,90,111,116,117,122,123,138,139,142,143,145,149,],[9,9,9,9,9,9,9,9,9,133,9,9,9,9,9,9,9,]),'tipo_print':([0,2,45,64,67,90,111,116,117,123,138,139,142,143,145,149,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'tipo':([0,2,45,46,64,67,90,111,116,117,123,138,139,142,143,145,149,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'instruccion_while':([0,2,45,64,67,90,111,116,117,123,138,139,142,143,145,149,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'instruccion_if':([0,2,43,45,64,67,90,111,116,117,123,138,139,142,143,145,149,],[14,14,65,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'instruccion_switch':([0,2,45,64,67,90,111,116,117,123,138,139,142,143,145,149,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'instruccion_dowhile':([0,2,45,64,67,90,111,116,117,123,138,139,142,143,145,149,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'instruccion_for':([0,2,45,64,67,90,111,116,117,123,138,139,142,143,145,149,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'base_if':([0,2,43,45,64,67,90,111,116,117,123,138,139,142,143,145,149,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'expresion':([37,39,42,44,47,48,53,61,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,93,120,121,122,],[49,62,63,66,69,70,87,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,128,129,130,]),'aritmetica':([37,39,42,44,47,48,53,61,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,93,120,121,122,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'literal':([37,39,42,44,47,48,53,61,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,93,120,121,122,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'relacional':([37,39,42,44,47,48,53,61,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,93,120,121,122,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'lista_case':([113,],[118,]),'case_unico':([113,118,],[119,126,]),'default_opcional':([118,],[125,]),'actualizacion':([122,],[131,]),'break_opcional':([143,],[147,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ini","S'",1,None,None,None),
  ('ini -> instrucciones','ini',1,'p_inicio','parser.py',72),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','parser.py',79),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','parser.py',87),
  ('instruccion -> instruccion_print PYC','instruccion',2,'p_instruccion','parser.py',93),
  ('instruccion -> declaracion_variable PYC','instruccion',2,'p_instruccion','parser.py',94),
  ('instruccion -> asignacion_variable PYC','instruccion',2,'p_instruccion','parser.py',95),
  ('instruccion -> estructura_control','instruccion',1,'p_instruccion','parser.py',96),
  ('instruccion -> incremento PYC','instruccion',2,'p_instruccion','parser.py',97),
  ('instruccion -> decremento PYC','instruccion',2,'p_instruccion','parser.py',98),
  ('estructura_control -> instruccion_while','estructura_control',1,'p_estructura_control','parser.py',109),
  ('estructura_control -> instruccion_if','estructura_control',1,'p_estructura_control','parser.py',110),
  ('estructura_control -> instruccion_switch','estructura_control',1,'p_estructura_control','parser.py',111),
  ('estructura_control -> instruccion_dowhile','estructura_control',1,'p_estructura_control','parser.py',112),
  ('estructura_control -> instruccion_for','estructura_control',1,'p_estructura_control','parser.py',113),
  ('instruccion_while -> WHILE PARA expresion PARC LLA instrucciones LLC','instruccion_while',7,'p_instruccion_while','parser.py',120),
  ('instruccion_for -> FOR PARA declaracion_variable PYC expresion PYC actualizacion PARC LLA instrucciones LLC','instruccion_for',11,'p_instruccion_for','parser.py',132),
  ('actualizacion -> incremento','actualizacion',1,'p_actualizacion','parser.py',152),
  ('actualizacion -> decremento','actualizacion',1,'p_actualizacion','parser.py',153),
  ('actualizacion -> expresion','actualizacion',1,'p_actualizacion','parser.py',154),
  ('actualizacion -> asignacion_variable','actualizacion',1,'p_actualizacion','parser.py',155),
  ('instruccion_switch -> SWITCH PARA expresion PARC LLA lista_case default_opcional LLC','instruccion_switch',8,'p_instruccion_switch','parser.py',161),
  ('instruccion_dowhile -> DO LLA instrucciones LLC WHILE PARA expresion PARC PYC','instruccion_dowhile',9,'p_instruccion_dowhile','parser.py',174),
  ('instrucciones -> <empty>','instrucciones',0,'p_instrucciones_empty','parser.py',186),
  ('lista_case -> lista_case case_unico','lista_case',2,'p_lista_case','parser.py',193),
  ('lista_case -> case_unico','lista_case',1,'p_lista_case','parser.py',194),
  ('case_unico -> CASE expresion DOS_PUNTOS instrucciones break_opcional','case_unico',5,'p_case_unico','parser.py',204),
  ('break_opcional -> BREAK PYC','break_opcional',2,'p_break_opcional','parser.py',219),
  ('break_opcional -> <empty>','break_opcional',0,'p_break_opcional','parser.py',220),
  ('default_opcional -> DEFAULT DOS_PUNTOS instrucciones PYC','default_opcional',4,'p_default_opcional','parser.py',230),
  ('default_opcional -> <empty>','default_opcional',0,'p_default_opcional','parser.py',231),
  ('instruccion_if -> base_if','instruccion_if',1,'p_instruccion_if','parser.py',239),
  ('instruccion_if -> base_if ELSE LLA instrucciones LLC','instruccion_if',5,'p_instruccion_if','parser.py',240),
  ('instruccion_if -> base_if ELSE instruccion_if','instruccion_if',3,'p_instruccion_if','parser.py',241),
  ('base_if -> IF PARA expresion PARC LLA instrucciones LLC','base_if',7,'p_base_if','parser.py',267),
  ('incremento -> ID INCREMENTO','incremento',2,'p_incremento','parser.py',282),
  ('decremento -> ID DECREMENTO','decremento',2,'p_decremento','parser.py',303),
  ('instruccion_print -> tipo_print PARA expresion PARC','instruccion_print',4,'p_instruccion_print','parser.py',325),
  ('literal -> CARACTER','literal',1,'p_caracter','parser.py',332),
  ('tipo_print -> PRINT','tipo_print',1,'p_tipo_print','parser.py',338),
  ('tipo_print -> PRINTLN','tipo_print',1,'p_tipo_print','parser.py',339),
  ('declaracion_variable -> tipo ID IGUAL expresion','declaracion_variable',4,'p_declaracion_variable','parser.py',345),
  ('declaracion_variable -> tipo ID','declaracion_variable',2,'p_declaracion_variable','parser.py',346),
  ('asignacion_variable -> ID IGUAL expresion','asignacion_variable',3,'p_asignacion_variable','parser.py',359),
  ('literal -> TRUE','literal',1,'p_literal_booleano','parser.py',366),
  ('literal -> FALSE','literal',1,'p_literal_booleano','parser.py',367),
  ('expresion -> aritmetica','expresion',1,'p_expresion','parser.py',375),
  ('expresion -> literal','expresion',1,'p_expresion','parser.py',376),
  ('expresion -> relacional','expresion',1,'p_expresion','parser.py',377),
  ('expresion -> PARA expresion PARC','expresion',3,'p_expresion_parentesis','parser.py',383),
  ('aritmetica -> expresion SUMA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',388),
  ('aritmetica -> expresion RESTA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',389),
  ('aritmetica -> expresion MULTIPLICACION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',390),
  ('aritmetica -> expresion DIVISION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',391),
  ('aritmetica -> expresion POTENCIA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',392),
  ('aritmetica -> expresion MODULO expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',393),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica_binaria','parser.py',411),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica_binaria','parser.py',412),
  ('expresion -> expresion XOR expresion','expresion',3,'p_expresion_logica_binaria','parser.py',413),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_logica_unaria','parser.py',418),
  ('relacional -> expresion IGUALACION expresion','relacional',3,'p_relacional','parser.py',423),
  ('relacional -> expresion DIFERENCIACION expresion','relacional',3,'p_relacional','parser.py',424),
  ('relacional -> expresion MENOR expresion','relacional',3,'p_relacional','parser.py',425),
  ('relacional -> expresion MAYOR expresion','relacional',3,'p_relacional','parser.py',426),
  ('relacional -> expresion MENOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',427),
  ('relacional -> expresion MAYOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',428),
  ('literal -> ENTERO','literal',1,'p_entero','parser.py',446),
  ('literal -> CADENAS','literal',1,'p_cadena','parser.py',453),
  ('literal -> DECIMAL','literal',1,'p_decimal','parser.py',459),
  ('literal -> ID','literal',1,'p_id','parser.py',465),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',471),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',472),
  ('tipo -> STR','tipo',1,'p_tipo','parser.py',473),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',474),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','parser.py',475),
]
