
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftXORleftANDrightNOTleftIGUALACIONMENORMAYORMENOR_IGUALMAYOR_IGUALDIFERENCIACIONleftSUMARESTAleftMULTIPLICACIONDIVISIONnonassocPOTENCIAMODULOrightUMENOSAND ARROBA BOOLEAN BREAK CADENAS CARACTER CASE CHAR COMA COMENTARIO_MULTILINEA COMENTARIO_UNA_LINEA CONTINUE DECIMAL DEFAULT DIFERENCIACION DIVISION DO DO_WHILE ELSE ENTERO FALSE FLOAT FOR ID IDENTIFICADOR IF IGUAL IGUALACION INT LLA LLC MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NOT OR PARA PARC POTENCIA PRINT PRINTLN PYC RESTA RETURN STR SUMA SWITCH TRUE UMENOS VAR WHILE XOR\n    ini : instrucciones\n    \n    instrucciones : instrucciones instruccion\n    \n    instrucciones : instruccion\n    \n    instruccion : instruccion_print PYC\n                | declaracion_variable PYC\n                | asignacion_variable PYC\n    \n    instruccion_print : tipo_print PARA expresion PARC\n    \n    literal : CARACTER\n    \n    tipo_print : PRINT\n               | PRINTLN\n    \n    declaracion_variable : tipo ID IGUAL expresion\n                        | tipo ID\n    \n    asignacion_variable : ID IGUAL expresion\n    \n    literal : TRUE\n            | FALSE\n    \n    expresion : aritmetica\n              | literal\n              | relacional\n\n    expresion : PARA expresion PARC\n    aritmetica : expresion SUMA expresion\n                | expresion RESTA expresion\n                | expresion MULTIPLICACION expresion\n                | expresion DIVISION expresion\n                | expresion POTENCIA expresion\n                | expresion MODULO expresion\n    \n    expresion : expresion OR expresion\n              | expresion AND expresion\n              | expresion XOR expresion\n    expresion : NOT expresion\n    relacional : expresion IGUALACION expresion\n               | expresion DIFERENCIACION expresion\n               | expresion MENOR expresion\n               | expresion MAYOR expresion\n               | expresion MENOR_IGUAL expresion\n               | expresion MAYOR_IGUAL expresion\n    \n    literal : ENTERO\n    \n    literal : CADENAS\n    \n    literal : DECIMAL\n    \n    literal : ID\n    \n    tipo : INT\n        | FLOAT\n        | STR\n        | CHAR\n        | BOOLEAN\n    '
    
_lr_action_items = {'ID':([0,2,3,8,12,13,14,15,16,17,18,19,20,21,23,24,29,37,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[9,9,-3,22,-40,-41,-42,-43,-44,-2,-4,-5,-6,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'PRINT':([0,2,3,17,18,19,20,],[10,10,-3,-2,-4,-5,-6,]),'PRINTLN':([0,2,3,17,18,19,20,],[11,11,-3,-2,-4,-5,-6,]),'INT':([0,2,3,17,18,19,20,],[12,12,-3,-2,-4,-5,-6,]),'FLOAT':([0,2,3,17,18,19,20,],[13,13,-3,-2,-4,-5,-6,]),'STR':([0,2,3,17,18,19,20,],[14,14,-3,-2,-4,-5,-6,]),'CHAR':([0,2,3,17,18,19,20,],[15,15,-3,-2,-4,-5,-6,]),'BOOLEAN':([0,2,3,17,18,19,20,],[16,16,-3,-2,-4,-5,-6,]),'$end':([1,2,3,17,18,19,20,],[0,-1,-3,-2,-4,-5,-6,]),'PYC':([4,5,6,22,26,27,28,30,31,32,33,34,35,36,38,40,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[18,19,20,-12,-16,-17,-18,-8,-14,-15,-36,-37,-38,-39,-13,-7,-29,-11,-19,-26,-27,-28,-20,-21,-22,-23,-24,-25,-30,-31,-32,-33,-34,-35,]),'PARA':([7,10,11,21,23,24,29,37,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[21,-9,-10,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'IGUAL':([9,22,],[23,37,]),'NOT':([21,23,24,29,37,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'CARACTER':([21,23,24,29,37,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'TRUE':([21,23,24,29,37,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'FALSE':([21,23,24,29,37,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'ENTERO':([21,23,24,29,37,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'CADENAS':([21,23,24,29,37,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'DECIMAL':([21,23,24,29,37,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'PARC':([25,26,27,28,30,31,32,33,34,35,36,39,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[40,-16,-17,-18,-8,-14,-15,-36,-37,-38,-39,58,-29,-19,-26,-27,-28,-20,-21,-22,-23,-24,-25,-30,-31,-32,-33,-34,-35,]),'OR':([25,26,27,28,30,31,32,33,34,35,36,38,39,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[41,-16,-17,-18,-8,-14,-15,-36,-37,-38,-39,41,41,-29,41,-19,-26,-27,-28,-20,-21,-22,-23,-24,-25,-30,-31,-32,-33,-34,-35,]),'AND':([25,26,27,28,30,31,32,33,34,35,36,38,39,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[42,-16,-17,-18,-8,-14,-15,-36,-37,-38,-39,42,42,-29,42,-19,42,-27,42,-20,-21,-22,-23,-24,-25,-30,-31,-32,-33,-34,-35,]),'XOR':([25,26,27,28,30,31,32,33,34,35,36,38,39,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[43,-16,-17,-18,-8,-14,-15,-36,-37,-38,-39,43,43,-29,43,-19,43,-27,-28,-20,-21,-22,-23,-24,-25,-30,-31,-32,-33,-34,-35,]),'SUMA':([25,26,27,28,30,31,32,33,34,35,36,38,39,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[44,-16,-17,-18,-8,-14,-15,-36,-37,-38,-39,44,44,44,44,-19,44,44,44,-20,-21,-22,-23,-24,-25,44,44,44,44,44,44,]),'RESTA':([25,26,27,28,30,31,32,33,34,35,36,38,39,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[45,-16,-17,-18,-8,-14,-15,-36,-37,-38,-39,45,45,45,45,-19,45,45,45,-20,-21,-22,-23,-24,-25,45,45,45,45,45,45,]),'MULTIPLICACION':([25,26,27,28,30,31,32,33,34,35,36,38,39,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[46,-16,-17,-18,-8,-14,-15,-36,-37,-38,-39,46,46,46,46,-19,46,46,46,46,46,-22,-23,-24,-25,46,46,46,46,46,46,]),'DIVISION':([25,26,27,28,30,31,32,33,34,35,36,38,39,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[47,-16,-17,-18,-8,-14,-15,-36,-37,-38,-39,47,47,47,47,-19,47,47,47,47,47,-22,-23,-24,-25,47,47,47,47,47,47,]),'POTENCIA':([25,26,27,28,30,31,32,33,34,35,36,38,39,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[48,-16,-17,-18,-8,-14,-15,-36,-37,-38,-39,48,48,48,48,-19,48,48,48,48,48,48,48,None,None,48,48,48,48,48,48,]),'MODULO':([25,26,27,28,30,31,32,33,34,35,36,38,39,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[49,-16,-17,-18,-8,-14,-15,-36,-37,-38,-39,49,49,49,49,-19,49,49,49,49,49,49,49,None,None,49,49,49,49,49,49,]),'IGUALACION':([25,26,27,28,30,31,32,33,34,35,36,38,39,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[50,-16,-17,-18,-8,-14,-15,-36,-37,-38,-39,50,50,50,50,-19,50,50,50,-20,-21,-22,-23,-24,-25,-30,-31,-32,-33,-34,-35,]),'DIFERENCIACION':([25,26,27,28,30,31,32,33,34,35,36,38,39,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[51,-16,-17,-18,-8,-14,-15,-36,-37,-38,-39,51,51,51,51,-19,51,51,51,-20,-21,-22,-23,-24,-25,-30,-31,-32,-33,-34,-35,]),'MENOR':([25,26,27,28,30,31,32,33,34,35,36,38,39,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[52,-16,-17,-18,-8,-14,-15,-36,-37,-38,-39,52,52,52,52,-19,52,52,52,-20,-21,-22,-23,-24,-25,-30,-31,-32,-33,-34,-35,]),'MAYOR':([25,26,27,28,30,31,32,33,34,35,36,38,39,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[53,-16,-17,-18,-8,-14,-15,-36,-37,-38,-39,53,53,53,53,-19,53,53,53,-20,-21,-22,-23,-24,-25,-30,-31,-32,-33,-34,-35,]),'MENOR_IGUAL':([25,26,27,28,30,31,32,33,34,35,36,38,39,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[54,-16,-17,-18,-8,-14,-15,-36,-37,-38,-39,54,54,54,54,-19,54,54,54,-20,-21,-22,-23,-24,-25,-30,-31,-32,-33,-34,-35,]),'MAYOR_IGUAL':([25,26,27,28,30,31,32,33,34,35,36,38,39,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[55,-16,-17,-18,-8,-14,-15,-36,-37,-38,-39,55,55,55,55,-19,55,55,55,-20,-21,-22,-23,-24,-25,-30,-31,-32,-33,-34,-35,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ini':([0,],[1,]),'instrucciones':([0,],[2,]),'instruccion':([0,2,],[3,17,]),'instruccion_print':([0,2,],[4,4,]),'declaracion_variable':([0,2,],[5,5,]),'asignacion_variable':([0,2,],[6,6,]),'tipo_print':([0,2,],[7,7,]),'tipo':([0,2,],[8,8,]),'expresion':([21,23,24,29,37,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[25,38,39,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,]),'aritmetica':([21,23,24,29,37,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'literal':([21,23,24,29,37,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'relacional':([21,23,24,29,37,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ini","S'",1,None,None,None),
  ('ini -> instrucciones','ini',1,'p_inicio','parser.py',65),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','parser.py',72),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','parser.py',80),
  ('instruccion -> instruccion_print PYC','instruccion',2,'p_instruccion','parser.py',86),
  ('instruccion -> declaracion_variable PYC','instruccion',2,'p_instruccion','parser.py',87),
  ('instruccion -> asignacion_variable PYC','instruccion',2,'p_instruccion','parser.py',88),
  ('instruccion_print -> tipo_print PARA expresion PARC','instruccion_print',4,'p_instruccion_print','parser.py',95),
  ('literal -> CARACTER','literal',1,'p_caracter','parser.py',102),
  ('tipo_print -> PRINT','tipo_print',1,'p_tipo_print','parser.py',108),
  ('tipo_print -> PRINTLN','tipo_print',1,'p_tipo_print','parser.py',109),
  ('declaracion_variable -> tipo ID IGUAL expresion','declaracion_variable',4,'p_declaracion_variable','parser.py',115),
  ('declaracion_variable -> tipo ID','declaracion_variable',2,'p_declaracion_variable','parser.py',116),
  ('asignacion_variable -> ID IGUAL expresion','asignacion_variable',3,'p_asignacion_variable','parser.py',129),
  ('literal -> TRUE','literal',1,'p_literal_booleano','parser.py',136),
  ('literal -> FALSE','literal',1,'p_literal_booleano','parser.py',137),
  ('expresion -> aritmetica','expresion',1,'p_expresion','parser.py',145),
  ('expresion -> literal','expresion',1,'p_expresion','parser.py',146),
  ('expresion -> relacional','expresion',1,'p_expresion','parser.py',147),
  ('expresion -> PARA expresion PARC','expresion',3,'p_expresion_parentesis','parser.py',153),
  ('aritmetica -> expresion SUMA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',158),
  ('aritmetica -> expresion RESTA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',159),
  ('aritmetica -> expresion MULTIPLICACION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',160),
  ('aritmetica -> expresion DIVISION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',161),
  ('aritmetica -> expresion POTENCIA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',162),
  ('aritmetica -> expresion MODULO expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',163),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica_binaria','parser.py',181),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica_binaria','parser.py',182),
  ('expresion -> expresion XOR expresion','expresion',3,'p_expresion_logica_binaria','parser.py',183),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_logica_unaria','parser.py',188),
  ('relacional -> expresion IGUALACION expresion','relacional',3,'p_relacional','parser.py',193),
  ('relacional -> expresion DIFERENCIACION expresion','relacional',3,'p_relacional','parser.py',194),
  ('relacional -> expresion MENOR expresion','relacional',3,'p_relacional','parser.py',195),
  ('relacional -> expresion MAYOR expresion','relacional',3,'p_relacional','parser.py',196),
  ('relacional -> expresion MENOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',197),
  ('relacional -> expresion MAYOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',198),
  ('literal -> ENTERO','literal',1,'p_entero','parser.py',215),
  ('literal -> CADENAS','literal',1,'p_cadena','parser.py',222),
  ('literal -> DECIMAL','literal',1,'p_decimal','parser.py',228),
  ('literal -> ID','literal',1,'p_id','parser.py',234),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',240),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',241),
  ('tipo -> STR','tipo',1,'p_tipo','parser.py',242),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',243),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','parser.py',244),
]
