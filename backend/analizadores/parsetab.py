
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

<<<<<<< HEAD
_lr_signature = 'rightUMENOSleftANDleftORleftXORrightNOTleftIGUALACIONMENORMAYORMENOR_IGUALMAYOR_IGUALDIFERENCIACIONleftSUMARESTAleftMULTIPLICACIONDIVISIONnonassocPOTENCIAMODULOAND ARROBA BOOL BREAK CADENAS CARACTER CASE CHAR COMA COMENTARIO_MULTILINEA COMENTARIO_UNA_LINEA CONTINUE DECIMAL DECREMENTO DEFAULT DIFERENCIACION DIVISION DO DOS_PUNTOS ELSE ENTERO FALSE FLOAT FOR ID IDENTIFICADOR IF IGUAL IGUALACION INCREMENTO INT LLA LLC MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NOT OR PARA PARC POTENCIA PRINTLN PYC RESTA RETURN STR SUMA SWITCH TRUE UMENOS VAR WHILE XOR\nini : instrucciones\n\ninstrucciones : instrucciones instruccion\n\ninstruccion : error PYC\n\nestructura_control : error\n\ninstrucciones : instrucciones error\n              | error\n\nexpresion : error\ninstrucciones : \ninstrucciones : instruccion\n\ninstruccion : instruccion_println\n            | declaracion_variable PYC\n            | asignacion_variable PYC\n            | estructura_control\n            | incremento PYC\n            | decremento PYC\n\nestructura_control : instruccion_while\n                   | instruccion_if\n                   | instruccion_switch\n                   | instruccion_dowhile\n                   | instruccion_for\n\ninstruccion_while : WHILE PARA expresion PARC LLA instrucciones LLC\n\ninstruccion_for : FOR PARA declaracion_variable PYC expresion PYC actualizacion PARC LLA instrucciones LLC\n\nactualizacion : incremento\n| decremento\n| expresion\n| asignacion_variable\n\ninstruccion_switch : SWITCH PARA expresion PARC LLA lista_case default_opcional LLC\n\ninstruccion_dowhile : DO LLA instrucciones LLC WHILE PARA expresion PARC PYC\n\nlista_case : lista_case case_unico\n            | case_unico\n\n\ncase_unico : CASE expresion DOS_PUNTOS instrucciones\n\ndefault_opcional : DEFAULT DOS_PUNTOS instrucciones\n                 | \n\ninstruccion_if : base_if\n               | base_if ELSE LLA instrucciones LLC\n               | base_if ELSE instruccion_if                 \n\nbase_if : IF PARA expresion PARC LLA instrucciones LLC\n\nincremento : ID INCREMENTO\n\ndecremento : ID DECREMENTO\ninstruccion_println : PRINTLN PARA expresion PARC PYC\nliteral : CARACTER\n\ndeclaracion_variable : tipo ID IGUAL expresion\n                    | tipo ID\n\nasignacion_variable : ID IGUAL expresion\n\nliteral : TRUE\n        | FALSE\n\nexpresion : aritmetica\n          | literal\n          | relacional\n\nexpresion : PARA expresion PARC\naritmetica : expresion SUMA expresion\n            | expresion RESTA expresion\n            | expresion MULTIPLICACION expresion\n            | expresion DIVISION expresion\n            | expresion POTENCIA expresion\n            | expresion MODULO expresion\n\nexpresion : expresion OR expresion\n          | expresion AND expresion\n          | expresion XOR expresion\nexpresion : RESTA expresion %prec UMENOS\nrelacional : expresion IGUALACION expresion\n           | expresion DIFERENCIACION expresion\n           | expresion MENOR expresion\n           | expresion MAYOR expresion\n           | expresion MENOR_IGUAL expresion\n           | expresion MAYOR_IGUAL expresion\nexpresion : NOT expresion %prec NOT\nliteral : ENTERO\n\nliteral : CADENAS\n\nliteral : DECIMAL\n\nliteral : ID\n\ntipo : INT\n    | FLOAT\n    | STR\n    | CHAR\n    | BOOL\ninstruccion : BREAK PYCinstruccion : CONTINUE PYCdeclaracion_variable : ID ID'
=======
_lr_signature = 'rightUMENOSleftANDleftORleftXORrightNOTleftIGUALACIONMENORMAYORMENOR_IGUALMAYOR_IGUALDIFERENCIACIONleftSUMARESTAleftMULTIPLICACIONDIVISIONnonassocPOTENCIAMODULOAND ARROBA BOOL BREAK CADENAS CARACTER CASE CHAR COMA COMENTARIO_MULTILINEA COMENTARIO_UNA_LINEA CONTINUE COSENO DECIMAL DECREMENTO DEFAULT DIFERENCIACION DIVISION DO DOS_PUNTOS ELSE ENTERO FALSE FLOAT FOR ID IDENTIFICADOR IF IGUAL IGUALACION INCREMENTO INT INV LLA LLC MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NOT OR PARA PARC POTENCIA PRINTLN PYC RESTA RETURN SENO STR SUMA SWITCH TRUE UMENOS VAR WHILE XOR\nini : instrucciones\n\ninstrucciones : instrucciones instruccion\n\ninstruccion : error PYC\n\nestructura_control : error\n\ninstrucciones : instrucciones error\n              | error\n\nexpresion : error\ninstrucciones : \ninstrucciones : instruccion\n\ninstruccion : instruccion_println\n            | declaracion_variable PYC\n            | asignacion_variable PYC\n            | estructura_control\n            | incremento PYC\n            | decremento PYC\n\nestructura_control : instruccion_while\n                   | instruccion_if\n                   | instruccion_switch\n                   | instruccion_dowhile\n                   | instruccion_for\n\ninstruccion_while : WHILE PARA expresion PARC LLA instrucciones LLC\n\ninstruccion_for : FOR PARA declaracion_variable PYC expresion PYC actualizacion PARC LLA instrucciones LLC\n\nactualizacion : incremento\n| decremento\n| expresion\n| asignacion_variable\n\ninstruccion_switch : SWITCH PARA expresion PARC LLA lista_case default_opcional LLC\n\ninstruccion_dowhile : DO LLA instrucciones LLC WHILE PARA expresion PARC PYC\n\nlista_case : lista_case case_unico\n            | case_unico\n\n\ncase_unico : CASE expresion DOS_PUNTOS instrucciones\n\ndefault_opcional : DEFAULT DOS_PUNTOS instrucciones\n                 | \n\ninstruccion_if : base_if\n               | base_if ELSE LLA instrucciones LLC\n               | base_if ELSE instruccion_if                 \n\nbase_if : IF PARA expresion PARC LLA instrucciones LLC\n\nincremento : ID INCREMENTO\n\ndecremento : ID DECREMENTO\ninstruccion_println : PRINTLN PARA expresion PARC PYC\nliteral : CARACTER\n\ndeclaracion_variable : tipo ID IGUAL expresion\n                    | tipo ID\n\nasignacion_variable : ID IGUAL expresion\n\nliteral : TRUE\n        | FALSE\n\nexpresion : aritmetica\n          | literal\n          | relacional\n\nexpresion : PARA expresion PARC\nexpresion : SENO PARA expresion PARC\n          | COSENO PARA expresion PARC\n          | INV PARA expresion PARC\n\naritmetica : expresion SUMA expresion\n            | expresion RESTA expresion\n            | expresion MULTIPLICACION expresion\n            | expresion DIVISION expresion\n            | expresion POTENCIA expresion\n            | expresion MODULO expresion\n\nexpresion : expresion OR expresion\n          | expresion AND expresion\n          | expresion XOR expresion\nexpresion : RESTA expresion %prec UMENOS\nrelacional : expresion IGUALACION expresion\n           | expresion DIFERENCIACION expresion\n           | expresion MENOR expresion\n           | expresion MAYOR expresion\n           | expresion MENOR_IGUAL expresion\n           | expresion MAYOR_IGUAL expresion\nexpresion : NOT expresion %prec NOT\nliteral : ENTERO\n\nliteral : CADENAS\n\nliteral : DECIMAL\n\nliteral : ID\n\ntipo : INT\n    | FLOAT\n    | STR\n    | CHAR\n    | BOOL\ninstruccion : BREAK PYCinstruccion : CONTINUE PYCdeclaracion_variable : ID ID'
>>>>>>> feature/Nicole
    
_lr_action_items = {'error':([0,2,3,4,5,8,16,17,18,19,20,27,32,33,34,35,36,37,38,39,40,41,44,47,49,50,52,53,62,63,71,74,75,77,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,105,108,111,130,131,135,139,142,143,144,145,146,158,159,160,161,164,165,166,167,168,169,],[4,33,-9,-4,-10,-13,-16,-17,-18,-19,-20,-34,-2,-4,-3,-11,-12,-14,-15,-80,-81,55,55,55,55,4,55,55,55,55,55,4,-36,33,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,33,55,-40,4,-35,4,33,55,55,55,33,-21,-37,-27,4,4,33,33,-28,4,33,-22,]),'BREAK':([0,2,3,4,5,8,16,17,18,19,20,27,32,33,34,35,36,37,38,39,40,50,74,75,77,105,111,130,131,135,139,145,146,158,159,160,161,164,165,166,167,168,169,],[11,11,-9,-4,-10,-13,-16,-17,-18,-19,-20,-34,-2,-4,-3,-11,-12,-14,-15,-80,-81,11,11,-36,11,11,-40,11,-35,11,11,11,-21,-37,-27,11,11,11,11,-28,11,11,-22,]),'CONTINUE':([0,2,3,4,5,8,16,17,18,19,20,27,32,33,34,35,36,37,38,39,40,50,74,75,77,105,111,130,131,135,139,145,146,158,159,160,161,164,165,166,167,168,169,],[12,12,-9,-4,-10,-13,-16,-17,-18,-19,-20,-34,-2,-4,-3,-11,-12,-14,-15,-80,-81,12,12,-36,12,12,-40,12,-35,12,12,12,-21,-37,-27,12,12,12,12,-28,12,12,-22,]),'PRINTLN':([0,2,3,4,5,8,16,17,18,19,20,27,32,33,34,35,36,37,38,39,40,50,74,75,77,105,111,130,131,135,139,145,146,158,159,160,161,164,165,166,167,168,169,],[13,13,-9,-4,-10,-13,-16,-17,-18,-19,-20,-34,-2,-4,-3,-11,-12,-14,-15,-80,-81,13,13,-36,13,13,-40,13,-35,13,13,13,-21,-37,-27,13,13,13,13,-28,13,13,-22,]),'ID':([0,2,3,4,5,8,14,15,16,17,18,19,20,21,22,23,24,25,27,32,33,34,35,36,37,38,39,40,41,44,47,49,50,51,52,53,62,63,71,74,75,77,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,105,108,111,130,131,135,139,142,143,144,145,146,158,159,160,161,164,165,166,167,168,169,],[15,15,-9,-4,-10,-13,42,43,-16,-17,-18,-19,-20,-75,-76,-77,-78,-79,-34,-2,-4,-3,-11,-12,-14,-15,-80,-81,70,70,70,70,15,79,70,70,70,70,70,15,-36,15,43,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,15,70,-40,15,-35,15,15,70,70,157,15,-21,-37,-27,15,15,15,15,-28,15,15,-22,]),'INT':([0,2,3,4,5,8,16,17,18,19,20,27,32,33,34,35,36,37,38,39,40,50,51,74,75,77,105,111,130,131,135,139,145,146,158,159,160,161,164,165,166,167,168,169,],[21,21,-9,-4,-10,-13,-16,-17,-18,-19,-20,-34,-2,-4,-3,-11,-12,-14,-15,-80,-81,21,21,21,-36,21,21,-40,21,-35,21,21,21,-21,-37,-27,21,21,21,21,-28,21,21,-22,]),'FLOAT':([0,2,3,4,5,8,16,17,18,19,20,27,32,33,34,35,36,37,38,39,40,50,51,74,75,77,105,111,130,131,135,139,145,146,158,159,160,161,164,165,166,167,168,169,],[22,22,-9,-4,-10,-13,-16,-17,-18,-19,-20,-34,-2,-4,-3,-11,-12,-14,-15,-80,-81,22,22,22,-36,22,22,-40,22,-35,22,22,22,-21,-37,-27,22,22,22,22,-28,22,22,-22,]),'STR':([0,2,3,4,5,8,16,17,18,19,20,27,32,33,34,35,36,37,38,39,40,50,51,74,75,77,105,111,130,131,135,139,145,146,158,159,160,161,164,165,166,167,168,169,],[23,23,-9,-4,-10,-13,-16,-17,-18,-19,-20,-34,-2,-4,-3,-11,-12,-14,-15,-80,-81,23,23,23,-36,23,23,-40,23,-35,23,23,23,-21,-37,-27,23,23,23,23,-28,23,23,-22,]),'CHAR':([0,2,3,4,5,8,16,17,18,19,20,27,32,33,34,35,36,37,38,39,40,50,51,74,75,77,105,111,130,131,135,139,145,146,158,159,160,161,164,165,166,167,168,169,],[24,24,-9,-4,-10,-13,-16,-17,-18,-19,-20,-34,-2,-4,-3,-11,-12,-14,-15,-80,-81,24,24,24,-36,24,24,-40,24,-35,24,24,24,-21,-37,-27,24,24,24,24,-28,24,24,-22,]),'BOOL':([0,2,3,4,5,8,16,17,18,19,20,27,32,33,34,35,36,37,38,39,40,50,51,74,75,77,105,111,130,131,135,139,145,146,158,159,160,161,164,165,166,167,168,169,],[25,25,-9,-4,-10,-13,-16,-17,-18,-19,-20,-34,-2,-4,-3,-11,-12,-14,-15,-80,-81,25,25,25,-36,25,25,-40,25,-35,25,25,25,-21,-37,-27,25,25,25,25,-28,25,25,-22,]),'WHILE':([0,2,3,4,5,8,16,17,18,19,20,27,32,33,34,35,36,37,38,39,40,50,74,75,77,105,107,111,130,131,135,139,145,146,158,159,160,161,164,165,166,167,168,169,],[26,26,-9,-4,-10,-13,-16,-17,-18,-19,-20,-34,-2,-4,-3,-11,-12,-14,-15,-80,-81,26,26,-36,26,26,133,-40,26,-35,26,26,26,-21,-37,-27,26,26,26,26,-28,26,26,-22,]),'SWITCH':([0,2,3,4,5,8,16,17,18,19,20,27,32,33,34,35,36,37,38,39,40,50,74,75,77,105,111,130,131,135,139,145,146,158,159,160,161,164,165,166,167,168,169,],[28,28,-9,-4,-10,-13,-16,-17,-18,-19,-20,-34,-2,-4,-3,-11,-12,-14,-15,-80,-81,28,28,-36,28,28,-40,28,-35,28,28,28,-21,-37,-27,28,28,28,28,-28,28,28,-22,]),'DO':([0,2,3,4,5,8,16,17,18,19,20,27,32,33,34,35,36,37,38,39,40,50,74,75,77,105,111,130,131,135,139,145,146,158,159,160,161,164,165,166,167,168,169,],[29,29,-9,-4,-10,-13,-16,-17,-18,-19,-20,-34,-2,-4,-3,-11,-12,-14,-15,-80,-81,29,29,-36,29,29,-40,29,-35,29,29,29,-21,-37,-27,29,29,29,29,-28,29,29,-22,]),'FOR':([0,2,3,4,5,8,16,17,18,19,20,27,32,33,34,35,36,37,38,39,40,50,74,75,77,105,111,130,131,135,139,145,146,158,159,160,161,164,165,166,167,168,169,],[30,30,-9,-4,-10,-13,-16,-17,-18,-19,-20,-34,-2,-4,-3,-11,-12,-14,-15,-80,-81,30,30,-36,30,30,-40,30,-35,30,30,30,-21,-37,-27,30,30,30,30,-28,30,30,-22,]),'IF':([0,2,3,4,5,8,16,17,18,19,20,27,32,33,34,35,36,37,38,39,40,48,50,74,75,77,105,111,130,131,135,139,145,146,158,159,160,161,164,165,166,167,168,169,],[31,31,-9,-4,-10,-13,-16,-17,-18,-19,-20,-34,-2,-4,-3,-11,-12,-14,-15,-80,-81,31,31,31,-36,31,31,-40,31,-35,31,31,31,-21,-37,-27,31,31,31,31,-28,31,31,-22,]),'$end':([0,1,2,3,4,5,8,16,17,18,19,20,27,32,33,34,35,36,37,38,39,40,75,111,131,146,158,159,166,169,],[-8,0,-1,-9,-4,-10,-13,-16,-17,-18,-19,-20,-34,-2,-4,-3,-11,-12,-14,-15,-80,-81,-36,-40,-35,-21,-37,-27,-28,-22,]),'LLC':([3,4,5,8,16,17,18,19,20,27,32,33,34,35,36,37,38,39,40,50,74,75,77,105,111,130,131,135,139,140,141,145,146,147,148,158,159,160,161,164,165,166,167,168,169,],[-9,-4,-10,-13,-16,-17,-18,-19,-20,-34,-2,-4,-3,-11,-12,-14,-15,-80,-81,-8,-8,-36,107,131,-40,-8,-35,-8,146,-33,-30,158,-21,159,-29,-37,-27,-8,-8,-32,-31,-28,-8,169,-22,]),'DEFAULT':([3,4,5,8,16,17,18,19,20,27,32,33,34,35,36,37,38,39,40,75,111,131,140,141,146,148,158,159,161,165,166,169,],[-9,-4,-10,-13,-16,-17,-18,-19,-20,-34,-2,-4,-3,-11,-12,-14,-15,-80,-81,-36,-40,-35,149,-30,-21,-29,-37,-27,-8,-31,-28,-22,]),'CASE':([3,4,5,8,16,17,18,19,20,27,32,33,34,35,36,37,38,39,40,75,111,131,132,140,141,146,148,158,159,161,165,166,169,],[-9,-4,-10,-13,-16,-17,-18,-19,-20,-34,-2,-4,-3,-11,-12,-14,-15,-80,-81,-36,-40,-35,142,142,-30,-21,-29,-37,-27,-8,-31,-28,-22,]),'PYC':([4,6,7,9,10,11,12,33,42,43,45,46,55,56,57,58,64,65,66,67,68,69,70,72,78,82,101,102,103,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,134,136,137,138,162,],[34,35,36,37,38,39,40,34,-43,-82,-38,-39,-7,-47,-48,-49,-41,-45,-46,-71,-72,-73,-74,-44,108,111,-63,-70,-42,-50,-60,-61,-62,-54,-55,-56,-57,-58,-59,-64,-65,-66,-67,-68,-69,144,-51,-52,-53,166,]),'PARA':([13,26,28,30,31,41,44,47,49,52,53,59,60,61,62,63,71,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,133,142,143,144,],[41,47,49,51,52,53,53,53,53,53,53,98,99,100,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,143,53,53,53,]),'IGUAL':([15,42,157,],[44,71,44,]),'INCREMENTO':([15,157,],[45,45,]),'DECREMENTO':([15,157,],[46,46,]),'ELSE':([27,158,],[48,-37,]),'LLA':([29,48,104,106,109,163,],[50,74,130,132,135,167,]),'SENO':([41,44,47,49,52,53,62,63,71,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,142,143,144,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'COSENO':([41,44,47,49,52,53,62,63,71,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,142,143,144,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'INV':([41,44,47,49,52,53,62,63,71,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,142,143,144,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'RESTA':([41,44,47,49,52,53,54,55,56,57,58,62,63,64,65,66,67,68,69,70,71,72,73,76,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,134,136,137,138,142,143,144,150,151,152,157,],[62,62,62,62,62,62,87,-7,-47,-48,-49,62,62,-41,-45,-46,-71,-72,-73,-74,62,87,87,87,87,87,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,87,87,87,62,-50,87,87,87,-54,-55,-56,-57,-58,-59,87,87,87,87,87,87,87,87,87,87,-51,-52,-53,62,62,62,87,87,87,-74,]),'NOT':([41,44,47,49,52,53,62,63,71,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,142,143,144,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'CARACTER':([41,44,47,49,52,53,62,63,71,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,142,143,144,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'TRUE':([41,44,47,49,52,53,62,63,71,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,142,143,144,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'FALSE':([41,44,47,49,52,53,62,63,71,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,142,143,144,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'ENTERO':([41,44,47,49,52,53,62,63,71,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,142,143,144,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'CADENAS':([41,44,47,49,52,53,62,63,71,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,142,143,144,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'DECIMAL':([41,44,47,49,52,53,62,63,71,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,142,143,144,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'PARC':([45,46,54,55,56,57,58,64,65,66,67,68,69,70,72,73,76,80,81,101,102,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,136,137,138,151,152,153,154,155,156,157,],[-38,-39,82,-7,-47,-48,-49,-41,-45,-46,-71,-72,-73,-74,-44,104,106,109,110,-63,-70,-50,-60,-61,-62,-54,-55,-56,-57,-58,-59,-64,-65,-66,-67,-68,-69,136,137,138,-51,-52,-53,162,-25,163,-23,-24,-26,-74,]),'OR':([54,55,56,57,58,64,65,66,67,68,69,70,72,73,76,80,81,101,102,103,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,134,136,137,138,150,151,152,157,],[83,-7,-47,-48,-49,-41,-45,-46,-71,-72,-73,-74,83,83,83,83,83,83,-70,83,-50,-60,83,-62,-54,-55,-56,-57,-58,-59,-64,-65,-66,-67,-68,-69,83,83,83,83,-51,-52,-53,83,83,83,-74,]),'AND':([54,55,56,57,58,64,65,66,67,68,69,70,72,73,76,80,81,101,102,103,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,134,136,137,138,150,151,152,157,],[84,-7,-47,-48,-49,-41,-45,-46,-71,-72,-73,-74,84,84,84,84,84,84,-70,84,-50,-60,-61,-62,-54,-55,-56,-57,-58,-59,-64,-65,-66,-67,-68,-69,84,84,84,84,-51,-52,-53,84,84,84,-74,]),'XOR':([54,55,56,57,58,64,65,66,67,68,69,70,72,73,76,80,81,101,102,103,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,134,136,137,138,150,151,152,157,],[85,-7,-47,-48,-49,-41,-45,-46,-71,-72,-73,-74,85,85,85,85,85,85,-70,85,-50,85,85,-62,-54,-55,-56,-57,-58,-59,-64,-65,-66,-67,-68,-69,85,85,85,85,-51,-52,-53,85,85,85,-74,]),'SUMA':([54,55,56,57,58,64,65,66,67,68,69,70,72,73,76,80,81,101,102,103,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,134,136,137,138,150,151,152,157,],[86,-7,-47,-48,-49,-41,-45,-46,-71,-72,-73,-74,86,86,86,86,86,86,86,86,-50,86,86,86,-54,-55,-56,-57,-58,-59,86,86,86,86,86,86,86,86,86,86,-51,-52,-53,86,86,86,-74,]),'MULTIPLICACION':([54,55,56,57,58,64,65,66,67,68,69,70,72,73,76,80,81,101,102,103,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,134,136,137,138,150,151,152,157,],[88,-7,-47,-48,-49,-41,-45,-46,-71,-72,-73,-74,88,88,88,88,88,88,88,88,-50,88,88,88,88,88,-56,-57,-58,-59,88,88,88,88,88,88,88,88,88,88,-51,-52,-53,88,88,88,-74,]),'DIVISION':([54,55,56,57,58,64,65,66,67,68,69,70,72,73,76,80,81,101,102,103,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,134,136,137,138,150,151,152,157,],[89,-7,-47,-48,-49,-41,-45,-46,-71,-72,-73,-74,89,89,89,89,89,89,89,89,-50,89,89,89,89,89,-56,-57,-58,-59,89,89,89,89,89,89,89,89,89,89,-51,-52,-53,89,89,89,-74,]),'POTENCIA':([54,55,56,57,58,64,65,66,67,68,69,70,72,73,76,80,81,101,102,103,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,134,136,137,138,150,151,152,157,],[90,-7,-47,-48,-49,-41,-45,-46,-71,-72,-73,-74,90,90,90,90,90,90,90,90,-50,90,90,90,90,90,90,90,None,None,90,90,90,90,90,90,90,90,90,90,-51,-52,-53,90,90,90,-74,]),'MODULO':([54,55,56,57,58,64,65,66,67,68,69,70,72,73,76,80,81,101,102,103,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,134,136,137,138,150,151,152,157,],[91,-7,-47,-48,-49,-41,-45,-46,-71,-72,-73,-74,91,91,91,91,91,91,91,91,-50,91,91,91,91,91,91,91,None,None,91,91,91,91,91,91,91,91,91,91,-51,-52,-53,91,91,91,-74,]),'IGUALACION':([54,55,56,57,58,64,65,66,67,68,69,70,72,73,76,80,81,101,102,103,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,134,136,137,138,150,151,152,157,],[92,-7,-47,-48,-49,-41,-45,-46,-71,-72,-73,-74,92,92,92,92,92,92,92,92,-50,92,92,92,-54,-55,-56,-57,-58,-59,-64,-65,-66,-67,-68,-69,92,92,92,92,-51,-52,-53,92,92,92,-74,]),'DIFERENCIACION':([54,55,56,57,58,64,65,66,67,68,69,70,72,73,76,80,81,101,102,103,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,134,136,137,138,150,151,152,157,],[93,-7,-47,-48,-49,-41,-45,-46,-71,-72,-73,-74,93,93,93,93,93,93,93,93,-50,93,93,93,-54,-55,-56,-57,-58,-59,-64,-65,-66,-67,-68,-69,93,93,93,93,-51,-52,-53,93,93,93,-74,]),'MENOR':([54,55,56,57,58,64,65,66,67,68,69,70,72,73,76,80,81,101,102,103,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,134,136,137,138,150,151,152,157,],[94,-7,-47,-48,-49,-41,-45,-46,-71,-72,-73,-74,94,94,94,94,94,94,94,94,-50,94,94,94,-54,-55,-56,-57,-58,-59,-64,-65,-66,-67,-68,-69,94,94,94,94,-51,-52,-53,94,94,94,-74,]),'MAYOR':([54,55,56,57,58,64,65,66,67,68,69,70,72,73,76,80,81,101,102,103,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,134,136,137,138,150,151,152,157,],[95,-7,-47,-48,-49,-41,-45,-46,-71,-72,-73,-74,95,95,95,95,95,95,95,95,-50,95,95,95,-54,-55,-56,-57,-58,-59,-64,-65,-66,-67,-68,-69,95,95,95,95,-51,-52,-53,95,95,95,-74,]),'MENOR_IGUAL':([54,55,56,57,58,64,65,66,67,68,69,70,72,73,76,80,81,101,102,103,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,134,136,137,138,150,151,152,157,],[96,-7,-47,-48,-49,-41,-45,-46,-71,-72,-73,-74,96,96,96,96,96,96,96,96,-50,96,96,96,-54,-55,-56,-57,-58,-59,-64,-65,-66,-67,-68,-69,96,96,96,96,-51,-52,-53,96,96,96,-74,]),'MAYOR_IGUAL':([54,55,56,57,58,64,65,66,67,68,69,70,72,73,76,80,81,101,102,103,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,134,136,137,138,150,151,152,157,],[97,-7,-47,-48,-49,-41,-45,-46,-71,-72,-73,-74,97,97,97,97,97,97,97,97,-50,97,97,97,-54,-55,-56,-57,-58,-59,-64,-65,-66,-67,-68,-69,97,97,97,97,-51,-52,-53,97,97,97,-74,]),'DOS_PUNTOS':([55,56,57,58,64,65,66,67,68,69,70,101,102,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,136,137,138,149,150,],[-7,-47,-48,-49,-41,-45,-46,-71,-72,-73,-74,-63,-70,-50,-60,-61,-62,-54,-55,-56,-57,-58,-59,-64,-65,-66,-67,-68,-69,-51,-52,-53,160,161,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ini':([0,],[1,]),'instrucciones':([0,50,74,130,135,160,161,167,],[2,77,105,139,145,164,165,168,]),'instruccion':([0,2,50,74,77,105,130,135,139,145,160,161,164,165,167,168,],[3,32,3,3,32,32,3,3,32,32,3,3,32,32,3,32,]),'instruccion_println':([0,2,50,74,77,105,130,135,139,145,160,161,164,165,167,168,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'declaracion_variable':([0,2,50,51,74,77,105,130,135,139,145,160,161,164,165,167,168,],[6,6,6,78,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'asignacion_variable':([0,2,50,74,77,105,130,135,139,144,145,160,161,164,165,167,168,],[7,7,7,7,7,7,7,7,7,156,7,7,7,7,7,7,7,]),'estructura_control':([0,2,50,74,77,105,130,135,139,145,160,161,164,165,167,168,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'incremento':([0,2,50,74,77,105,130,135,139,144,145,160,161,164,165,167,168,],[9,9,9,9,9,9,9,9,9,154,9,9,9,9,9,9,9,]),'decremento':([0,2,50,74,77,105,130,135,139,144,145,160,161,164,165,167,168,],[10,10,10,10,10,10,10,10,10,155,10,10,10,10,10,10,10,]),'tipo':([0,2,50,51,74,77,105,130,135,139,145,160,161,164,165,167,168,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'instruccion_while':([0,2,50,74,77,105,130,135,139,145,160,161,164,165,167,168,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'instruccion_if':([0,2,48,50,74,77,105,130,135,139,145,160,161,164,165,167,168,],[17,17,75,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'instruccion_switch':([0,2,50,74,77,105,130,135,139,145,160,161,164,165,167,168,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'instruccion_dowhile':([0,2,50,74,77,105,130,135,139,145,160,161,164,165,167,168,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'instruccion_for':([0,2,50,74,77,105,130,135,139,145,160,161,164,165,167,168,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'base_if':([0,2,48,50,74,77,105,130,135,139,145,160,161,164,165,167,168,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'expresion':([41,44,47,49,52,53,62,63,71,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,142,143,144,],[54,72,73,76,80,81,101,102,103,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,134,150,151,152,]),'aritmetica':([41,44,47,49,52,53,62,63,71,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,142,143,144,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'literal':([41,44,47,49,52,53,62,63,71,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,142,143,144,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'relacional':([41,44,47,49,52,53,62,63,71,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,142,143,144,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'lista_case':([132,],[140,]),'case_unico':([132,140,],[141,148,]),'default_opcional':([140,],[147,]),'actualizacion':([144,],[153,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ini","S'",1,None,None,None),
  ('ini -> instrucciones','ini',1,'p_inicio','parser.py',77),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','parser.py',84),
  ('instruccion -> error PYC','instruccion',2,'p_instruccion_error_print','parser.py',97),
  ('estructura_control -> error','estructura_control',1,'p_instruccion_error_estructura','parser.py',104),
  ('instrucciones -> instrucciones error','instrucciones',2,'p_instrucciones_error','parser.py',111),
  ('instrucciones -> error','instrucciones',1,'p_instrucciones_error','parser.py',112),
  ('expresion -> error','expresion',1,'p_expresion_error','parser.py',122),
  ('instrucciones -> <empty>','instrucciones',0,'p_instrucciones_empty','parser.py',128),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','parser.py',133),
  ('instruccion -> instruccion_println','instruccion',1,'p_instruccion','parser.py',142),
  ('instruccion -> declaracion_variable PYC','instruccion',2,'p_instruccion','parser.py',143),
  ('instruccion -> asignacion_variable PYC','instruccion',2,'p_instruccion','parser.py',144),
  ('instruccion -> estructura_control','instruccion',1,'p_instruccion','parser.py',145),
  ('instruccion -> incremento PYC','instruccion',2,'p_instruccion','parser.py',146),
  ('instruccion -> decremento PYC','instruccion',2,'p_instruccion','parser.py',147),
  ('estructura_control -> instruccion_while','estructura_control',1,'p_estructura_control','parser.py',161),
  ('estructura_control -> instruccion_if','estructura_control',1,'p_estructura_control','parser.py',162),
  ('estructura_control -> instruccion_switch','estructura_control',1,'p_estructura_control','parser.py',163),
  ('estructura_control -> instruccion_dowhile','estructura_control',1,'p_estructura_control','parser.py',164),
  ('estructura_control -> instruccion_for','estructura_control',1,'p_estructura_control','parser.py',165),
  ('instruccion_while -> WHILE PARA expresion PARC LLA instrucciones LLC','instruccion_while',7,'p_instruccion_while','parser.py',172),
  ('instruccion_for -> FOR PARA declaracion_variable PYC expresion PYC actualizacion PARC LLA instrucciones LLC','instruccion_for',11,'p_instruccion_for','parser.py',184),
  ('actualizacion -> incremento','actualizacion',1,'p_actualizacion','parser.py',204),
  ('actualizacion -> decremento','actualizacion',1,'p_actualizacion','parser.py',205),
  ('actualizacion -> expresion','actualizacion',1,'p_actualizacion','parser.py',206),
  ('actualizacion -> asignacion_variable','actualizacion',1,'p_actualizacion','parser.py',207),
  ('instruccion_switch -> SWITCH PARA expresion PARC LLA lista_case default_opcional LLC','instruccion_switch',8,'p_instruccion_switch','parser.py',213),
  ('instruccion_dowhile -> DO LLA instrucciones LLC WHILE PARA expresion PARC PYC','instruccion_dowhile',9,'p_instruccion_dowhile','parser.py',227),
  ('lista_case -> lista_case case_unico','lista_case',2,'p_lista_case','parser.py',241),
  ('lista_case -> case_unico','lista_case',1,'p_lista_case','parser.py',242),
  ('case_unico -> CASE expresion DOS_PUNTOS instrucciones','case_unico',4,'p_case_unico','parser.py',252),
  ('default_opcional -> DEFAULT DOS_PUNTOS instrucciones','default_opcional',3,'p_default_opcional','parser.py',266),
  ('default_opcional -> <empty>','default_opcional',0,'p_default_opcional','parser.py',267),
  ('instruccion_if -> base_if','instruccion_if',1,'p_instruccion_if','parser.py',275),
  ('instruccion_if -> base_if ELSE LLA instrucciones LLC','instruccion_if',5,'p_instruccion_if','parser.py',276),
  ('instruccion_if -> base_if ELSE instruccion_if','instruccion_if',3,'p_instruccion_if','parser.py',277),
  ('base_if -> IF PARA expresion PARC LLA instrucciones LLC','base_if',7,'p_base_if','parser.py',303),
  ('incremento -> ID INCREMENTO','incremento',2,'p_incremento','parser.py',318),
  ('decremento -> ID DECREMENTO','decremento',2,'p_decremento','parser.py',339),
  ('instruccion_println -> PRINTLN PARA expresion PARC PYC','instruccion_println',5,'p_instruccion_println','parser.py',360),
  ('literal -> CARACTER','literal',1,'p_caracter','parser.py',366),
  ('declaracion_variable -> tipo ID IGUAL expresion','declaracion_variable',4,'p_declaracion_variable','parser.py',374),
  ('declaracion_variable -> tipo ID','declaracion_variable',2,'p_declaracion_variable','parser.py',375),
  ('asignacion_variable -> ID IGUAL expresion','asignacion_variable',3,'p_asignacion_variable','parser.py',388),
  ('literal -> TRUE','literal',1,'p_literal_booleano','parser.py',395),
  ('literal -> FALSE','literal',1,'p_literal_booleano','parser.py',396),
  ('expresion -> aritmetica','expresion',1,'p_expresion','parser.py',404),
  ('expresion -> literal','expresion',1,'p_expresion','parser.py',405),
  ('expresion -> relacional','expresion',1,'p_expresion','parser.py',406),
  ('expresion -> PARA expresion PARC','expresion',3,'p_expresion_parentesis','parser.py',412),
  ('expresion -> SENO PARA expresion PARC','expresion',4,'p_expresion_nativa','parser.py',417),
  ('expresion -> COSENO PARA expresion PARC','expresion',4,'p_expresion_nativa','parser.py',418),
  ('expresion -> INV PARA expresion PARC','expresion',4,'p_expresion_nativa','parser.py',419),
  ('aritmetica -> expresion SUMA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',445),
  ('aritmetica -> expresion RESTA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',446),
  ('aritmetica -> expresion MULTIPLICACION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',447),
  ('aritmetica -> expresion DIVISION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',448),
  ('aritmetica -> expresion POTENCIA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',449),
  ('aritmetica -> expresion MODULO expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',450),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica_binaria','parser.py',468),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica_binaria','parser.py',469),
  ('expresion -> expresion XOR expresion','expresion',3,'p_expresion_logica_binaria','parser.py',470),
  ('expresion -> RESTA expresion','expresion',2,'p_expresion_umenos','parser.py',475),
  ('relacional -> expresion IGUALACION expresion','relacional',3,'p_relacional','parser.py',487),
  ('relacional -> expresion DIFERENCIACION expresion','relacional',3,'p_relacional','parser.py',488),
  ('relacional -> expresion MENOR expresion','relacional',3,'p_relacional','parser.py',489),
  ('relacional -> expresion MAYOR expresion','relacional',3,'p_relacional','parser.py',490),
  ('relacional -> expresion MENOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',491),
  ('relacional -> expresion MAYOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',492),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_not','parser.py',510),
  ('literal -> ENTERO','literal',1,'p_entero','parser.py',516),
  ('literal -> CADENAS','literal',1,'p_cadena','parser.py',523),
  ('literal -> DECIMAL','literal',1,'p_decimal','parser.py',529),
  ('literal -> ID','literal',1,'p_id','parser.py',535),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',541),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',542),
  ('tipo -> STR','tipo',1,'p_tipo','parser.py',543),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',544),
  ('tipo -> BOOL','tipo',1,'p_tipo','parser.py',545),
  ('instruccion -> BREAK PYC','instruccion',2,'p_instruccion_break','parser.py',564),
  ('instruccion -> CONTINUE PYC','instruccion',2,'p_instruccion_continue','parser.py',568),
  ('declaracion_variable -> ID ID','declaracion_variable',2,'p_declaracion_variable_error','parser.py',573),
]
