
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftXORrightNOTleftIGUALACIONMENORMAYORMENOR_IGUALMAYOR_IGUALDIFERENCIACIONleftSUMARESTAleftMULTIPLICACIONDIVISIONnonassocPOTENCIAMODULOrightUMENOSAND ARROBA BOOLEAN BOOLEANO BREAK CADENAS CARACTER CASE CHAR COMA COMENTARIO_MULTILINEA COMENTARIO_UNA_LINEA CONTINUE DECIMAL DEFAULT DIFERENCIACION DIVISION DO DO_WHILE ELSE ENTERO FALSE FLOAT FOR ID IDENTIFICADOR IF IGUAL IGUALACION INT LLA LLC MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NOT OR PARA PARC POTENCIA PRINT PRINTLN PYC RESTA RETURN STR SUMA SWITCH TRUE UMENOS VAR WHILE XOR\n    ini : instrucciones\n    \n    instrucciones : instrucciones instruccion\n    \n    instrucciones : instruccion\n    \n    instruccion : instruccion_print PYC\n                | declaracion_variable PYC\n                | asignacion_variable PYC\n    \n    instruccion_print : tipo_print PARA expresion PARC\n    \n    literal : CARACTER\n    \n    tipo_print : PRINT\n               | PRINTLN\n    \n    declaracion_variable : tipo ID IGUAL expresion\n    \n    asignacion_variable : ID IGUAL expresion\n    \n    expresion : aritmetica\n              | literal\n              | relacional\n              | logica\n    \n    aritmetica : expresion SUMA expresion\n                | expresion RESTA expresion\n                | expresion MULTIPLICACION expresion\n                | expresion DIVISION expresion\n    \n    logica : expresion AND expresion\n           | expresion OR expresion\n           | NOT expresion\n    \n    relacional : expresion IGUAL expresion\n               | expresion DIFERENCIACION expresion\n               | expresion MENOR expresion\n               | expresion MAYOR expresion\n               | expresion MENOR_IGUAL expresion\n               | expresion MAYOR_IGUAL expresion\n    \n    literal : ENTERO\n    \n    literal : CADENAS\n    \n    literal : DECIMAL\n    \n    literal : ID\n    \n    tipo : INT\n        | FLOAT\n        | STR\n        | CHAR\n        | BOOLEAN\n    '
    
_lr_action_items = {'ID':([0,2,3,8,12,13,14,15,16,17,18,19,20,21,23,34,35,38,39,40,41,42,43,44,45,46,47,48,49,],[9,9,-3,22,-34,-35,-36,-37,-38,-2,-4,-5,-6,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'PRINT':([0,2,3,17,18,19,20,],[10,10,-3,-2,-4,-5,-6,]),'PRINTLN':([0,2,3,17,18,19,20,],[11,11,-3,-2,-4,-5,-6,]),'INT':([0,2,3,17,18,19,20,],[12,12,-3,-2,-4,-5,-6,]),'FLOAT':([0,2,3,17,18,19,20,],[13,13,-3,-2,-4,-5,-6,]),'STR':([0,2,3,17,18,19,20,],[14,14,-3,-2,-4,-5,-6,]),'CHAR':([0,2,3,17,18,19,20,],[15,15,-3,-2,-4,-5,-6,]),'BOOLEAN':([0,2,3,17,18,19,20,],[16,16,-3,-2,-4,-5,-6,]),'$end':([1,2,3,17,18,19,20,],[0,-1,-3,-2,-4,-5,-6,]),'PYC':([4,5,6,25,26,27,28,29,30,31,32,33,36,37,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[18,19,20,-13,-14,-15,-16,-8,-30,-31,-32,-33,-12,-7,-23,-11,-17,-18,-19,-20,-24,-25,-26,-27,-28,-29,-21,-22,]),'PARA':([7,10,11,],[21,-9,-10,]),'IGUAL':([9,22,24,25,26,27,28,29,30,31,32,33,36,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[23,35,42,-13,-14,-15,-16,-8,-30,-31,-32,-33,42,-23,42,-17,-18,-19,-20,42,-25,-26,-27,-28,-29,-21,-22,]),'CARACTER':([21,23,34,35,38,39,40,41,42,43,44,45,46,47,48,49,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'ENTERO':([21,23,34,35,38,39,40,41,42,43,44,45,46,47,48,49,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'CADENAS':([21,23,34,35,38,39,40,41,42,43,44,45,46,47,48,49,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'DECIMAL':([21,23,34,35,38,39,40,41,42,43,44,45,46,47,48,49,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'NOT':([21,23,34,35,38,39,40,41,42,43,44,45,46,47,48,49,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'PARC':([24,25,26,27,28,29,30,31,32,33,50,52,53,54,55,56,57,58,59,60,61,62,63,],[37,-13,-14,-15,-16,-8,-30,-31,-32,-33,-23,-17,-18,-19,-20,-24,-25,-26,-27,-28,-29,-21,-22,]),'SUMA':([24,25,26,27,28,29,30,31,32,33,36,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[38,-13,-14,-15,-16,-8,-30,-31,-32,-33,38,38,38,-17,-18,-19,-20,38,38,38,38,38,38,38,38,]),'RESTA':([24,25,26,27,28,29,30,31,32,33,36,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[39,-13,-14,-15,-16,-8,-30,-31,-32,-33,39,39,39,-17,-18,-19,-20,39,39,39,39,39,39,39,39,]),'MULTIPLICACION':([24,25,26,27,28,29,30,31,32,33,36,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[40,-13,-14,-15,-16,-8,-30,-31,-32,-33,40,40,40,40,40,-19,-20,40,40,40,40,40,40,40,40,]),'DIVISION':([24,25,26,27,28,29,30,31,32,33,36,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[41,-13,-14,-15,-16,-8,-30,-31,-32,-33,41,41,41,41,41,-19,-20,41,41,41,41,41,41,41,41,]),'DIFERENCIACION':([24,25,26,27,28,29,30,31,32,33,36,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[43,-13,-14,-15,-16,-8,-30,-31,-32,-33,43,43,43,-17,-18,-19,-20,43,-25,-26,-27,-28,-29,43,43,]),'MENOR':([24,25,26,27,28,29,30,31,32,33,36,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[44,-13,-14,-15,-16,-8,-30,-31,-32,-33,44,44,44,-17,-18,-19,-20,44,-25,-26,-27,-28,-29,44,44,]),'MAYOR':([24,25,26,27,28,29,30,31,32,33,36,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[45,-13,-14,-15,-16,-8,-30,-31,-32,-33,45,45,45,-17,-18,-19,-20,45,-25,-26,-27,-28,-29,45,45,]),'MENOR_IGUAL':([24,25,26,27,28,29,30,31,32,33,36,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[46,-13,-14,-15,-16,-8,-30,-31,-32,-33,46,46,46,-17,-18,-19,-20,46,-25,-26,-27,-28,-29,46,46,]),'MAYOR_IGUAL':([24,25,26,27,28,29,30,31,32,33,36,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[47,-13,-14,-15,-16,-8,-30,-31,-32,-33,47,47,47,-17,-18,-19,-20,47,-25,-26,-27,-28,-29,47,47,]),'AND':([24,25,26,27,28,29,30,31,32,33,36,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[48,-13,-14,-15,-16,-8,-30,-31,-32,-33,48,-23,48,-17,-18,-19,-20,48,-25,-26,-27,-28,-29,-21,48,]),'OR':([24,25,26,27,28,29,30,31,32,33,36,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[49,-13,-14,-15,-16,-8,-30,-31,-32,-33,49,-23,49,-17,-18,-19,-20,49,-25,-26,-27,-28,-29,-21,-22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ini':([0,],[1,]),'instrucciones':([0,],[2,]),'instruccion':([0,2,],[3,17,]),'instruccion_print':([0,2,],[4,4,]),'declaracion_variable':([0,2,],[5,5,]),'asignacion_variable':([0,2,],[6,6,]),'tipo_print':([0,2,],[7,7,]),'tipo':([0,2,],[8,8,]),'expresion':([21,23,34,35,38,39,40,41,42,43,44,45,46,47,48,49,],[24,36,50,51,52,53,54,55,56,57,58,59,60,61,62,63,]),'aritmetica':([21,23,34,35,38,39,40,41,42,43,44,45,46,47,48,49,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'literal':([21,23,34,35,38,39,40,41,42,43,44,45,46,47,48,49,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'relacional':([21,23,34,35,38,39,40,41,42,43,44,45,46,47,48,49,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'logica':([21,23,34,35,38,39,40,41,42,43,44,45,46,47,48,49,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ini","S'",1,None,None,None),
  ('ini -> instrucciones','ini',1,'p_inicio','parser.py',62),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','parser.py',69),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','parser.py',77),
  ('instruccion -> instruccion_print PYC','instruccion',2,'p_instruccion','parser.py',83),
  ('instruccion -> declaracion_variable PYC','instruccion',2,'p_instruccion','parser.py',84),
  ('instruccion -> asignacion_variable PYC','instruccion',2,'p_instruccion','parser.py',85),
  ('instruccion_print -> tipo_print PARA expresion PARC','instruccion_print',4,'p_instruccion_print','parser.py',92),
  ('literal -> CARACTER','literal',1,'p_caracter','parser.py',99),
  ('tipo_print -> PRINT','tipo_print',1,'p_tipo_print','parser.py',105),
  ('tipo_print -> PRINTLN','tipo_print',1,'p_tipo_print','parser.py',106),
  ('declaracion_variable -> tipo ID IGUAL expresion','declaracion_variable',4,'p_declaracion_variable','parser.py',112),
  ('asignacion_variable -> ID IGUAL expresion','asignacion_variable',3,'p_asignacion_variable','parser.py',120),
  ('expresion -> aritmetica','expresion',1,'p_expresion','parser.py',128),
  ('expresion -> literal','expresion',1,'p_expresion','parser.py',129),
  ('expresion -> relacional','expresion',1,'p_expresion','parser.py',130),
  ('expresion -> logica','expresion',1,'p_expresion','parser.py',131),
  ('aritmetica -> expresion SUMA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',137),
  ('aritmetica -> expresion RESTA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',138),
  ('aritmetica -> expresion MULTIPLICACION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',139),
  ('aritmetica -> expresion DIVISION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',140),
  ('logica -> expresion AND expresion','logica',3,'p_logica','parser.py',154),
  ('logica -> expresion OR expresion','logica',3,'p_logica','parser.py',155),
  ('logica -> NOT expresion','logica',2,'p_logica','parser.py',156),
  ('relacional -> expresion IGUAL expresion','relacional',3,'p_relacional','parser.py',170),
  ('relacional -> expresion DIFERENCIACION expresion','relacional',3,'p_relacional','parser.py',171),
  ('relacional -> expresion MENOR expresion','relacional',3,'p_relacional','parser.py',172),
  ('relacional -> expresion MAYOR expresion','relacional',3,'p_relacional','parser.py',173),
  ('relacional -> expresion MENOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',174),
  ('relacional -> expresion MAYOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',175),
  ('literal -> ENTERO','literal',1,'p_entero','parser.py',193),
  ('literal -> CADENAS','literal',1,'p_cadena','parser.py',199),
  ('literal -> DECIMAL','literal',1,'p_decimal','parser.py',205),
  ('literal -> ID','literal',1,'p_id','parser.py',211),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',217),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',218),
  ('tipo -> STR','tipo',1,'p_tipo','parser.py',219),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',220),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','parser.py',221),
]
