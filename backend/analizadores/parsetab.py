
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightUMENOSleftANDleftORleftXORrightNOTleftIGUALACIONMENORMAYORMENOR_IGUALMAYOR_IGUALDIFERENCIACIONleftSUMARESTAleftMULTIPLICACIONDIVISIONnonassocPOTENCIAMODULOAND ARROBA BOOL BREAK CADENAS CARACTER CASE CHAR COMA COMENTARIO_MULTILINEA COMENTARIO_UNA_LINEA CONTINUE CORCHETE_ABRE CORCHETE_CIERRA COSENO DECIMAL DECREMENTO DEFAULT DIFERENCIACION DIVISION DO DOS_PUNTOS ELSE ENTERO FALSE FLOAT FOR ID IDENTIFICADOR IF IGUAL IGUALACION INCREMENTO INT INV LLA LLC MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NOT OR PARA PARC POTENCIA PRINTLN PYC RESTA RETURN SENO SHUFFLE SORT STR SUMA SWITCH TRUE UMENOS VAR VECTOR WHILE XOR\n    ini : instrucciones\n    \n    instrucciones : instrucciones instruccion\n    \n    instruccion : error PYC\n    \n    estructura_control : error\n    \n    instrucciones : instrucciones error\n                  | error\n    \n    expresion : error\n    instrucciones : \n    instrucciones : instruccion\n    \n    instruccion : instruccion_println\n                | declaracion_variable PYC\n                | asignacion_variable PYC\n                | estructura_control\n                | incremento PYC\n                | decremento PYC\n                | declaracion_vector PYC \n    \n    declaracion_vector : VECTOR CORCHETE_ABRE tipo CORCHETE_CIERRA ID PARA lista_dimensiones PARC\n                       | VECTOR CORCHETE_ABRE tipo CORCHETE_CIERRA ID PARA lista_dimensiones PARC IGUAL lista_valores_iniciales\n    \n    declaracion_vector : VECTOR CORCHETE_ABRE tipo CORCHETE_CIERRA ID PARA lista_dimensiones PARC IGUAL SORT PARA expresion PARC\n                       | VECTOR CORCHETE_ABRE tipo CORCHETE_CIERRA ID PARA lista_dimensiones PARC IGUAL SHUFFLE PARA expresion PARC\n    \n    lista_dimensiones : lista_dimensiones COMA expresion\n                     | expresion\n    \n    lista_valores_iniciales : lista_valores_iniciales COMA CORCHETE_ABRE lista_expresiones CORCHETE_CIERRA\n                           | CORCHETE_ABRE lista_expresiones CORCHETE_CIERRA\n    \n    lista_expresiones : lista_expresiones COMA expresion\n                     | expresion\n    \n    asignacion_variable : ID lista_indices IGUAL expresion\n    \n    lista_indices : lista_indices CORCHETE_ABRE expresion CORCHETE_CIERRA\n                 | CORCHETE_ABRE expresion CORCHETE_CIERRA\n    \n    literal : ID lista_indices\n    \n    estructura_control : instruccion_while\n                       | instruccion_if\n                       | instruccion_switch\n                       | instruccion_dowhile\n                       | instruccion_for\n    \n    instruccion_while : WHILE PARA expresion PARC LLA instrucciones LLC\n    \n    instruccion_for : FOR PARA declaracion_variable PYC expresion PYC actualizacion PARC LLA instrucciones LLC\n    \n    actualizacion : incremento\n                   | decremento\n                   | expresion\n                   | asignacion_variable\n    \n    instruccion_switch : SWITCH PARA expresion PARC LLA lista_case default_opcional LLC\n    \n    instruccion_dowhile : DO LLA instrucciones LLC WHILE PARA expresion PARC PYC\n    \n    lista_case : lista_case case_unico\n                | case_unico\n\n    \n    case_unico : CASE expresion DOS_PUNTOS instrucciones\n    \n    default_opcional : DEFAULT DOS_PUNTOS instrucciones\n                     | \n     \n    instruccion_if : base_if\n                   | base_if ELSE LLA instrucciones LLC\n                   | base_if ELSE instruccion_if                 \n     \n    base_if : IF PARA expresion PARC LLA instrucciones LLC\n    \n    incremento : ID INCREMENTO\n    \n    decremento : ID DECREMENTO\n    instruccion_println : PRINTLN PARA expresion PARC PYC\n    literal : CARACTER\n    \n    declaracion_variable : tipo ID IGUAL expresion\n                        | tipo ID\n    \n    asignacion_variable : ID IGUAL expresion\n    \n    literal : TRUE\n            | FALSE\n    \n    expresion : aritmetica\n              | literal\n              | relacional\n\n    expresion : PARA expresion PARC \n    expresion : SENO PARA expresion PARC\n              | COSENO PARA expresion PARC\n              | INV PARA expresion PARC\n              | SHUFFLE PARA expresion PARC\n              | SORT PARA expresion PARC\n    \n    aritmetica : expresion SUMA expresion\n                | expresion RESTA expresion\n                | expresion MULTIPLICACION expresion\n                | expresion DIVISION expresion\n                | expresion POTENCIA expresion\n                | expresion MODULO expresion\n    \n    expresion : expresion OR expresion\n              | expresion AND expresion\n              | expresion XOR expresion\n    expresion : RESTA expresion %prec UMENOS\n    relacional : expresion IGUALACION expresion\n               | expresion DIFERENCIACION expresion\n               | expresion MENOR expresion\n               | expresion MAYOR expresion\n               | expresion MENOR_IGUAL expresion\n               | expresion MAYOR_IGUAL expresion\n    expresion : NOT expresion %prec NOT\n    literal : ENTERO\n    \n    literal : CADENAS\n    \n    literal : DECIMAL\n    \n    literal : ID\n    \n    tipo : INT\n        | FLOAT\n        | STR\n        | CHAR\n        | BOOL\n    instruccion : BREAK PYCinstruccion : CONTINUE PYCdeclaracion_variable : ID ID'
    
_lr_action_items = {'error':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,44,48,51,53,55,56,58,59,70,71,79,80,81,86,87,89,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,124,127,130,153,154,158,164,165,168,169,170,171,174,186,188,189,190,191,197,198,199,200,201,205,209,210,211,213,214,],[4,35,-9,-4,-10,-13,-31,-32,-33,-34,-35,-49,-2,-4,-3,-11,-12,-14,-15,-16,-97,-98,61,61,61,61,61,4,61,61,61,61,61,61,61,4,-51,35,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,35,61,-55,4,-50,4,61,35,61,61,61,35,-36,-52,61,-42,4,4,35,35,-43,4,61,35,61,61,-37,61,61,]),'BREAK':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,56,86,87,89,124,130,153,154,158,165,171,174,186,189,190,191,197,198,199,200,205,211,],[12,12,-9,-4,-10,-13,-31,-32,-33,-34,-35,-49,-2,-4,-3,-11,-12,-14,-15,-16,-97,-98,12,12,-51,12,12,-55,12,-50,12,12,12,-36,-52,-42,12,12,12,12,-43,12,12,-37,]),'CONTINUE':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,56,86,87,89,124,130,153,154,158,165,171,174,186,189,190,191,197,198,199,200,205,211,],[13,13,-9,-4,-10,-13,-31,-32,-33,-34,-35,-49,-2,-4,-3,-11,-12,-14,-15,-16,-97,-98,13,13,-51,13,13,-55,13,-50,13,13,13,-36,-52,-42,13,13,13,13,-43,13,13,-37,]),'PRINTLN':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,56,86,87,89,124,130,153,154,158,165,171,174,186,189,190,191,197,198,199,200,205,211,],[14,14,-9,-4,-10,-13,-31,-32,-33,-34,-35,-49,-2,-4,-3,-11,-12,-14,-15,-16,-97,-98,14,14,-51,14,14,-55,14,-50,14,14,14,-36,-52,-42,14,14,14,14,-43,14,14,-37,]),'ID':([0,2,3,4,5,8,15,16,17,18,19,20,21,23,24,25,26,27,29,34,35,36,37,38,39,40,41,42,43,44,48,51,53,55,56,57,58,59,70,71,79,80,81,86,87,89,91,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,122,124,127,130,153,154,158,164,165,168,169,170,171,174,186,188,189,190,191,197,198,199,200,201,205,209,210,211,213,214,],[16,16,-9,-4,-10,-13,45,46,-31,-32,-33,-34,-35,-92,-93,-94,-95,-96,-49,-2,-4,-3,-11,-12,-14,-15,-16,-97,-98,72,72,72,72,72,16,91,72,72,72,72,72,72,72,16,-51,16,46,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,152,16,72,-55,16,-50,16,72,16,72,72,185,16,-36,-52,72,-42,16,16,16,16,-43,16,72,16,72,72,-37,72,72,]),'VECTOR':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,56,86,87,89,124,130,153,154,158,165,171,174,186,189,190,191,197,198,199,200,205,211,],[22,22,-9,-4,-10,-13,-31,-32,-33,-34,-35,-49,-2,-4,-3,-11,-12,-14,-15,-16,-97,-98,22,22,-51,22,22,-55,22,-50,22,22,22,-36,-52,-42,22,22,22,22,-43,22,22,-37,]),'INT':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,52,56,57,86,87,89,124,130,153,154,158,165,171,174,186,189,190,191,197,198,199,200,205,211,],[23,23,-9,-4,-10,-13,-31,-32,-33,-34,-35,-49,-2,-4,-3,-11,-12,-14,-15,-16,-97,-98,23,23,23,23,-51,23,23,-55,23,-50,23,23,23,-36,-52,-42,23,23,23,23,-43,23,23,-37,]),'FLOAT':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,52,56,57,86,87,89,124,130,153,154,158,165,171,174,186,189,190,191,197,198,199,200,205,211,],[24,24,-9,-4,-10,-13,-31,-32,-33,-34,-35,-49,-2,-4,-3,-11,-12,-14,-15,-16,-97,-98,24,24,24,24,-51,24,24,-55,24,-50,24,24,24,-36,-52,-42,24,24,24,24,-43,24,24,-37,]),'STR':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,52,56,57,86,87,89,124,130,153,154,158,165,171,174,186,189,190,191,197,198,199,200,205,211,],[25,25,-9,-4,-10,-13,-31,-32,-33,-34,-35,-49,-2,-4,-3,-11,-12,-14,-15,-16,-97,-98,25,25,25,25,-51,25,25,-55,25,-50,25,25,25,-36,-52,-42,25,25,25,25,-43,25,25,-37,]),'CHAR':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,52,56,57,86,87,89,124,130,153,154,158,165,171,174,186,189,190,191,197,198,199,200,205,211,],[26,26,-9,-4,-10,-13,-31,-32,-33,-34,-35,-49,-2,-4,-3,-11,-12,-14,-15,-16,-97,-98,26,26,26,26,-51,26,26,-55,26,-50,26,26,26,-36,-52,-42,26,26,26,26,-43,26,26,-37,]),'BOOL':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,52,56,57,86,87,89,124,130,153,154,158,165,171,174,186,189,190,191,197,198,199,200,205,211,],[27,27,-9,-4,-10,-13,-31,-32,-33,-34,-35,-49,-2,-4,-3,-11,-12,-14,-15,-16,-97,-98,27,27,27,27,-51,27,27,-55,27,-50,27,27,27,-36,-52,-42,27,27,27,27,-43,27,27,-37,]),'WHILE':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,56,86,87,89,124,126,130,153,154,158,165,171,174,186,189,190,191,197,198,199,200,205,211,],[28,28,-9,-4,-10,-13,-31,-32,-33,-34,-35,-49,-2,-4,-3,-11,-12,-14,-15,-16,-97,-98,28,28,-51,28,28,156,-55,28,-50,28,28,28,-36,-52,-42,28,28,28,28,-43,28,28,-37,]),'SWITCH':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,56,86,87,89,124,130,153,154,158,165,171,174,186,189,190,191,197,198,199,200,205,211,],[30,30,-9,-4,-10,-13,-31,-32,-33,-34,-35,-49,-2,-4,-3,-11,-12,-14,-15,-16,-97,-98,30,30,-51,30,30,-55,30,-50,30,30,30,-36,-52,-42,30,30,30,30,-43,30,30,-37,]),'DO':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,56,86,87,89,124,130,153,154,158,165,171,174,186,189,190,191,197,198,199,200,205,211,],[31,31,-9,-4,-10,-13,-31,-32,-33,-34,-35,-49,-2,-4,-3,-11,-12,-14,-15,-16,-97,-98,31,31,-51,31,31,-55,31,-50,31,31,31,-36,-52,-42,31,31,31,31,-43,31,31,-37,]),'FOR':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,56,86,87,89,124,130,153,154,158,165,171,174,186,189,190,191,197,198,199,200,205,211,],[32,32,-9,-4,-10,-13,-31,-32,-33,-34,-35,-49,-2,-4,-3,-11,-12,-14,-15,-16,-97,-98,32,32,-51,32,32,-55,32,-50,32,32,32,-36,-52,-42,32,32,32,32,-43,32,32,-37,]),'IF':([0,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,54,56,86,87,89,124,130,153,154,158,165,171,174,186,189,190,191,197,198,199,200,205,211,],[33,33,-9,-4,-10,-13,-31,-32,-33,-34,-35,-49,-2,-4,-3,-11,-12,-14,-15,-16,-97,-98,33,33,33,-51,33,33,-55,33,-50,33,33,33,-36,-52,-42,33,33,33,33,-43,33,33,-37,]),'$end':([0,1,2,3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,87,130,154,174,186,189,199,211,],[-8,0,-1,-9,-4,-10,-13,-31,-32,-33,-34,-35,-49,-2,-4,-3,-11,-12,-14,-15,-16,-97,-98,-51,-55,-50,-36,-52,-42,-43,-37,]),'LLC':([3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,56,86,87,89,124,130,153,154,158,165,166,167,171,174,175,176,186,189,190,191,197,198,199,200,205,211,],[-9,-4,-10,-13,-31,-32,-33,-34,-35,-49,-2,-4,-3,-11,-12,-14,-15,-16,-97,-98,-8,-8,-51,126,154,-55,-8,-50,-8,174,-48,-45,186,-36,189,-44,-52,-42,-8,-8,-47,-46,-43,-8,211,-37,]),'DEFAULT':([3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,87,130,154,166,167,174,176,186,189,191,198,199,211,],[-9,-4,-10,-13,-31,-32,-33,-34,-35,-49,-2,-4,-3,-11,-12,-14,-15,-16,-97,-98,-51,-55,-50,177,-45,-36,-44,-52,-42,-8,-46,-43,-37,]),'CASE':([3,4,5,8,17,18,19,20,21,29,34,35,36,37,38,39,40,41,42,43,87,130,154,155,166,167,174,176,186,189,191,198,199,211,],[-9,-4,-10,-13,-31,-32,-33,-34,-35,-49,-2,-4,-3,-11,-12,-14,-15,-16,-97,-98,-51,-55,-50,168,168,-45,-36,-44,-52,-42,-8,-46,-43,-37,]),'PYC':([4,6,7,9,10,11,12,13,35,45,46,49,50,61,62,63,64,72,73,74,75,76,77,78,82,90,94,115,116,117,118,119,121,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,151,157,159,160,161,162,163,187,192,202,212,219,220,221,],[36,37,38,39,40,41,42,43,36,-58,-99,-53,-54,-7,-62,-63,-64,-91,-56,-60,-61,-88,-89,-90,-59,127,130,-80,-87,-30,-57,-27,-29,-65,-77,-78,-79,-71,-72,-73,-74,-75,-76,-81,-82,-83,-84,-85,-86,-28,170,-66,-67,-68,-69,-70,-17,199,-18,-24,-19,-20,-23,]),'PARA':([14,28,30,32,33,44,48,51,53,55,58,59,65,66,67,68,69,70,71,79,80,81,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,127,152,156,164,168,169,170,188,201,203,204,209,210,213,214,],[44,53,55,57,58,59,59,59,59,59,59,59,110,111,112,113,114,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,164,169,59,59,59,59,59,59,209,210,59,59,59,59,]),'IGUAL':([16,45,47,121,151,185,187,194,],[48,79,80,-29,-28,48,195,80,]),'INCREMENTO':([16,185,],[49,49,]),'DECREMENTO':([16,185,],[50,50,]),'CORCHETE_ABRE':([16,22,47,72,117,121,151,185,194,195,208,],[51,52,81,51,81,-29,-28,51,81,201,214,]),'CORCHETE_CIERRA':([23,24,25,26,27,61,62,63,64,72,73,74,75,76,77,78,83,84,115,116,117,120,121,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,151,159,160,161,162,163,206,207,217,218,],[-92,-93,-94,-95,-96,-7,-62,-63,-64,-91,-56,-60,-61,-88,-89,-90,121,122,-80,-87,-30,151,-29,-65,-77,-78,-79,-71,-72,-73,-74,-75,-76,-81,-82,-83,-84,-85,-86,-28,-66,-67,-68,-69,-70,212,-26,-25,221,]),'ELSE':([29,186,],[54,-52,]),'LLA':([31,54,123,125,128,193,],[56,86,153,155,158,200,]),'SENO':([44,48,51,53,55,58,59,70,71,79,80,81,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,127,164,168,169,170,188,201,209,210,213,214,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'COSENO':([44,48,51,53,55,58,59,70,71,79,80,81,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,127,164,168,169,170,188,201,209,210,213,214,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'INV':([44,48,51,53,55,58,59,70,71,79,80,81,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,127,164,168,169,170,188,201,209,210,213,214,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'SHUFFLE':([44,48,51,53,55,58,59,70,71,79,80,81,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,127,164,168,169,170,188,195,201,209,210,213,214,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,204,68,68,68,68,68,]),'SORT':([44,48,51,53,55,58,59,70,71,79,80,81,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,127,164,168,169,170,188,195,201,209,210,213,214,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,203,69,69,69,69,69,]),'RESTA':([44,48,51,53,55,58,59,60,61,62,63,64,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,88,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,157,159,160,161,162,163,164,168,169,170,173,178,179,180,185,188,194,196,201,207,209,210,213,214,215,216,217,],[70,70,70,70,70,70,70,99,-7,-62,-63,-64,70,70,-91,-56,-60,-61,-88,-89,-90,70,70,70,99,99,99,99,99,99,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,99,99,-30,99,99,99,-29,70,-65,99,99,99,-71,-72,-73,-74,-75,-76,99,99,99,99,99,99,99,99,99,99,99,-28,99,-66,-67,-68,-69,-70,70,70,70,70,99,99,99,99,-91,70,-30,99,70,99,70,70,70,70,99,99,99,]),'NOT':([44,48,51,53,55,58,59,70,71,79,80,81,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,127,164,168,169,170,188,201,209,210,213,214,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'CARACTER':([44,48,51,53,55,58,59,70,71,79,80,81,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,127,164,168,169,170,188,201,209,210,213,214,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'TRUE':([44,48,51,53,55,58,59,70,71,79,80,81,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,127,164,168,169,170,188,201,209,210,213,214,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'FALSE':([44,48,51,53,55,58,59,70,71,79,80,81,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,127,164,168,169,170,188,201,209,210,213,214,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'ENTERO':([44,48,51,53,55,58,59,70,71,79,80,81,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,127,164,168,169,170,188,201,209,210,213,214,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'CADENAS':([44,48,51,53,55,58,59,70,71,79,80,81,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,127,164,168,169,170,188,201,209,210,213,214,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'DECIMAL':([44,48,51,53,55,58,59,70,71,79,80,81,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,127,164,168,169,170,188,201,209,210,213,214,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'PARC':([49,50,60,61,62,63,64,72,73,74,75,76,77,78,82,85,88,92,93,115,116,117,119,121,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,159,160,161,162,163,172,173,179,180,181,182,183,184,185,194,196,215,216,],[-53,-54,94,-7,-62,-63,-64,-91,-56,-60,-61,-88,-89,-90,-59,123,125,128,129,-80,-87,-30,-27,-29,-65,-77,-78,-79,-71,-72,-73,-74,-75,-76,-81,-82,-83,-84,-85,-86,159,160,161,162,163,-28,-66,-67,-68,-69,-70,187,-22,192,-40,193,-38,-39,-41,-91,-30,-21,219,220,]),'OR':([60,61,62,63,64,72,73,74,75,76,77,78,82,83,85,88,92,93,115,116,117,118,119,120,121,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,157,159,160,161,162,163,173,178,179,180,185,194,196,207,215,216,217,],[95,-7,-62,-63,-64,-91,-56,-60,-61,-88,-89,-90,95,95,95,95,95,95,95,-87,-30,95,95,95,-29,-65,-77,95,-79,-71,-72,-73,-74,-75,-76,-81,-82,-83,-84,-85,-86,95,95,95,95,95,-28,95,-66,-67,-68,-69,-70,95,95,95,95,-91,-30,95,95,95,95,95,]),'AND':([60,61,62,63,64,72,73,74,75,76,77,78,82,83,85,88,92,93,115,116,117,118,119,120,121,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,157,159,160,161,162,163,173,178,179,180,185,194,196,207,215,216,217,],[96,-7,-62,-63,-64,-91,-56,-60,-61,-88,-89,-90,96,96,96,96,96,96,96,-87,-30,96,96,96,-29,-65,-77,-78,-79,-71,-72,-73,-74,-75,-76,-81,-82,-83,-84,-85,-86,96,96,96,96,96,-28,96,-66,-67,-68,-69,-70,96,96,96,96,-91,-30,96,96,96,96,96,]),'XOR':([60,61,62,63,64,72,73,74,75,76,77,78,82,83,85,88,92,93,115,116,117,118,119,120,121,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,157,159,160,161,162,163,173,178,179,180,185,194,196,207,215,216,217,],[97,-7,-62,-63,-64,-91,-56,-60,-61,-88,-89,-90,97,97,97,97,97,97,97,-87,-30,97,97,97,-29,-65,97,97,-79,-71,-72,-73,-74,-75,-76,-81,-82,-83,-84,-85,-86,97,97,97,97,97,-28,97,-66,-67,-68,-69,-70,97,97,97,97,-91,-30,97,97,97,97,97,]),'SUMA':([60,61,62,63,64,72,73,74,75,76,77,78,82,83,85,88,92,93,115,116,117,118,119,120,121,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,157,159,160,161,162,163,173,178,179,180,185,194,196,207,215,216,217,],[98,-7,-62,-63,-64,-91,-56,-60,-61,-88,-89,-90,98,98,98,98,98,98,98,98,-30,98,98,98,-29,-65,98,98,98,-71,-72,-73,-74,-75,-76,98,98,98,98,98,98,98,98,98,98,98,-28,98,-66,-67,-68,-69,-70,98,98,98,98,-91,-30,98,98,98,98,98,]),'MULTIPLICACION':([60,61,62,63,64,72,73,74,75,76,77,78,82,83,85,88,92,93,115,116,117,118,119,120,121,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,157,159,160,161,162,163,173,178,179,180,185,194,196,207,215,216,217,],[100,-7,-62,-63,-64,-91,-56,-60,-61,-88,-89,-90,100,100,100,100,100,100,100,100,-30,100,100,100,-29,-65,100,100,100,100,100,-73,-74,-75,-76,100,100,100,100,100,100,100,100,100,100,100,-28,100,-66,-67,-68,-69,-70,100,100,100,100,-91,-30,100,100,100,100,100,]),'DIVISION':([60,61,62,63,64,72,73,74,75,76,77,78,82,83,85,88,92,93,115,116,117,118,119,120,121,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,157,159,160,161,162,163,173,178,179,180,185,194,196,207,215,216,217,],[101,-7,-62,-63,-64,-91,-56,-60,-61,-88,-89,-90,101,101,101,101,101,101,101,101,-30,101,101,101,-29,-65,101,101,101,101,101,-73,-74,-75,-76,101,101,101,101,101,101,101,101,101,101,101,-28,101,-66,-67,-68,-69,-70,101,101,101,101,-91,-30,101,101,101,101,101,]),'POTENCIA':([60,61,62,63,64,72,73,74,75,76,77,78,82,83,85,88,92,93,115,116,117,118,119,120,121,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,157,159,160,161,162,163,173,178,179,180,185,194,196,207,215,216,217,],[102,-7,-62,-63,-64,-91,-56,-60,-61,-88,-89,-90,102,102,102,102,102,102,102,102,-30,102,102,102,-29,-65,102,102,102,102,102,102,102,None,None,102,102,102,102,102,102,102,102,102,102,102,-28,102,-66,-67,-68,-69,-70,102,102,102,102,-91,-30,102,102,102,102,102,]),'MODULO':([60,61,62,63,64,72,73,74,75,76,77,78,82,83,85,88,92,93,115,116,117,118,119,120,121,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,157,159,160,161,162,163,173,178,179,180,185,194,196,207,215,216,217,],[103,-7,-62,-63,-64,-91,-56,-60,-61,-88,-89,-90,103,103,103,103,103,103,103,103,-30,103,103,103,-29,-65,103,103,103,103,103,103,103,None,None,103,103,103,103,103,103,103,103,103,103,103,-28,103,-66,-67,-68,-69,-70,103,103,103,103,-91,-30,103,103,103,103,103,]),'IGUALACION':([60,61,62,63,64,72,73,74,75,76,77,78,82,83,85,88,92,93,115,116,117,118,119,120,121,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,157,159,160,161,162,163,173,178,179,180,185,194,196,207,215,216,217,],[104,-7,-62,-63,-64,-91,-56,-60,-61,-88,-89,-90,104,104,104,104,104,104,104,104,-30,104,104,104,-29,-65,104,104,104,-71,-72,-73,-74,-75,-76,-81,-82,-83,-84,-85,-86,104,104,104,104,104,-28,104,-66,-67,-68,-69,-70,104,104,104,104,-91,-30,104,104,104,104,104,]),'DIFERENCIACION':([60,61,62,63,64,72,73,74,75,76,77,78,82,83,85,88,92,93,115,116,117,118,119,120,121,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,157,159,160,161,162,163,173,178,179,180,185,194,196,207,215,216,217,],[105,-7,-62,-63,-64,-91,-56,-60,-61,-88,-89,-90,105,105,105,105,105,105,105,105,-30,105,105,105,-29,-65,105,105,105,-71,-72,-73,-74,-75,-76,-81,-82,-83,-84,-85,-86,105,105,105,105,105,-28,105,-66,-67,-68,-69,-70,105,105,105,105,-91,-30,105,105,105,105,105,]),'MENOR':([60,61,62,63,64,72,73,74,75,76,77,78,82,83,85,88,92,93,115,116,117,118,119,120,121,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,157,159,160,161,162,163,173,178,179,180,185,194,196,207,215,216,217,],[106,-7,-62,-63,-64,-91,-56,-60,-61,-88,-89,-90,106,106,106,106,106,106,106,106,-30,106,106,106,-29,-65,106,106,106,-71,-72,-73,-74,-75,-76,-81,-82,-83,-84,-85,-86,106,106,106,106,106,-28,106,-66,-67,-68,-69,-70,106,106,106,106,-91,-30,106,106,106,106,106,]),'MAYOR':([60,61,62,63,64,72,73,74,75,76,77,78,82,83,85,88,92,93,115,116,117,118,119,120,121,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,157,159,160,161,162,163,173,178,179,180,185,194,196,207,215,216,217,],[107,-7,-62,-63,-64,-91,-56,-60,-61,-88,-89,-90,107,107,107,107,107,107,107,107,-30,107,107,107,-29,-65,107,107,107,-71,-72,-73,-74,-75,-76,-81,-82,-83,-84,-85,-86,107,107,107,107,107,-28,107,-66,-67,-68,-69,-70,107,107,107,107,-91,-30,107,107,107,107,107,]),'MENOR_IGUAL':([60,61,62,63,64,72,73,74,75,76,77,78,82,83,85,88,92,93,115,116,117,118,119,120,121,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,157,159,160,161,162,163,173,178,179,180,185,194,196,207,215,216,217,],[108,-7,-62,-63,-64,-91,-56,-60,-61,-88,-89,-90,108,108,108,108,108,108,108,108,-30,108,108,108,-29,-65,108,108,108,-71,-72,-73,-74,-75,-76,-81,-82,-83,-84,-85,-86,108,108,108,108,108,-28,108,-66,-67,-68,-69,-70,108,108,108,108,-91,-30,108,108,108,108,108,]),'MAYOR_IGUAL':([60,61,62,63,64,72,73,74,75,76,77,78,82,83,85,88,92,93,115,116,117,118,119,120,121,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,157,159,160,161,162,163,173,178,179,180,185,194,196,207,215,216,217,],[109,-7,-62,-63,-64,-91,-56,-60,-61,-88,-89,-90,109,109,109,109,109,109,109,109,-30,109,109,109,-29,-65,109,109,109,-71,-72,-73,-74,-75,-76,-81,-82,-83,-84,-85,-86,109,109,109,109,109,-28,109,-66,-67,-68,-69,-70,109,109,109,109,-91,-30,109,109,109,109,109,]),'COMA':([61,62,63,64,72,73,74,75,76,77,78,115,116,117,121,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,151,159,160,161,162,163,172,173,196,202,206,207,212,217,218,221,],[-7,-62,-63,-64,-91,-56,-60,-61,-88,-89,-90,-80,-87,-30,-29,-65,-77,-78,-79,-71,-72,-73,-74,-75,-76,-81,-82,-83,-84,-85,-86,-28,-66,-67,-68,-69,-70,188,-22,-21,208,213,-26,-24,-25,213,-23,]),'DOS_PUNTOS':([61,62,63,64,72,73,74,75,76,77,78,115,116,117,121,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,151,159,160,161,162,163,177,178,],[-7,-62,-63,-64,-91,-56,-60,-61,-88,-89,-90,-80,-87,-30,-29,-65,-77,-78,-79,-71,-72,-73,-74,-75,-76,-81,-82,-83,-84,-85,-86,-28,-66,-67,-68,-69,-70,190,191,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ini':([0,],[1,]),'instrucciones':([0,56,86,153,158,190,191,200,],[2,89,124,165,171,197,198,205,]),'instruccion':([0,2,56,86,89,124,153,158,165,171,190,191,197,198,200,205,],[3,34,3,3,34,34,3,3,34,34,3,3,34,34,3,34,]),'instruccion_println':([0,2,56,86,89,124,153,158,165,171,190,191,197,198,200,205,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'declaracion_variable':([0,2,56,57,86,89,124,153,158,165,171,190,191,197,198,200,205,],[6,6,6,90,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'asignacion_variable':([0,2,56,86,89,124,153,158,165,170,171,190,191,197,198,200,205,],[7,7,7,7,7,7,7,7,7,184,7,7,7,7,7,7,7,]),'estructura_control':([0,2,56,86,89,124,153,158,165,171,190,191,197,198,200,205,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'incremento':([0,2,56,86,89,124,153,158,165,170,171,190,191,197,198,200,205,],[9,9,9,9,9,9,9,9,9,182,9,9,9,9,9,9,9,]),'decremento':([0,2,56,86,89,124,153,158,165,170,171,190,191,197,198,200,205,],[10,10,10,10,10,10,10,10,10,183,10,10,10,10,10,10,10,]),'declaracion_vector':([0,2,56,86,89,124,153,158,165,171,190,191,197,198,200,205,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'tipo':([0,2,52,56,57,86,89,124,153,158,165,171,190,191,197,198,200,205,],[15,15,84,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'instruccion_while':([0,2,56,86,89,124,153,158,165,171,190,191,197,198,200,205,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'instruccion_if':([0,2,54,56,86,89,124,153,158,165,171,190,191,197,198,200,205,],[18,18,87,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'instruccion_switch':([0,2,56,86,89,124,153,158,165,171,190,191,197,198,200,205,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'instruccion_dowhile':([0,2,56,86,89,124,153,158,165,171,190,191,197,198,200,205,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'instruccion_for':([0,2,56,86,89,124,153,158,165,171,190,191,197,198,200,205,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'base_if':([0,2,54,56,86,89,124,153,158,165,171,190,191,197,198,200,205,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'lista_indices':([16,72,185,],[47,117,194,]),'expresion':([44,48,51,53,55,58,59,70,71,79,80,81,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,127,164,168,169,170,188,201,209,210,213,214,],[60,82,83,85,88,92,93,115,116,118,119,120,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,157,173,178,179,180,196,207,215,216,217,207,]),'aritmetica':([44,48,51,53,55,58,59,70,71,79,80,81,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,127,164,168,169,170,188,201,209,210,213,214,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'literal':([44,48,51,53,55,58,59,70,71,79,80,81,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,127,164,168,169,170,188,201,209,210,213,214,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'relacional':([44,48,51,53,55,58,59,70,71,79,80,81,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,127,164,168,169,170,188,201,209,210,213,214,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'lista_case':([155,],[166,]),'case_unico':([155,166,],[167,176,]),'lista_dimensiones':([164,],[172,]),'default_opcional':([166,],[175,]),'actualizacion':([170,],[181,]),'lista_valores_iniciales':([195,],[202,]),'lista_expresiones':([201,214,],[206,218,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ini","S'",1,None,None,None),
  ('ini -> instrucciones','ini',1,'p_inicio','parser.py',88),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','parser.py',95),
  ('instruccion -> error PYC','instruccion',2,'p_instruccion_error_print','parser.py',108),
  ('estructura_control -> error','estructura_control',1,'p_instruccion_error_estructura','parser.py',115),
  ('instrucciones -> instrucciones error','instrucciones',2,'p_instrucciones_error','parser.py',122),
  ('instrucciones -> error','instrucciones',1,'p_instrucciones_error','parser.py',123),
  ('expresion -> error','expresion',1,'p_expresion_error','parser.py',133),
  ('instrucciones -> <empty>','instrucciones',0,'p_instrucciones_empty','parser.py',139),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','parser.py',144),
  ('instruccion -> instruccion_println','instruccion',1,'p_instruccion','parser.py',153),
  ('instruccion -> declaracion_variable PYC','instruccion',2,'p_instruccion','parser.py',154),
  ('instruccion -> asignacion_variable PYC','instruccion',2,'p_instruccion','parser.py',155),
  ('instruccion -> estructura_control','instruccion',1,'p_instruccion','parser.py',156),
  ('instruccion -> incremento PYC','instruccion',2,'p_instruccion','parser.py',157),
  ('instruccion -> decremento PYC','instruccion',2,'p_instruccion','parser.py',158),
  ('instruccion -> declaracion_vector PYC','instruccion',2,'p_instruccion','parser.py',159),
  ('declaracion_vector -> VECTOR CORCHETE_ABRE tipo CORCHETE_CIERRA ID PARA lista_dimensiones PARC','declaracion_vector',8,'p_declaracion_vector','parser.py',172),
  ('declaracion_vector -> VECTOR CORCHETE_ABRE tipo CORCHETE_CIERRA ID PARA lista_dimensiones PARC IGUAL lista_valores_iniciales','declaracion_vector',10,'p_declaracion_vector','parser.py',173),
  ('declaracion_vector -> VECTOR CORCHETE_ABRE tipo CORCHETE_CIERRA ID PARA lista_dimensiones PARC IGUAL SORT PARA expresion PARC','declaracion_vector',13,'p_declaracion_vector_con_funcion','parser.py',199),
  ('declaracion_vector -> VECTOR CORCHETE_ABRE tipo CORCHETE_CIERRA ID PARA lista_dimensiones PARC IGUAL SHUFFLE PARA expresion PARC','declaracion_vector',13,'p_declaracion_vector_con_funcion','parser.py',200),
  ('lista_dimensiones -> lista_dimensiones COMA expresion','lista_dimensiones',3,'p_lista_dimensiones','parser.py',223),
  ('lista_dimensiones -> expresion','lista_dimensiones',1,'p_lista_dimensiones','parser.py',224),
  ('lista_valores_iniciales -> lista_valores_iniciales COMA CORCHETE_ABRE lista_expresiones CORCHETE_CIERRA','lista_valores_iniciales',5,'p_lista_valores_iniciales','parser.py',233),
  ('lista_valores_iniciales -> CORCHETE_ABRE lista_expresiones CORCHETE_CIERRA','lista_valores_iniciales',3,'p_lista_valores_iniciales','parser.py',234),
  ('lista_expresiones -> lista_expresiones COMA expresion','lista_expresiones',3,'p_lista_expresiones','parser.py',243),
  ('lista_expresiones -> expresion','lista_expresiones',1,'p_lista_expresiones','parser.py',244),
  ('asignacion_variable -> ID lista_indices IGUAL expresion','asignacion_variable',4,'p_asignacion_vector','parser.py',253),
  ('lista_indices -> lista_indices CORCHETE_ABRE expresion CORCHETE_CIERRA','lista_indices',4,'p_lista_indices','parser.py',260),
  ('lista_indices -> CORCHETE_ABRE expresion CORCHETE_CIERRA','lista_indices',3,'p_lista_indices','parser.py',261),
  ('literal -> ID lista_indices','literal',2,'p_acceso_vector','parser.py',270),
  ('estructura_control -> instruccion_while','estructura_control',1,'p_estructura_control','parser.py',277),
  ('estructura_control -> instruccion_if','estructura_control',1,'p_estructura_control','parser.py',278),
  ('estructura_control -> instruccion_switch','estructura_control',1,'p_estructura_control','parser.py',279),
  ('estructura_control -> instruccion_dowhile','estructura_control',1,'p_estructura_control','parser.py',280),
  ('estructura_control -> instruccion_for','estructura_control',1,'p_estructura_control','parser.py',281),
  ('instruccion_while -> WHILE PARA expresion PARC LLA instrucciones LLC','instruccion_while',7,'p_instruccion_while','parser.py',288),
  ('instruccion_for -> FOR PARA declaracion_variable PYC expresion PYC actualizacion PARC LLA instrucciones LLC','instruccion_for',11,'p_instruccion_for','parser.py',300),
  ('actualizacion -> incremento','actualizacion',1,'p_actualizacion','parser.py',320),
  ('actualizacion -> decremento','actualizacion',1,'p_actualizacion','parser.py',321),
  ('actualizacion -> expresion','actualizacion',1,'p_actualizacion','parser.py',322),
  ('actualizacion -> asignacion_variable','actualizacion',1,'p_actualizacion','parser.py',323),
  ('instruccion_switch -> SWITCH PARA expresion PARC LLA lista_case default_opcional LLC','instruccion_switch',8,'p_instruccion_switch','parser.py',329),
  ('instruccion_dowhile -> DO LLA instrucciones LLC WHILE PARA expresion PARC PYC','instruccion_dowhile',9,'p_instruccion_dowhile','parser.py',343),
  ('lista_case -> lista_case case_unico','lista_case',2,'p_lista_case','parser.py',357),
  ('lista_case -> case_unico','lista_case',1,'p_lista_case','parser.py',358),
  ('case_unico -> CASE expresion DOS_PUNTOS instrucciones','case_unico',4,'p_case_unico','parser.py',368),
  ('default_opcional -> DEFAULT DOS_PUNTOS instrucciones','default_opcional',3,'p_default_opcional','parser.py',382),
  ('default_opcional -> <empty>','default_opcional',0,'p_default_opcional','parser.py',383),
  ('instruccion_if -> base_if','instruccion_if',1,'p_instruccion_if','parser.py',391),
  ('instruccion_if -> base_if ELSE LLA instrucciones LLC','instruccion_if',5,'p_instruccion_if','parser.py',392),
  ('instruccion_if -> base_if ELSE instruccion_if','instruccion_if',3,'p_instruccion_if','parser.py',393),
  ('base_if -> IF PARA expresion PARC LLA instrucciones LLC','base_if',7,'p_base_if','parser.py',419),
  ('incremento -> ID INCREMENTO','incremento',2,'p_incremento','parser.py',434),
  ('decremento -> ID DECREMENTO','decremento',2,'p_decremento','parser.py',455),
  ('instruccion_println -> PRINTLN PARA expresion PARC PYC','instruccion_println',5,'p_instruccion_println','parser.py',476),
  ('literal -> CARACTER','literal',1,'p_caracter','parser.py',482),
  ('declaracion_variable -> tipo ID IGUAL expresion','declaracion_variable',4,'p_declaracion_variable','parser.py',490),
  ('declaracion_variable -> tipo ID','declaracion_variable',2,'p_declaracion_variable','parser.py',491),
  ('asignacion_variable -> ID IGUAL expresion','asignacion_variable',3,'p_asignacion_variable','parser.py',504),
  ('literal -> TRUE','literal',1,'p_literal_booleano','parser.py',511),
  ('literal -> FALSE','literal',1,'p_literal_booleano','parser.py',512),
  ('expresion -> aritmetica','expresion',1,'p_expresion','parser.py',520),
  ('expresion -> literal','expresion',1,'p_expresion','parser.py',521),
  ('expresion -> relacional','expresion',1,'p_expresion','parser.py',522),
  ('expresion -> PARA expresion PARC','expresion',3,'p_expresion_parentesis','parser.py',528),
  ('expresion -> SENO PARA expresion PARC','expresion',4,'p_expresion_nativa','parser.py',533),
  ('expresion -> COSENO PARA expresion PARC','expresion',4,'p_expresion_nativa','parser.py',534),
  ('expresion -> INV PARA expresion PARC','expresion',4,'p_expresion_nativa','parser.py',535),
  ('expresion -> SHUFFLE PARA expresion PARC','expresion',4,'p_expresion_nativa','parser.py',536),
  ('expresion -> SORT PARA expresion PARC','expresion',4,'p_expresion_nativa','parser.py',537),
  ('aritmetica -> expresion SUMA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',574),
  ('aritmetica -> expresion RESTA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',575),
  ('aritmetica -> expresion MULTIPLICACION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',576),
  ('aritmetica -> expresion DIVISION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',577),
  ('aritmetica -> expresion POTENCIA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',578),
  ('aritmetica -> expresion MODULO expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',579),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica_binaria','parser.py',597),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica_binaria','parser.py',598),
  ('expresion -> expresion XOR expresion','expresion',3,'p_expresion_logica_binaria','parser.py',599),
  ('expresion -> RESTA expresion','expresion',2,'p_expresion_umenos','parser.py',604),
  ('relacional -> expresion IGUALACION expresion','relacional',3,'p_relacional','parser.py',616),
  ('relacional -> expresion DIFERENCIACION expresion','relacional',3,'p_relacional','parser.py',617),
  ('relacional -> expresion MENOR expresion','relacional',3,'p_relacional','parser.py',618),
  ('relacional -> expresion MAYOR expresion','relacional',3,'p_relacional','parser.py',619),
  ('relacional -> expresion MENOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',620),
  ('relacional -> expresion MAYOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',621),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_not','parser.py',639),
  ('literal -> ENTERO','literal',1,'p_entero','parser.py',645),
  ('literal -> CADENAS','literal',1,'p_cadena','parser.py',652),
  ('literal -> DECIMAL','literal',1,'p_decimal','parser.py',658),
  ('literal -> ID','literal',1,'p_id','parser.py',664),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',670),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',671),
  ('tipo -> STR','tipo',1,'p_tipo','parser.py',672),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',673),
  ('tipo -> BOOL','tipo',1,'p_tipo','parser.py',674),
  ('instruccion -> BREAK PYC','instruccion',2,'p_instruccion_break','parser.py',693),
  ('instruccion -> CONTINUE PYC','instruccion',2,'p_instruccion_continue','parser.py',697),
  ('declaracion_variable -> ID ID','declaracion_variable',2,'p_declaracion_variable_error','parser.py',702),
]
