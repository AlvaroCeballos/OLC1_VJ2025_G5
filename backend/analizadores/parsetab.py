
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftXORleftANDrightNOTleftIGUALACIONMENORMAYORMENOR_IGUALMAYOR_IGUALDIFERENCIACIONleftSUMARESTAleftMULTIPLICACIONDIVISIONnonassocPOTENCIAMODULOrightUMENOSAND ARROBA BOOLEAN BREAK CADENAS CARACTER CASE CHAR COMA COMENTARIO_MULTILINEA COMENTARIO_UNA_LINEA CONTINUE DECIMAL DECREMENTO DEFAULT DIFERENCIACION DIVISION DO DO_WHILE ELSE ENTERO FALSE FLOAT FOR ID IDENTIFICADOR IF IGUAL IGUALACION INCREMENTO INT LLA LLC MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NOT OR PARA PARC POTENCIA PRINT PRINTLN PYC RESTA RETURN STR SUMA SWITCH TRUE UMENOS VAR WHILE XOR\n    ini : instrucciones\n    \n    instrucciones : instrucciones instruccion\n    \n    instrucciones : instruccion\n    \n    instruccion : instruccion_print PYC\n                | declaracion_variable PYC\n                | asignacion_variable PYC\n                | estructura_control\n                | incremento PYC\n    \n    estructura_control : instruccion_while\n    \n    instruccion_while : WHILE PARA expresion PARC LLA instrucciones LLC\n    \n    incremento : ID INCREMENTO\n    \n    instruccion_print : tipo_print PARA expresion PARC\n    \n    literal : CARACTER\n    \n    tipo_print : PRINT\n               | PRINTLN\n    \n    declaracion_variable : tipo ID IGUAL expresion\n                        | tipo ID\n    \n    asignacion_variable : ID IGUAL expresion\n    \n    literal : TRUE\n            | FALSE\n    \n    expresion : aritmetica\n              | literal\n              | relacional\n\n    expresion : PARA expresion PARC\n    aritmetica : expresion SUMA expresion\n                | expresion RESTA expresion\n                | expresion MULTIPLICACION expresion\n                | expresion DIVISION expresion\n                | expresion POTENCIA expresion\n                | expresion MODULO expresion\n    \n    expresion : expresion OR expresion\n              | expresion AND expresion\n              | expresion XOR expresion\n    expresion : NOT expresion\n    relacional : expresion IGUALACION expresion\n               | expresion DIFERENCIACION expresion\n               | expresion MENOR expresion\n               | expresion MAYOR expresion\n               | expresion MENOR_IGUAL expresion\n               | expresion MAYOR_IGUAL expresion\n    \n    literal : ENTERO\n    \n    literal : CADENAS\n    \n    literal : DECIMAL\n    \n    literal : ID\n    \n    tipo : INT\n        | FLOAT\n        | STR\n        | CHAR\n        | BOOLEAN\n    '
    
_lr_action_items = {'ID':([0,2,3,7,10,12,15,16,17,18,19,21,22,23,24,25,26,28,30,31,36,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,83,84,85,],[11,11,-3,-7,27,-9,-45,-46,-47,-48,-49,-2,-4,-5,-6,-8,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,11,11,-10,]),'PRINT':([0,2,3,7,12,21,22,23,24,25,83,84,85,],[13,13,-3,-7,-9,-2,-4,-5,-6,-8,13,13,-10,]),'PRINTLN':([0,2,3,7,12,21,22,23,24,25,83,84,85,],[14,14,-3,-7,-9,-2,-4,-5,-6,-8,14,14,-10,]),'INT':([0,2,3,7,12,21,22,23,24,25,83,84,85,],[15,15,-3,-7,-9,-2,-4,-5,-6,-8,15,15,-10,]),'FLOAT':([0,2,3,7,12,21,22,23,24,25,83,84,85,],[16,16,-3,-7,-9,-2,-4,-5,-6,-8,16,16,-10,]),'STR':([0,2,3,7,12,21,22,23,24,25,83,84,85,],[17,17,-3,-7,-9,-2,-4,-5,-6,-8,17,17,-10,]),'CHAR':([0,2,3,7,12,21,22,23,24,25,83,84,85,],[18,18,-3,-7,-9,-2,-4,-5,-6,-8,18,18,-10,]),'BOOLEAN':([0,2,3,7,12,21,22,23,24,25,83,84,85,],[19,19,-3,-7,-9,-2,-4,-5,-6,-8,19,19,-10,]),'WHILE':([0,2,3,7,12,21,22,23,24,25,83,84,85,],[20,20,-3,-7,-9,-2,-4,-5,-6,-8,20,20,-10,]),'$end':([1,2,3,7,12,21,22,23,24,25,85,],[0,-1,-3,-7,-9,-2,-4,-5,-6,-8,-10,]),'LLC':([3,7,12,21,22,23,24,25,84,85,],[-3,-7,-9,-2,-4,-5,-6,-8,85,-10,]),'PYC':([4,5,6,8,27,29,33,34,35,37,38,39,40,41,42,43,45,48,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,],[22,23,24,25,-17,-11,-21,-22,-23,-13,-19,-20,-41,-42,-43,-44,-18,-12,-34,-16,-24,-31,-32,-33,-25,-26,-27,-28,-29,-30,-35,-36,-37,-38,-39,-40,]),'PARA':([9,13,14,20,26,28,30,31,36,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[26,-14,-15,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'IGUAL':([11,27,],[28,44,]),'INCREMENTO':([11,],[29,]),'NOT':([26,28,30,31,36,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'CARACTER':([26,28,30,31,36,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'TRUE':([26,28,30,31,36,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'FALSE':([26,28,30,31,36,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'ENTERO':([26,28,30,31,36,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'CADENAS':([26,28,30,31,36,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'DECIMAL':([26,28,30,31,36,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'PARC':([32,33,34,35,37,38,39,40,41,42,43,46,47,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,],[48,-21,-22,-23,-13,-19,-20,-41,-42,-43,-44,66,67,-34,-24,-31,-32,-33,-25,-26,-27,-28,-29,-30,-35,-36,-37,-38,-39,-40,]),'OR':([32,33,34,35,37,38,39,40,41,42,43,45,46,47,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,],[49,-21,-22,-23,-13,-19,-20,-41,-42,-43,-44,49,49,49,-34,49,-24,-31,-32,-33,-25,-26,-27,-28,-29,-30,-35,-36,-37,-38,-39,-40,]),'AND':([32,33,34,35,37,38,39,40,41,42,43,45,46,47,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,],[50,-21,-22,-23,-13,-19,-20,-41,-42,-43,-44,50,50,50,-34,50,-24,50,-32,50,-25,-26,-27,-28,-29,-30,-35,-36,-37,-38,-39,-40,]),'XOR':([32,33,34,35,37,38,39,40,41,42,43,45,46,47,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,],[51,-21,-22,-23,-13,-19,-20,-41,-42,-43,-44,51,51,51,-34,51,-24,51,-32,-33,-25,-26,-27,-28,-29,-30,-35,-36,-37,-38,-39,-40,]),'SUMA':([32,33,34,35,37,38,39,40,41,42,43,45,46,47,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,],[52,-21,-22,-23,-13,-19,-20,-41,-42,-43,-44,52,52,52,52,52,-24,52,52,52,-25,-26,-27,-28,-29,-30,52,52,52,52,52,52,]),'RESTA':([32,33,34,35,37,38,39,40,41,42,43,45,46,47,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,],[53,-21,-22,-23,-13,-19,-20,-41,-42,-43,-44,53,53,53,53,53,-24,53,53,53,-25,-26,-27,-28,-29,-30,53,53,53,53,53,53,]),'MULTIPLICACION':([32,33,34,35,37,38,39,40,41,42,43,45,46,47,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,],[54,-21,-22,-23,-13,-19,-20,-41,-42,-43,-44,54,54,54,54,54,-24,54,54,54,54,54,-27,-28,-29,-30,54,54,54,54,54,54,]),'DIVISION':([32,33,34,35,37,38,39,40,41,42,43,45,46,47,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,],[55,-21,-22,-23,-13,-19,-20,-41,-42,-43,-44,55,55,55,55,55,-24,55,55,55,55,55,-27,-28,-29,-30,55,55,55,55,55,55,]),'POTENCIA':([32,33,34,35,37,38,39,40,41,42,43,45,46,47,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,],[56,-21,-22,-23,-13,-19,-20,-41,-42,-43,-44,56,56,56,56,56,-24,56,56,56,56,56,56,56,None,None,56,56,56,56,56,56,]),'MODULO':([32,33,34,35,37,38,39,40,41,42,43,45,46,47,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,],[57,-21,-22,-23,-13,-19,-20,-41,-42,-43,-44,57,57,57,57,57,-24,57,57,57,57,57,57,57,None,None,57,57,57,57,57,57,]),'IGUALACION':([32,33,34,35,37,38,39,40,41,42,43,45,46,47,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,],[58,-21,-22,-23,-13,-19,-20,-41,-42,-43,-44,58,58,58,58,58,-24,58,58,58,-25,-26,-27,-28,-29,-30,-35,-36,-37,-38,-39,-40,]),'DIFERENCIACION':([32,33,34,35,37,38,39,40,41,42,43,45,46,47,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,],[59,-21,-22,-23,-13,-19,-20,-41,-42,-43,-44,59,59,59,59,59,-24,59,59,59,-25,-26,-27,-28,-29,-30,-35,-36,-37,-38,-39,-40,]),'MENOR':([32,33,34,35,37,38,39,40,41,42,43,45,46,47,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,],[60,-21,-22,-23,-13,-19,-20,-41,-42,-43,-44,60,60,60,60,60,-24,60,60,60,-25,-26,-27,-28,-29,-30,-35,-36,-37,-38,-39,-40,]),'MAYOR':([32,33,34,35,37,38,39,40,41,42,43,45,46,47,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,],[61,-21,-22,-23,-13,-19,-20,-41,-42,-43,-44,61,61,61,61,61,-24,61,61,61,-25,-26,-27,-28,-29,-30,-35,-36,-37,-38,-39,-40,]),'MENOR_IGUAL':([32,33,34,35,37,38,39,40,41,42,43,45,46,47,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,],[62,-21,-22,-23,-13,-19,-20,-41,-42,-43,-44,62,62,62,62,62,-24,62,62,62,-25,-26,-27,-28,-29,-30,-35,-36,-37,-38,-39,-40,]),'MAYOR_IGUAL':([32,33,34,35,37,38,39,40,41,42,43,45,46,47,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,],[63,-21,-22,-23,-13,-19,-20,-41,-42,-43,-44,63,63,63,63,63,-24,63,63,63,-25,-26,-27,-28,-29,-30,-35,-36,-37,-38,-39,-40,]),'LLA':([66,],[83,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ini':([0,],[1,]),'instrucciones':([0,83,],[2,84,]),'instruccion':([0,2,83,84,],[3,21,3,21,]),'instruccion_print':([0,2,83,84,],[4,4,4,4,]),'declaracion_variable':([0,2,83,84,],[5,5,5,5,]),'asignacion_variable':([0,2,83,84,],[6,6,6,6,]),'estructura_control':([0,2,83,84,],[7,7,7,7,]),'incremento':([0,2,83,84,],[8,8,8,8,]),'tipo_print':([0,2,83,84,],[9,9,9,9,]),'tipo':([0,2,83,84,],[10,10,10,10,]),'instruccion_while':([0,2,83,84,],[12,12,12,12,]),'expresion':([26,28,30,31,36,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[32,45,46,47,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,]),'aritmetica':([26,28,30,31,36,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'literal':([26,28,30,31,36,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'relacional':([26,28,30,31,36,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ini","S'",1,None,None,None),
  ('ini -> instrucciones','ini',1,'p_inicio','parser.py',66),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','parser.py',73),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','parser.py',81),
  ('instruccion -> instruccion_print PYC','instruccion',2,'p_instruccion','parser.py',87),
  ('instruccion -> declaracion_variable PYC','instruccion',2,'p_instruccion','parser.py',88),
  ('instruccion -> asignacion_variable PYC','instruccion',2,'p_instruccion','parser.py',89),
  ('instruccion -> estructura_control','instruccion',1,'p_instruccion','parser.py',90),
  ('instruccion -> incremento PYC','instruccion',2,'p_instruccion','parser.py',91),
  ('estructura_control -> instruccion_while','estructura_control',1,'p_estructura_control','parser.py',102),
  ('instruccion_while -> WHILE PARA expresion PARC LLA instrucciones LLC','instruccion_while',7,'p_instruccion_while','parser.py',109),
  ('incremento -> ID INCREMENTO','incremento',2,'p_incremento','parser.py',122),
  ('instruccion_print -> tipo_print PARA expresion PARC','instruccion_print',4,'p_instruccion_print','parser.py',143),
  ('literal -> CARACTER','literal',1,'p_caracter','parser.py',150),
  ('tipo_print -> PRINT','tipo_print',1,'p_tipo_print','parser.py',156),
  ('tipo_print -> PRINTLN','tipo_print',1,'p_tipo_print','parser.py',157),
  ('declaracion_variable -> tipo ID IGUAL expresion','declaracion_variable',4,'p_declaracion_variable','parser.py',163),
  ('declaracion_variable -> tipo ID','declaracion_variable',2,'p_declaracion_variable','parser.py',164),
  ('asignacion_variable -> ID IGUAL expresion','asignacion_variable',3,'p_asignacion_variable','parser.py',177),
  ('literal -> TRUE','literal',1,'p_literal_booleano','parser.py',184),
  ('literal -> FALSE','literal',1,'p_literal_booleano','parser.py',185),
  ('expresion -> aritmetica','expresion',1,'p_expresion','parser.py',193),
  ('expresion -> literal','expresion',1,'p_expresion','parser.py',194),
  ('expresion -> relacional','expresion',1,'p_expresion','parser.py',195),
  ('expresion -> PARA expresion PARC','expresion',3,'p_expresion_parentesis','parser.py',201),
  ('aritmetica -> expresion SUMA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',206),
  ('aritmetica -> expresion RESTA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',207),
  ('aritmetica -> expresion MULTIPLICACION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',208),
  ('aritmetica -> expresion DIVISION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',209),
  ('aritmetica -> expresion POTENCIA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',210),
  ('aritmetica -> expresion MODULO expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',211),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica_binaria','parser.py',229),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica_binaria','parser.py',230),
  ('expresion -> expresion XOR expresion','expresion',3,'p_expresion_logica_binaria','parser.py',231),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_logica_unaria','parser.py',236),
  ('relacional -> expresion IGUALACION expresion','relacional',3,'p_relacional','parser.py',241),
  ('relacional -> expresion DIFERENCIACION expresion','relacional',3,'p_relacional','parser.py',242),
  ('relacional -> expresion MENOR expresion','relacional',3,'p_relacional','parser.py',243),
  ('relacional -> expresion MAYOR expresion','relacional',3,'p_relacional','parser.py',244),
  ('relacional -> expresion MENOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',245),
  ('relacional -> expresion MAYOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',246),
  ('literal -> ENTERO','literal',1,'p_entero','parser.py',263),
  ('literal -> CADENAS','literal',1,'p_cadena','parser.py',270),
  ('literal -> DECIMAL','literal',1,'p_decimal','parser.py',276),
  ('literal -> ID','literal',1,'p_id','parser.py',282),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',288),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',289),
  ('tipo -> STR','tipo',1,'p_tipo','parser.py',290),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',291),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','parser.py',292),
]
