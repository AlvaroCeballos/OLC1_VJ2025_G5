
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightUMENOSleftORleftXORleftANDrightNOTleftIGUALACIONMENORMAYORMENOR_IGUALMAYOR_IGUALDIFERENCIACIONleftSUMARESTAleftMULTIPLICACIONDIVISIONnonassocPOTENCIAMODULOAND ARROBA BOOL BREAK CADENAS CARACTER CASE CHAR COMA COMENTARIO_MULTILINEA COMENTARIO_UNA_LINEA CONTINUE DECIMAL DECREMENTO DEFAULT DIFERENCIACION DIVISION DO DOS_PUNTOS ELSE ENTERO FALSE FLOAT FOR ID IDENTIFICADOR IF IGUAL IGUALACION INCREMENTO INT LLA LLC MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NOT OR PARA PARC POTENCIA PRINT PRINTLN PYC RESTA RETURN STR SUMA SWITCH TRUE UMENOS VAR WHILE XOR\n    ini : instrucciones\n    \n    instrucciones : instrucciones instruccion\n    instrucciones : \n    instrucciones : instruccion\n    \n    instruccion : instruccion_print PYC\n                | declaracion_variable PYC\n                | asignacion_variable PYC\n                | estructura_control\n                | incremento PYC\n                | decremento PYC\n    \n    estructura_control : instruccion_while\n                       | instruccion_if\n                       | instruccion_switch\n                       | instruccion_dowhile\n                       | instruccion_for\n    \n    instruccion_while : WHILE PARA expresion PARC LLA instrucciones LLC\n    \n    instruccion_for : FOR PARA declaracion_variable PYC expresion PYC actualizacion PARC LLA instrucciones LLC\n    \n    actualizacion : incremento\n                   | decremento\n                   | expresion\n                   | asignacion_variable\n    \n    instruccion_switch : SWITCH PARA expresion PARC LLA lista_case default_opcional LLC\n    \n    instruccion_dowhile : DO LLA instrucciones LLC WHILE PARA expresion PARC PYC\n    \n    lista_case : lista_case case_unico\n                | case_unico\n\n    \n    case_unico : CASE expresion DOS_PUNTOS instrucciones\n    \n    default_opcional : DEFAULT DOS_PUNTOS instrucciones\n                     | \n     \n    instruccion_if : base_if\n                   | base_if ELSE LLA instrucciones LLC\n                   | base_if ELSE instruccion_if                 \n     \n    base_if : IF PARA expresion PARC LLA instrucciones LLC\n    \n    incremento : ID INCREMENTO\n    \n    decremento : ID DECREMENTO\n    \n    instruccion_print : tipo_print PARA expresion PARC\n    \n    literal : CARACTER\n    \n    tipo_print : PRINT\n               | PRINTLN\n    \n    declaracion_variable : tipo ID IGUAL expresion\n                        | tipo ID\n    \n    asignacion_variable : ID IGUAL expresion\n    \n    literal : TRUE\n            | FALSE\n    \n    expresion : aritmetica\n              | literal\n              | relacional\n\n    expresion : PARA expresion PARC\n    aritmetica : expresion SUMA expresion\n                | expresion RESTA expresion\n                | expresion MULTIPLICACION expresion\n                | expresion DIVISION expresion\n                | expresion POTENCIA expresion\n                | expresion MODULO expresion\n    \n    expresion : expresion OR expresion\n              | expresion AND expresion\n              | expresion XOR expresion\n    expresion : RESTA expresion %prec UMENOS\n    relacional : expresion IGUALACION expresion\n               | expresion DIFERENCIACION expresion\n               | expresion MENOR expresion\n               | expresion MAYOR expresion\n               | expresion MENOR_IGUAL expresion\n               | expresion MAYOR_IGUAL expresion\n    \n    literal : ENTERO\n    \n    literal : CADENAS\n    \n    literal : DECIMAL\n    \n    literal : ID\n    \n    tipo : INT\n        | FLOAT\n        | STR\n        | CHAR\n        | BOOL\n    instruccion : BREAK PYCinstruccion : CONTINUE PYC'
    
_lr_action_items = {'BREAK':([0,2,3,7,15,16,17,18,19,28,33,34,35,36,37,38,39,40,49,68,69,71,94,115,116,120,121,127,128,140,141,142,143,146,147,148,149,150,151,],[10,10,-4,-8,-11,-12,-13,-14,-15,-29,-2,-5,-6,-7,-9,-10,-73,-74,10,10,-31,10,10,10,-30,10,10,10,-16,-32,-22,10,10,10,10,-23,10,10,-17,]),'CONTINUE':([0,2,3,7,15,16,17,18,19,28,33,34,35,36,37,38,39,40,49,68,69,71,94,115,116,120,121,127,128,140,141,142,143,146,147,148,149,150,151,],[11,11,-4,-8,-11,-12,-13,-14,-15,-29,-2,-5,-6,-7,-9,-10,-73,-74,11,11,-31,11,11,11,-30,11,11,11,-16,-32,-22,11,11,11,11,-23,11,11,-17,]),'ID':([0,2,3,7,13,15,16,17,18,19,22,23,24,25,26,28,33,34,35,36,37,38,39,40,41,43,46,48,49,51,52,57,65,68,69,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,115,116,120,121,124,125,126,127,128,140,141,142,143,146,147,148,149,150,151,],[14,14,-4,-8,42,-11,-12,-13,-14,-15,-68,-69,-70,-71,-72,-29,-2,-5,-6,-7,-9,-10,-73,-74,64,64,64,64,14,64,64,64,64,14,-31,14,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,14,64,14,-30,14,14,64,64,139,14,-16,-32,-22,14,14,14,14,-23,14,14,-17,]),'PRINT':([0,2,3,7,15,16,17,18,19,28,33,34,35,36,37,38,39,40,49,68,69,71,94,115,116,120,121,127,128,140,141,142,143,146,147,148,149,150,151,],[20,20,-4,-8,-11,-12,-13,-14,-15,-29,-2,-5,-6,-7,-9,-10,-73,-74,20,20,-31,20,20,20,-30,20,20,20,-16,-32,-22,20,20,20,20,-23,20,20,-17,]),'PRINTLN':([0,2,3,7,15,16,17,18,19,28,33,34,35,36,37,38,39,40,49,68,69,71,94,115,116,120,121,127,128,140,141,142,143,146,147,148,149,150,151,],[21,21,-4,-8,-11,-12,-13,-14,-15,-29,-2,-5,-6,-7,-9,-10,-73,-74,21,21,-31,21,21,21,-30,21,21,21,-16,-32,-22,21,21,21,21,-23,21,21,-17,]),'INT':([0,2,3,7,15,16,17,18,19,28,33,34,35,36,37,38,39,40,49,50,68,69,71,94,115,116,120,121,127,128,140,141,142,143,146,147,148,149,150,151,],[22,22,-4,-8,-11,-12,-13,-14,-15,-29,-2,-5,-6,-7,-9,-10,-73,-74,22,22,22,-31,22,22,22,-30,22,22,22,-16,-32,-22,22,22,22,22,-23,22,22,-17,]),'FLOAT':([0,2,3,7,15,16,17,18,19,28,33,34,35,36,37,38,39,40,49,50,68,69,71,94,115,116,120,121,127,128,140,141,142,143,146,147,148,149,150,151,],[23,23,-4,-8,-11,-12,-13,-14,-15,-29,-2,-5,-6,-7,-9,-10,-73,-74,23,23,23,-31,23,23,23,-30,23,23,23,-16,-32,-22,23,23,23,23,-23,23,23,-17,]),'STR':([0,2,3,7,15,16,17,18,19,28,33,34,35,36,37,38,39,40,49,50,68,69,71,94,115,116,120,121,127,128,140,141,142,143,146,147,148,149,150,151,],[24,24,-4,-8,-11,-12,-13,-14,-15,-29,-2,-5,-6,-7,-9,-10,-73,-74,24,24,24,-31,24,24,24,-30,24,24,24,-16,-32,-22,24,24,24,24,-23,24,24,-17,]),'CHAR':([0,2,3,7,15,16,17,18,19,28,33,34,35,36,37,38,39,40,49,50,68,69,71,94,115,116,120,121,127,128,140,141,142,143,146,147,148,149,150,151,],[25,25,-4,-8,-11,-12,-13,-14,-15,-29,-2,-5,-6,-7,-9,-10,-73,-74,25,25,25,-31,25,25,25,-30,25,25,25,-16,-32,-22,25,25,25,25,-23,25,25,-17,]),'BOOL':([0,2,3,7,15,16,17,18,19,28,33,34,35,36,37,38,39,40,49,50,68,69,71,94,115,116,120,121,127,128,140,141,142,143,146,147,148,149,150,151,],[26,26,-4,-8,-11,-12,-13,-14,-15,-29,-2,-5,-6,-7,-9,-10,-73,-74,26,26,26,-31,26,26,26,-30,26,26,26,-16,-32,-22,26,26,26,26,-23,26,26,-17,]),'WHILE':([0,2,3,7,15,16,17,18,19,28,33,34,35,36,37,38,39,40,49,68,69,71,94,96,115,116,120,121,127,128,140,141,142,143,146,147,148,149,150,151,],[27,27,-4,-8,-11,-12,-13,-14,-15,-29,-2,-5,-6,-7,-9,-10,-73,-74,27,27,-31,27,27,118,27,-30,27,27,27,-16,-32,-22,27,27,27,27,-23,27,27,-17,]),'SWITCH':([0,2,3,7,15,16,17,18,19,28,33,34,35,36,37,38,39,40,49,68,69,71,94,115,116,120,121,127,128,140,141,142,143,146,147,148,149,150,151,],[29,29,-4,-8,-11,-12,-13,-14,-15,-29,-2,-5,-6,-7,-9,-10,-73,-74,29,29,-31,29,29,29,-30,29,29,29,-16,-32,-22,29,29,29,29,-23,29,29,-17,]),'DO':([0,2,3,7,15,16,17,18,19,28,33,34,35,36,37,38,39,40,49,68,69,71,94,115,116,120,121,127,128,140,141,142,143,146,147,148,149,150,151,],[30,30,-4,-8,-11,-12,-13,-14,-15,-29,-2,-5,-6,-7,-9,-10,-73,-74,30,30,-31,30,30,30,-30,30,30,30,-16,-32,-22,30,30,30,30,-23,30,30,-17,]),'FOR':([0,2,3,7,15,16,17,18,19,28,33,34,35,36,37,38,39,40,49,68,69,71,94,115,116,120,121,127,128,140,141,142,143,146,147,148,149,150,151,],[31,31,-4,-8,-11,-12,-13,-14,-15,-29,-2,-5,-6,-7,-9,-10,-73,-74,31,31,-31,31,31,31,-30,31,31,31,-16,-32,-22,31,31,31,31,-23,31,31,-17,]),'IF':([0,2,3,7,15,16,17,18,19,28,33,34,35,36,37,38,39,40,47,49,68,69,71,94,115,116,120,121,127,128,140,141,142,143,146,147,148,149,150,151,],[32,32,-4,-8,-11,-12,-13,-14,-15,-29,-2,-5,-6,-7,-9,-10,-73,-74,32,32,32,-31,32,32,32,-30,32,32,32,-16,-32,-22,32,32,32,32,-23,32,32,-17,]),'$end':([0,1,2,3,7,15,16,17,18,19,28,33,34,35,36,37,38,39,40,69,116,128,140,141,148,151,],[-3,0,-1,-4,-8,-11,-12,-13,-14,-15,-29,-2,-5,-6,-7,-9,-10,-73,-74,-31,-30,-16,-32,-22,-23,-17,]),'LLC':([3,7,15,16,17,18,19,28,33,34,35,36,37,38,39,40,49,68,69,71,94,115,116,120,121,122,123,127,128,129,130,140,141,142,143,146,147,148,149,150,151,],[-4,-8,-11,-12,-13,-14,-15,-29,-2,-5,-6,-7,-9,-10,-73,-74,-3,-3,-31,96,116,-3,-30,-3,128,-28,-25,140,-16,141,-24,-32,-22,-3,-3,-27,-26,-23,-3,151,-17,]),'DEFAULT':([3,7,15,16,17,18,19,28,33,34,35,36,37,38,39,40,69,116,122,123,128,130,140,141,143,147,148,151,],[-4,-8,-11,-12,-13,-14,-15,-29,-2,-5,-6,-7,-9,-10,-73,-74,-31,-30,131,-25,-16,-24,-32,-22,-3,-26,-23,-17,]),'CASE':([3,7,15,16,17,18,19,28,33,34,35,36,37,38,39,40,69,116,117,122,123,128,130,140,141,143,147,148,151,],[-4,-8,-11,-12,-13,-14,-15,-29,-2,-5,-6,-7,-9,-10,-73,-74,-31,-30,124,124,-25,-16,-24,-32,-22,-3,-26,-23,-17,]),'PYC':([4,5,6,8,9,10,11,42,44,45,54,55,56,58,59,60,61,62,63,64,66,72,75,91,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,144,],[34,35,36,37,38,39,40,-40,-33,-34,-44,-45,-46,-36,-42,-43,-64,-65,-66,-67,-41,97,-35,-57,-39,-47,-54,-55,-56,-48,-49,-50,-51,-52,-53,-58,-59,-60,-61,-62,-63,126,148,]),'PARA':([12,20,21,27,29,31,32,41,43,46,48,51,52,57,65,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,118,124,125,126,],[41,-37,-38,46,48,50,51,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,125,52,52,52,]),'IGUAL':([14,42,139,],[43,65,43,]),'INCREMENTO':([14,139,],[44,44,]),'DECREMENTO':([14,139,],[45,45,]),'ELSE':([28,140,],[47,-32,]),'LLA':([30,47,93,95,98,145,],[49,68,115,117,120,149,]),'RESTA':([41,43,46,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,124,125,126,132,133,134,139,],[57,57,57,57,57,57,80,-44,-45,-46,57,-36,-42,-43,-64,-65,-66,-67,57,80,80,80,80,80,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,80,80,57,-47,80,80,80,-48,-49,-50,-51,-52,-53,80,80,80,80,80,80,80,57,57,57,80,80,80,-67,]),'CARACTER':([41,43,46,48,51,52,57,65,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,124,125,126,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'TRUE':([41,43,46,48,51,52,57,65,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,124,125,126,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'FALSE':([41,43,46,48,51,52,57,65,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,124,125,126,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'ENTERO':([41,43,46,48,51,52,57,65,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,124,125,126,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'CADENAS':([41,43,46,48,51,52,57,65,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,124,125,126,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'DECIMAL':([41,43,46,48,51,52,57,65,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,124,125,126,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'PARC':([44,45,53,54,55,56,58,59,60,61,62,63,64,66,67,70,73,74,91,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,133,134,135,136,137,138,139,],[-33,-34,75,-44,-45,-46,-36,-42,-43,-64,-65,-66,-67,-41,93,95,98,99,-57,-47,-54,-55,-56,-48,-49,-50,-51,-52,-53,-58,-59,-60,-61,-62,-63,144,-20,145,-18,-19,-21,-67,]),'OR':([53,54,55,56,58,59,60,61,62,63,64,66,67,70,73,74,91,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,132,133,134,139,],[76,-44,-45,-46,-36,-42,-43,-64,-65,-66,-67,76,76,76,76,76,76,76,-47,-54,-55,-56,-48,-49,-50,-51,-52,-53,-58,-59,-60,-61,-62,-63,76,76,76,76,-67,]),'AND':([53,54,55,56,58,59,60,61,62,63,64,66,67,70,73,74,91,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,132,133,134,139,],[77,-44,-45,-46,-36,-42,-43,-64,-65,-66,-67,77,77,77,77,77,77,77,-47,77,-55,77,-48,-49,-50,-51,-52,-53,-58,-59,-60,-61,-62,-63,77,77,77,77,-67,]),'XOR':([53,54,55,56,58,59,60,61,62,63,64,66,67,70,73,74,91,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,132,133,134,139,],[78,-44,-45,-46,-36,-42,-43,-64,-65,-66,-67,78,78,78,78,78,78,78,-47,78,-55,-56,-48,-49,-50,-51,-52,-53,-58,-59,-60,-61,-62,-63,78,78,78,78,-67,]),'SUMA':([53,54,55,56,58,59,60,61,62,63,64,66,67,70,73,74,91,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,132,133,134,139,],[79,-44,-45,-46,-36,-42,-43,-64,-65,-66,-67,79,79,79,79,79,79,79,-47,79,79,79,-48,-49,-50,-51,-52,-53,79,79,79,79,79,79,79,79,79,79,-67,]),'MULTIPLICACION':([53,54,55,56,58,59,60,61,62,63,64,66,67,70,73,74,91,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,132,133,134,139,],[81,-44,-45,-46,-36,-42,-43,-64,-65,-66,-67,81,81,81,81,81,81,81,-47,81,81,81,81,81,-50,-51,-52,-53,81,81,81,81,81,81,81,81,81,81,-67,]),'DIVISION':([53,54,55,56,58,59,60,61,62,63,64,66,67,70,73,74,91,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,132,133,134,139,],[82,-44,-45,-46,-36,-42,-43,-64,-65,-66,-67,82,82,82,82,82,82,82,-47,82,82,82,82,82,-50,-51,-52,-53,82,82,82,82,82,82,82,82,82,82,-67,]),'POTENCIA':([53,54,55,56,58,59,60,61,62,63,64,66,67,70,73,74,91,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,132,133,134,139,],[83,-44,-45,-46,-36,-42,-43,-64,-65,-66,-67,83,83,83,83,83,83,83,-47,83,83,83,83,83,83,83,None,None,83,83,83,83,83,83,83,83,83,83,-67,]),'MODULO':([53,54,55,56,58,59,60,61,62,63,64,66,67,70,73,74,91,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,132,133,134,139,],[84,-44,-45,-46,-36,-42,-43,-64,-65,-66,-67,84,84,84,84,84,84,84,-47,84,84,84,84,84,84,84,None,None,84,84,84,84,84,84,84,84,84,84,-67,]),'IGUALACION':([53,54,55,56,58,59,60,61,62,63,64,66,67,70,73,74,91,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,132,133,134,139,],[85,-44,-45,-46,-36,-42,-43,-64,-65,-66,-67,85,85,85,85,85,85,85,-47,85,85,85,-48,-49,-50,-51,-52,-53,-58,-59,-60,-61,-62,-63,85,85,85,85,-67,]),'DIFERENCIACION':([53,54,55,56,58,59,60,61,62,63,64,66,67,70,73,74,91,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,132,133,134,139,],[86,-44,-45,-46,-36,-42,-43,-64,-65,-66,-67,86,86,86,86,86,86,86,-47,86,86,86,-48,-49,-50,-51,-52,-53,-58,-59,-60,-61,-62,-63,86,86,86,86,-67,]),'MENOR':([53,54,55,56,58,59,60,61,62,63,64,66,67,70,73,74,91,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,132,133,134,139,],[87,-44,-45,-46,-36,-42,-43,-64,-65,-66,-67,87,87,87,87,87,87,87,-47,87,87,87,-48,-49,-50,-51,-52,-53,-58,-59,-60,-61,-62,-63,87,87,87,87,-67,]),'MAYOR':([53,54,55,56,58,59,60,61,62,63,64,66,67,70,73,74,91,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,132,133,134,139,],[88,-44,-45,-46,-36,-42,-43,-64,-65,-66,-67,88,88,88,88,88,88,88,-47,88,88,88,-48,-49,-50,-51,-52,-53,-58,-59,-60,-61,-62,-63,88,88,88,88,-67,]),'MENOR_IGUAL':([53,54,55,56,58,59,60,61,62,63,64,66,67,70,73,74,91,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,132,133,134,139,],[89,-44,-45,-46,-36,-42,-43,-64,-65,-66,-67,89,89,89,89,89,89,89,-47,89,89,89,-48,-49,-50,-51,-52,-53,-58,-59,-60,-61,-62,-63,89,89,89,89,-67,]),'MAYOR_IGUAL':([53,54,55,56,58,59,60,61,62,63,64,66,67,70,73,74,91,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,132,133,134,139,],[90,-44,-45,-46,-36,-42,-43,-64,-65,-66,-67,90,90,90,90,90,90,90,-47,90,90,90,-48,-49,-50,-51,-52,-53,-58,-59,-60,-61,-62,-63,90,90,90,90,-67,]),'DOS_PUNTOS':([54,55,56,58,59,60,61,62,63,64,91,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,131,132,],[-44,-45,-46,-36,-42,-43,-64,-65,-66,-67,-57,-47,-54,-55,-56,-48,-49,-50,-51,-52,-53,-58,-59,-60,-61,-62,-63,142,143,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ini':([0,],[1,]),'instrucciones':([0,49,68,115,120,142,143,149,],[2,71,94,121,127,146,147,150,]),'instruccion':([0,2,49,68,71,94,115,120,121,127,142,143,146,147,149,150,],[3,33,3,3,33,33,3,3,33,33,3,3,33,33,3,33,]),'instruccion_print':([0,2,49,68,71,94,115,120,121,127,142,143,146,147,149,150,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'declaracion_variable':([0,2,49,50,68,71,94,115,120,121,127,142,143,146,147,149,150,],[5,5,5,72,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'asignacion_variable':([0,2,49,68,71,94,115,120,121,126,127,142,143,146,147,149,150,],[6,6,6,6,6,6,6,6,6,138,6,6,6,6,6,6,6,]),'estructura_control':([0,2,49,68,71,94,115,120,121,127,142,143,146,147,149,150,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'incremento':([0,2,49,68,71,94,115,120,121,126,127,142,143,146,147,149,150,],[8,8,8,8,8,8,8,8,8,136,8,8,8,8,8,8,8,]),'decremento':([0,2,49,68,71,94,115,120,121,126,127,142,143,146,147,149,150,],[9,9,9,9,9,9,9,9,9,137,9,9,9,9,9,9,9,]),'tipo_print':([0,2,49,68,71,94,115,120,121,127,142,143,146,147,149,150,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'tipo':([0,2,49,50,68,71,94,115,120,121,127,142,143,146,147,149,150,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'instruccion_while':([0,2,49,68,71,94,115,120,121,127,142,143,146,147,149,150,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'instruccion_if':([0,2,47,49,68,71,94,115,120,121,127,142,143,146,147,149,150,],[16,16,69,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'instruccion_switch':([0,2,49,68,71,94,115,120,121,127,142,143,146,147,149,150,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'instruccion_dowhile':([0,2,49,68,71,94,115,120,121,127,142,143,146,147,149,150,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'instruccion_for':([0,2,49,68,71,94,115,120,121,127,142,143,146,147,149,150,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'base_if':([0,2,47,49,68,71,94,115,120,121,127,142,143,146,147,149,150,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'expresion':([41,43,46,48,51,52,57,65,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,124,125,126,],[53,66,67,70,73,74,91,92,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,132,133,134,]),'aritmetica':([41,43,46,48,51,52,57,65,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,124,125,126,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'literal':([41,43,46,48,51,52,57,65,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,124,125,126,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'relacional':([41,43,46,48,51,52,57,65,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,124,125,126,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'lista_case':([117,],[122,]),'case_unico':([117,122,],[123,130,]),'default_opcional':([122,],[129,]),'actualizacion':([126,],[135,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ini","S'",1,None,None,None),
  ('ini -> instrucciones','ini',1,'p_inicio','parser.py',74),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','parser.py',81),
  ('instrucciones -> <empty>','instrucciones',0,'p_instrucciones_empty','parser.py',91),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','parser.py',96),
  ('instruccion -> instruccion_print PYC','instruccion',2,'p_instruccion','parser.py',105),
  ('instruccion -> declaracion_variable PYC','instruccion',2,'p_instruccion','parser.py',106),
  ('instruccion -> asignacion_variable PYC','instruccion',2,'p_instruccion','parser.py',107),
  ('instruccion -> estructura_control','instruccion',1,'p_instruccion','parser.py',108),
  ('instruccion -> incremento PYC','instruccion',2,'p_instruccion','parser.py',109),
  ('instruccion -> decremento PYC','instruccion',2,'p_instruccion','parser.py',110),
  ('estructura_control -> instruccion_while','estructura_control',1,'p_estructura_control','parser.py',121),
  ('estructura_control -> instruccion_if','estructura_control',1,'p_estructura_control','parser.py',122),
  ('estructura_control -> instruccion_switch','estructura_control',1,'p_estructura_control','parser.py',123),
  ('estructura_control -> instruccion_dowhile','estructura_control',1,'p_estructura_control','parser.py',124),
  ('estructura_control -> instruccion_for','estructura_control',1,'p_estructura_control','parser.py',125),
  ('instruccion_while -> WHILE PARA expresion PARC LLA instrucciones LLC','instruccion_while',7,'p_instruccion_while','parser.py',132),
  ('instruccion_for -> FOR PARA declaracion_variable PYC expresion PYC actualizacion PARC LLA instrucciones LLC','instruccion_for',11,'p_instruccion_for','parser.py',144),
  ('actualizacion -> incremento','actualizacion',1,'p_actualizacion','parser.py',164),
  ('actualizacion -> decremento','actualizacion',1,'p_actualizacion','parser.py',165),
  ('actualizacion -> expresion','actualizacion',1,'p_actualizacion','parser.py',166),
  ('actualizacion -> asignacion_variable','actualizacion',1,'p_actualizacion','parser.py',167),
  ('instruccion_switch -> SWITCH PARA expresion PARC LLA lista_case default_opcional LLC','instruccion_switch',8,'p_instruccion_switch','parser.py',173),
  ('instruccion_dowhile -> DO LLA instrucciones LLC WHILE PARA expresion PARC PYC','instruccion_dowhile',9,'p_instruccion_dowhile','parser.py',187),
  ('lista_case -> lista_case case_unico','lista_case',2,'p_lista_case','parser.py',201),
  ('lista_case -> case_unico','lista_case',1,'p_lista_case','parser.py',202),
  ('case_unico -> CASE expresion DOS_PUNTOS instrucciones','case_unico',4,'p_case_unico','parser.py',212),
  ('default_opcional -> DEFAULT DOS_PUNTOS instrucciones','default_opcional',3,'p_default_opcional','parser.py',226),
  ('default_opcional -> <empty>','default_opcional',0,'p_default_opcional','parser.py',227),
  ('instruccion_if -> base_if','instruccion_if',1,'p_instruccion_if','parser.py',235),
  ('instruccion_if -> base_if ELSE LLA instrucciones LLC','instruccion_if',5,'p_instruccion_if','parser.py',236),
  ('instruccion_if -> base_if ELSE instruccion_if','instruccion_if',3,'p_instruccion_if','parser.py',237),
  ('base_if -> IF PARA expresion PARC LLA instrucciones LLC','base_if',7,'p_base_if','parser.py',263),
  ('incremento -> ID INCREMENTO','incremento',2,'p_incremento','parser.py',278),
  ('decremento -> ID DECREMENTO','decremento',2,'p_decremento','parser.py',299),
  ('instruccion_print -> tipo_print PARA expresion PARC','instruccion_print',4,'p_instruccion_print','parser.py',321),
  ('literal -> CARACTER','literal',1,'p_caracter','parser.py',328),
  ('tipo_print -> PRINT','tipo_print',1,'p_tipo_print','parser.py',334),
  ('tipo_print -> PRINTLN','tipo_print',1,'p_tipo_print','parser.py',335),
  ('declaracion_variable -> tipo ID IGUAL expresion','declaracion_variable',4,'p_declaracion_variable','parser.py',341),
  ('declaracion_variable -> tipo ID','declaracion_variable',2,'p_declaracion_variable','parser.py',342),
  ('asignacion_variable -> ID IGUAL expresion','asignacion_variable',3,'p_asignacion_variable','parser.py',355),
  ('literal -> TRUE','literal',1,'p_literal_booleano','parser.py',362),
  ('literal -> FALSE','literal',1,'p_literal_booleano','parser.py',363),
  ('expresion -> aritmetica','expresion',1,'p_expresion','parser.py',371),
  ('expresion -> literal','expresion',1,'p_expresion','parser.py',372),
  ('expresion -> relacional','expresion',1,'p_expresion','parser.py',373),
  ('expresion -> PARA expresion PARC','expresion',3,'p_expresion_parentesis','parser.py',379),
  ('aritmetica -> expresion SUMA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',384),
  ('aritmetica -> expresion RESTA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',385),
  ('aritmetica -> expresion MULTIPLICACION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',386),
  ('aritmetica -> expresion DIVISION expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',387),
  ('aritmetica -> expresion POTENCIA expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',388),
  ('aritmetica -> expresion MODULO expresion','aritmetica',3,'p_expresion_aritmetica','parser.py',389),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica_binaria','parser.py',407),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica_binaria','parser.py',408),
  ('expresion -> expresion XOR expresion','expresion',3,'p_expresion_logica_binaria','parser.py',409),
  ('expresion -> RESTA expresion','expresion',2,'p_expresion_umenos','parser.py',414),
  ('relacional -> expresion IGUALACION expresion','relacional',3,'p_relacional','parser.py',426),
  ('relacional -> expresion DIFERENCIACION expresion','relacional',3,'p_relacional','parser.py',427),
  ('relacional -> expresion MENOR expresion','relacional',3,'p_relacional','parser.py',428),
  ('relacional -> expresion MAYOR expresion','relacional',3,'p_relacional','parser.py',429),
  ('relacional -> expresion MENOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',430),
  ('relacional -> expresion MAYOR_IGUAL expresion','relacional',3,'p_relacional','parser.py',431),
  ('literal -> ENTERO','literal',1,'p_entero','parser.py',449),
  ('literal -> CADENAS','literal',1,'p_cadena','parser.py',456),
  ('literal -> DECIMAL','literal',1,'p_decimal','parser.py',462),
  ('literal -> ID','literal',1,'p_id','parser.py',468),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',474),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',475),
  ('tipo -> STR','tipo',1,'p_tipo','parser.py',476),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',477),
  ('tipo -> BOOL','tipo',1,'p_tipo','parser.py',478),
  ('instruccion -> BREAK PYC','instruccion',2,'p_instruccion_break','parser.py',497),
  ('instruccion -> CONTINUE PYC','instruccion',2,'p_instruccion_continue','parser.py',501),
]
